*{padding:0;margin:0;border:0}*,:after,:before{-webkit-box-sizing:border-box;box-sizing:border-box}aside,footer,header,nav,section{display:block}.info-cash__bonus span sup,html{font-size:16px}body,html{height:100%;min-width:320px}body{line-height:1;font-family:"Roboto";-ms-text-size-adjust:100%;-moz-text-size-adjust:100%;-webkit-text-size-adjust:100%;color:#002e6c}button,input,textarea{font:inherit "Roboto"}input::-ms-clear{display:none}button{background:inherit;cursor:pointer}button::-moz-focus-inner{padding:0;border:0}a,a:hover,a:visited{text-decoration:none}ul li{list-style:none}img{vertical-align:top}h1,h2,h3,h4,h5,h6{font-weight:inherit;font-size:inherit}.wrapper,body._lock{overflow:hidden}.wrapper{width:100%;min-height:100%;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}._container{max-width:1120px;margin:0 auto}.header{background:#fff;padding-top:30px;padding-bottom:30px}.header__wrap{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.header__menu{position:relative}.header__burger{display:none}.header__logo img{max-width:100%;height:auto}.menu-top{-webkit-transition:all .2s;-o-transition:all .2s;transition:all .2s}.menu-top__list{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.menu-top__item{margin-right:35px}.menu-top__item:last-child{margin-right:0}.menu-top__item:last-child .menu-top__link{display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;color:#fff;background:#007aff;border-radius:8px;font-weight:500;height:48px;width:200px}.menu-top__item:last-child .menu-top__link:hover{color:#fff;background:#1578e0}.menu-top__link{color:#002e6c;-webkit-transition:all .3s;-o-transition:all .3s;transition:all .3s}.footer a:hover,.menu-top__link:hover{color:#1578e0}.menu-top._active{max-height:500px}.hero{background:url(../img/header-bg.jpg) #002e6c no-repeat center right;background-size:cover;min-height:650px}.hero__wrap{display:-webkit-box;display:-ms-flexbox;display:flex}.hero__item{-webkit-box-flex:0;-ms-flex:0 1 60%;flex:0 1 60%;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding-top:120px;padding-bottom:120px}.hero__title{color:#fff;font-weight:700;margin-bottom:35px;font-size:92px}.hero__subtitle{color:#fff;font-weight:500;font-size:36px;line-height:1.3em;display:inline-block}.cash{background:#fff;padding-top:120px;padding-bottom:120px}.cash__info{margin-top:60px}.cash__title{font-weight:500;margin-bottom:15px;font-size:62px}.cash__subtitle{line-height:1.4em;display:inline-block;font-weight:500;font-size:20px}.info-cash{padding:40px 70px;background:#f2f1f1}.info-cash__title{font-weight:700;text-align:center;margin-left:auto;margin-right:auto;margin-bottom:60px;display:block;line-height:1.2em;text-transform:uppercase;font-size:30px}.info-cash__wrap{display:grid;grid-gap:30px;grid-template-columns:140px 1fr}.info-cash__img{width:140px;height:140px;border-radius:50%;overflow:hidden}.info-cash__img img{width:100%;height:100%}.info-cash__row{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.info-cash__row:first-child{padding-bottom:30px;margin-bottom:30px;border-bottom:3px solid #002e6c}.info-cash__row:last-child .info-cash__col{padding-right:0}.info-cash__row:last-child .info-cash__col:first-child{padding-right:20px}.belay p:last-child,.footer p:last-child,.info-cash__col:last-child,.info-cash__stat:last-child{margin-bottom:0}.info-cash__name{font-size:26px;font-weight:500;margin-bottom:10px}.info-cash__team{font-size:20px}.info-cash__bonus span{text-align:left;font-size:26px;font-weight:500;display:block;white-space:nowrap}.info-cash__bonus span._big{font-weight:700;font-size:115px}.info-cash__stat{margin-bottom:15px}.info-cash__stat_title{font-weight:500;font-size:20px}.stat-cash{display:grid;grid-gap:15px;-webkit-box-align:center;-ms-flex-align:center;align-items:center;grid-template-columns:140px minmax(315px,1fr)}.stat-cash__name{font-size:20px}.stat-cash__row{border-radius:4px;height:32px;width:100%;background:#dedede;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;position:relative;padding:0 10px}.stat-cash__row span{font-weight:700;color:#fff;position:relative;z-index:2;font-size:28px}.stat-cash__row::after{content:"";display:block;position:absolute;z-index:1;left:0;top:0;bottom:0;background:#002e6c;border-radius:4px;width:15%}.stat-cash:nth-child(1) .stat-cash__row::after{width:75%;background:#74aa5c}.stat-cash:nth-child(2) .stat-cash__row::after{width:60%}.stat-cash:nth-child(3) .stat-cash__row::after{width:50%}.stat-cash__annotation{grid-column:2/3;font-size:20px;padding:10px 0}.belay{background:#002e6c}.belay__wrap{display:-webkit-box;display:-ms-flexbox;display:flex}.belay__item{height:100%}.belay__item:first-child{-webkit-box-flex:0;-ms-flex:0 1 38%;flex:0 1 38%;padding-top:110px}.belay__item:last-child{-webkit-box-flex:0;-ms-flex:0 1 62%;flex:0 1 62%}.belay__img{position:relative;right:-90px;text-align:right}.belay__title{color:#fff;font-weight:500;line-height:1.2em;margin-bottom:50px;font-size:62px}.belay p{font-size:20px;color:#fff;margin-bottom:20px;line-height:1.4em}.income{padding-top:110px;padding-bottom:110px;background:#74aa5c}.income__subtitle,.income__title{font-size:62px;color:#fff;font-weight:500;margin-bottom:15px}.income__subtitle{font-size:20px;line-height:1.2em;display:block;margin-bottom:90px}.income__wrap{display:grid;grid-template-columns:1fr minmax(470px,1fr) 1fr;grid-gap:30px;-webkit-box-pack:stretch;-ms-flex-pack:stretch;justify-content:stretch}.income__item:last-child{justify-self:end}.income__img{position:relative;top:20px;-webkit-filter:drop-shadow(16px 22px 50px rgba(0,0,0,.38)) drop-shadow(10px 10px 22px rgba(0,0,0,.17));filter:drop-shadow(16px 22px 50px rgba(0,0,0,.38)) drop-shadow(10px 10px 22px rgba(0,0,0,.17))}.income__img img{max-width:100%}.income-info{position:relative;display:-webkit-box;display:-ms-flexbox;display:flex}.income-info__num{font-size:168px;color:#fff;font-weight:700;line-height:1em}.income-info__num span{font-size:77px}.income-info__pretext{position:relative;top:30px;color:#fff;margin-right:5px;font-size:20px}.income-info__posttext{-webkit-transform:translateY(-120%);-ms-transform:translateY(-120%);transform:translateY(-120%);color:#fff;width:100%;white-space:nowrap;font-weight:400;line-height:1em;font-size:25px}.apply,.apply iframe{background:#f2f1f1}.apply iframe{float:left;width:100%;height:auto;min-height:610px}.footer{background:#002e6c;padding-top:60px;padding-bottom:60px}.footer__item_flex{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;width:100%}.footer__item:last-child{margin-top:75px}.footer__contact a{display:block;text-align:right}.footer a,.footer p{color:#fff;line-height:1.4em;-webkit-transition:all .2s;-o-transition:all .2s;transition:all .2s;font-weight:400;font-size:20px}.footer p{margin-bottom:10px}.footer p a{border-bottom:1px solid rgba(255,255,255,.5)}.page{-webkit-box-flex:1;-ms-flex:1 1 auto;flex:1 1 auto}@supports (-webkit-appearance:none){.hero{background:url(../img/header-bg.webp) #002e6c no-repeat center right}}@media (max-width:1132px){._container{max-width:970px}.header__wrap{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.menu-top{margin-top:20px}.hero__item{-webkit-box-flex:0;-ms-flex:0 1 80%;flex:0 1 80%}.info-cash__wrap{grid-template-columns:1fr}.income__wrap{grid-template-columns:1fr 1fr 1fr}}@media (max-width:1120px){.header{padding-top:calc(15px + 15*((100vw - 320px)/800));padding-bottom:calc(15px + 15*((100vw - 320px)/800))}.hero{min-height:calc(250px + 400*((100vw - 320px)/800))}.hero__item{padding-top:calc(40px + 80*((100vw - 320px)/800));padding-bottom:calc(40px + 80*((100vw - 320px)/800))}.hero__title{font-size:calc(40px + 52*((100vw - 320px)/800))}.hero__subtitle{font-size:calc(20px + 16*((100vw - 320px)/800))}.cash{padding-top:calc(40px + 80*((100vw - 320px)/800));padding-bottom:calc(40px + 80*((100vw - 320px)/800))}.cash__info{margin-top:calc(30px + 30*((100vw - 320px)/800))}.cash__title{font-size:calc(35px + 27*((100vw - 320px)/800))}.cash__subtitle{font-size:calc(14px + 6*((100vw - 320px)/800))}.info-cash{padding-left:calc(20px + 50*((100vw - 320px)/800));padding-right:calc(20px + 50*((100vw - 320px)/800))}.info-cash__title{margin-bottom:calc(30px + 30*((100vw - 320px)/800));font-size:calc(18px + 12*((100vw - 320px)/800))}.info-cash__row:first-child{padding-bottom:calc(15px + 15*((100vw - 320px)/800));margin-bottom:calc(15px + 15*((100vw - 320px)/800))}.info-cash__name{font-size:calc(20px + 6*((100vw - 320px)/800))}.belay p,.footer a,.footer p,.info-cash__stat_title,.info-cash__team,.stat-cash__annotation,.stat-cash__name{font-size:calc(16px + 4*((100vw - 320px)/800))}.info-cash__bonus span{font-size:calc(16px + 10*((100vw - 320px)/800))}.info-cash__bonus span._big{font-size:calc(20px + 95*((100vw - 320px)/800))}.info-cash__bonus span sup{font-size:calc(10px + 6*((100vw - 320px)/800))}.stat-cash__row span{font-size:calc(14px + 14*((100vw - 320px)/800))}.belay__item:first-child{padding-top:calc(40px + 70*((100vw - 320px)/800))}.belay__title{margin-bottom:calc(20px + 30*((100vw - 320px)/800));font-size:calc(30px + 32*((100vw - 320px)/800))}.income{padding-top:calc(40px + 70*((100vw - 320px)/800));padding-bottom:calc(40px + 70*((100vw - 320px)/800))}.income__title{font-size:calc(30px + 32*((100vw - 320px)/800))}.income__subtitle{font-size:calc(16px + 4*((100vw - 320px)/800));margin-bottom:calc(20px + 70*((100vw - 320px)/800))}.income-info__num{font-size:calc(80px + 88*((100vw - 320px)/800))}.income-info__num span{font-size:calc(35px + 42*((100vw - 320px)/800))}.income-info__pretext{font-size:calc(18px + 2*((100vw - 320px)/800))}.income-info__posttext{font-size:calc(18px + 7*((100vw - 320px)/800))}.footer{padding-top:calc(30px + 30*((100vw - 320px)/800));padding-bottom:calc(30px + 30*((100vw - 320px)/800))}.footer__item:last-child{margin-top:calc(30px + 45*((100vw - 320px)/800))}}@media (max-width:991.98px){._container{max-width:750px}.hero__item{-webkit-box-flex:0;-ms-flex:0 1 100%;flex:0 1 100%}.info-cash__img{margin:auto}.info-cash__row:first-child{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.info-cash__row:first-child .info-cash__col{margin-bottom:20px;width:100%}.info-cash__bonus,.info-cash__name,.info-cash__team{text-align:center}.stat-cash__annotation{grid-column:1/3;text-align:center}}@media (max-width:767.98px){._container{max-width:none;padding:0 10px}.header__wrap{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row}.header__burger{display:block;position:relative;width:40px;height:40px;cursor:pointer;z-index:5}.header__burger span{-webkit-transition:all .3s ease 0s;-o-transition:all .3s ease 0s;transition:all .3s ease 0s;top:calc(50% - 1px);left:calc(50% - 15px);width:30px;position:absolute;height:2px;background-color:#002e6c;border-radius:2px}.header__burger span:first-child{top:10px}.header__burger span:last-child{top:auto;bottom:10px}.header__burger._active{border-bottom-left-radius:0;border-bottom-right-radius:0}.header__burger._active span{-webkit-transform:scale(0);-ms-transform:scale(0);transform:scale(0)}.header__burger._active span:first-child{-webkit-transform:rotate(-45deg);-ms-transform:rotate(-45deg);transform:rotate(-45deg);top:calc(50% - 1px)}.header__burger._active span:last-child{-webkit-transform:rotate(45deg);-ms-transform:rotate(45deg);transform:rotate(45deg);bottom:calc(50% - 1px)}.menu-top__list{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;background:#f2f1f1;padding:20px;-webkit-box-align:start;-ms-flex-align:start;align-items:start}.menu-top__item:last-child{margin-right:0;margin-bottom:0}.menu-top__item{margin-right:0;margin-bottom:20px}.menu-top{overflow:hidden;position:absolute;top:86px;right:-10px;width:330px;max-height:0;margin-top:0}.hero{background-position:center center}.info-cash__row:last-child .info-cash__col:last-child{-webkit-box-flex:1;-ms-flex:1 1 100%;flex:1 1 100%}.info-cash__bonus span._big{font-size:24px}.info-cash__bonus span{font-size:16px}.stat-cash{grid-template-columns:100px 1fr}.belay__wrap{display:block}.belay__item:first-child{-webkit-box-flex:0;-ms-flex:0 1 100%;flex:0 1 100%;padding-bottom:80px}.belay__item:last-child{display:none}.income__wrap{grid-template-columns:1fr;grid-auto-flow:row;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.income__item:last-child{justify-self:center}.income__item{justify-self:center}.income__img{width:50%;margin:auto;top:-10px}}@media (max-width:767.98px) and (max-width:1120px){.menu-top{top:calc(58px + 28*((100vw - 320px)/800))}.info-cash__bonus span._big{font-size:calc(20px + 4*((100vw - 320px)/800))}.belay__item:first-child{padding-bottom:calc(40px + 40*((100vw - 320px)/800))}}@media (max-width:479.98px){.header__logo{max-width:70vw}.cash__subtitle,.cash__title,.hero__item{text-align:center}.info-cash__bonus span sup{font-size:10px}.stat-cash{grid-template-rows:auto auto;grid-template-columns:1fr;grid-gap:5px}.belay p,.belay__title,.footer p,.footer__contact a,.income-info__num,.income__subtitle,.income__title{text-align:center}.income-info__pretext{text-align:center;margin-right:0;margin-bottom:5px;top:0}.income-info{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.footer__logo{margin-bottom:20px}.footer__item_flex{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */