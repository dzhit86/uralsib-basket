*{padding:0;margin:0;border:0}*,:after,:before{-webkit-box-sizing:border-box;box-sizing:border-box}aside,footer,header,nav,section{display:block}.info-cash__bonus span sup,html{font-size:16px}body,html{height:100%;min-width:320px}body{line-height:1;font-family:"Roboto";-ms-text-size-adjust:100%;-moz-text-size-adjust:100%;-webkit-text-size-adjust:100%;color:#002e6c}button,input,textarea{font:inherit "Roboto"}input::-ms-clear{display:none}button{background:inherit;cursor:pointer}button::-moz-focus-inner{padding:0;border:0}a,a:hover,a:visited{text-decoration:none}ul li{list-style:none}img{vertical-align:top}h1,h2,h3,h4,h5,h6{font-weight:inherit;font-size:inherit}.wrapper,body._lock{overflow:hidden}.wrapper{width:100%;min-height:100%;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}._container{max-width:1120px;margin:0 auto}.header{background:#fff;padding-top:30px;padding-bottom:30px}.header__wrap{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.header__menu{position:relative}.header__burger{display:none}.header__logo img{max-width:100%;height:auto}.menu-top{-webkit-transition:all .2s;-o-transition:all .2s;transition:all .2s}.menu-top__list{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.menu-top__item{margin-right:35px}.menu-top__item:last-child{margin-right:0}.menu-top__item:last-child .menu-top__link{display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;color:#fff;background:#007aff;border-radius:8px;font-weight:500;height:48px;width:200px}.menu-top__item:last-child .menu-top__link:hover{color:#fff;background:#1578e0}.menu-top__link{color:#002e6c;-webkit-transition:all .3s;-o-transition:all .3s;transition:all .3s}.footer a:hover,.menu-top__link:hover{color:#1578e0}.menu-top._active{max-height:500px}.hero{background:url(../img/header-bg.jpg) #002e6c no-repeat center right;background-size:cover;min-height:650px}.hero__wrap{display:-webkit-box;display:-ms-flexbox;display:flex}.hero__item{-webkit-box-flex:0;-ms-flex:0 1 60%;flex:0 1 60%;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding-top:120px;padding-bottom:120px}.hero__title{color:#fff;font-weight:700;margin-bottom:35px;font-size:92px}.hero__subtitle{color:#fff;font-weight:500;font-size:36px;line-height:1.3em;display:inline-block}.cash{background:#fff;padding-top:120px;padding-bottom:120px}.cash__info{margin-top:60px}.cash__title{font-weight:500;margin-bottom:15px;font-size:62px}.cash__subtitle{line-height:1.4em;display:inline-block;font-weight:500;font-size:20px}.info-cash{padding:40px 70px;background:#f2f1f1}.info-cash__title{font-weight:700;text-align:center;margin:0 auto 60px;display:block;line-height:1.2em;text-transform:uppercase;font-size:30px}.info-cash__wrap{display:grid;grid-gap:30px;grid-template-columns:140px 1fr}.info-cash__img{width:140px;height:140px;border-radius:50%;overflow:hidden}.info-cash__img img{width:100%;height:100%}.info-cash__row{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.info-cash__row:first-child{padding-bottom:30px;border-bottom:3px solid #002e6c;margin-bottom:30px}.belay p:last-child,.footer p:last-child,.info-cash__col:last-child,.info-cash__stat:last-child{margin-bottom:0}.info-cash__name{font-size:26px;font-weight:500;margin-bottom:10px}.info-cash__team{font-size:20px}.info-cash__bonus span{font-size:26px;font-weight:500;display:block}.info-cash__bonus span._big{font-weight:700;font-size:115px}.info-cash__stat{margin-bottom:15px}.info-cash__stat_title{font-weight:500;font-size:20px}.stat-cash{display:grid;grid-gap:15px;-webkit-box-align:center;-ms-flex-align:center;align-items:center;grid-template-columns:140px minmax(315px,1fr)}.stat-cash__name{font-size:20px}.stat-cash__row{border-radius:4px;height:32px;width:100%;background:#dedede;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;position:relative;padding:0 10px}.stat-cash__row span{font-weight:700;color:#fff;position:relative;z-index:2;font-size:28px}.stat-cash__row::after{content:"";display:block;position:absolute;z-index:1;left:0;top:0;bottom:0;background:#002e6c;border-radius:4px;width:12%}.stat-cash:nth-child(1) .stat-cash__row::after{width:75%;background:#74aa5c}.stat-cash:nth-child(2) .stat-cash__row::after{width:60%}.stat-cash:nth-child(3) .stat-cash__row::after{width:50%}.stat-cash__annotation{grid-column:2/3;font-size:20px;padding:10px 0}.belay{background:#002e6c}.belay__wrap{display:-webkit-box;display:-ms-flexbox;display:flex}.belay__item{height:100%}.belay__item:first-child{-webkit-box-flex:0;-ms-flex:0 1 38%;flex:0 1 38%;padding-top:110px}.belay__item:last-child{-webkit-box-flex:0;-ms-flex:0 1 62%;flex:0 1 62%}.belay__img{position:relative;right:-90px;text-align:right}.belay__title{color:#fff;font-weight:500;line-height:1.2em;margin-bottom:50px;font-size:62px}.belay p{font-size:20px;color:#fff;margin-bottom:20px;line-height:1.4em}.income{padding-top:110px;padding-bottom:110px;background:#74aa5c}.income__subtitle,.income__title{font-size:62px;color:#fff;font-weight:500;margin-bottom:15px}.income__subtitle{font-size:20px;line-height:1.2em;display:block;margin-bottom:90px}.income__wrap{display:grid;grid-template-columns:1fr minmax(470px,1fr) 1fr;grid-gap:30px;-webkit-box-pack:stretch;-ms-flex-pack:stretch;justify-content:stretch}.income__item:last-child{justify-self:end}.income__img{position:relative;top:20px;-webkit-filter:drop-shadow(16px 22px 50px rgba(0,0,0,.38)) drop-shadow(10px 10px 22px rgba(0,0,0,.17));filter:drop-shadow(16px 22px 50px rgba(0,0,0,.38)) drop-shadow(10px 10px 22px rgba(0,0,0,.17))}.income__img img{max-width:100%}.income-info{position:relative;display:-webkit-box;display:-ms-flexbox;display:flex}.income-info__num{font-size:168px;color:#fff;font-weight:700;line-height:1em}.income-info__num span{font-size:77px}.income-info__pretext{position:relative;top:30px;color:#fff;margin-right:5px;font-size:20px}.income-info__posttext{-webkit-transform:translateY(-120%);-ms-transform:translateY(-120%);transform:translateY(-120%);color:#fff;width:100%;white-space:nowrap;font-weight:400;line-height:1em;font-size:25px}.apply,.apply iframe{background:#f2f1f1}.apply iframe{float:left;width:100%;height:auto;min-height:610px}.footer{background:#002e6c;padding-top:60px;padding-bottom:60px}.footer__item_flex{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;width:100%}.footer__item:last-child{margin-top:75px}.footer__contact a{display:block;text-align:right}.footer a,.footer p{color:#fff;line-height:1.4em;-webkit-transition:all .2s;-o-transition:all .2s;transition:all .2s;font-weight:400;font-size:20px}.footer p{margin-bottom:10px}.footer p a{border-bottom:1px solid rgba(255,255,255,.5)}.page{-webkit-box-flex:1;-ms-flex:1 1 auto;flex:1 1 auto}@supports (-webkit-appearance:none){.hero{background:url(../img/header-bg.webp) #002e6c no-repeat center right}}@media (max-width:1132px){._container{max-width:970px}.header__wrap{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.menu-top{margin-top:20px}.hero__item{-webkit-box-flex:0;-ms-flex:0 1 80%;flex:0 1 80%}.info-cash__wrap{grid-template-columns:1fr}.income__wrap{grid-template-columns:1fr 1fr 1fr}}@media (max-width:1120px){.header{padding-top:calc(15px + 15*((100vw - 320px)/800));padding-bottom:calc(15px + 15*((100vw - 320px)/800))}.hero{min-height:calc(250px + 400*((100vw - 320px)/800))}.hero__item{padding-top:calc(40px + 80*((100vw - 320px)/800));padding-bottom:calc(40px + 80*((100vw - 320px)/800))}.hero__title{font-size:calc(40px + 52*((100vw - 320px)/800))}.hero__subtitle{font-size:calc(20px + 16*((100vw - 320px)/800))}.cash{padding-top:calc(40px + 80*((100vw - 320px)/800));padding-bottom:calc(40px + 80*((100vw - 320px)/800))}.cash__info{margin-top:calc(30px + 30*((100vw - 320px)/800))}.cash__title{font-size:calc(35px + 27*((100vw - 320px)/800))}.cash__subtitle{font-size:calc(14px + 6*((100vw - 320px)/800))}.info-cash{padding-left:calc(20px + 50*((100vw - 320px)/800));padding-right:calc(20px + 50*((100vw - 320px)/800))}.info-cash__title{font-size:calc(18px + 12*((100vw - 320px)/800))}.info-cash__name{font-size:calc(20px + 6*((100vw - 320px)/800))}.belay p,.footer a,.footer p,.info-cash__stat_title,.info-cash__team,.stat-cash__annotation,.stat-cash__name{font-size:calc(16px + 4*((100vw - 320px)/800))}.info-cash__bonus span._big{font-size:calc(80px + 35*((100vw - 320px)/800))}.stat-cash__row span{font-size:calc(18px + 10*((100vw - 320px)/800))}.belay__item:first-child{padding-top:calc(40px + 70*((100vw - 320px)/800))}.belay__title{margin-bottom:calc(20px + 30*((100vw - 320px)/800));font-size:calc(30px + 32*((100vw - 320px)/800))}.income{padding-top:calc(40px + 70*((100vw - 320px)/800));padding-bottom:calc(40px + 70*((100vw - 320px)/800))}.income__title{font-size:calc(30px + 32*((100vw - 320px)/800))}.income__subtitle{font-size:calc(16px + 4*((100vw - 320px)/800));margin-bottom:calc(20px + 70*((100vw - 320px)/800))}.income-info__num{font-size:calc(80px + 88*((100vw - 320px)/800))}.income-info__num span{font-size:calc(35px + 42*((100vw - 320px)/800))}.income-info__pretext{font-size:calc(18px + 2*((100vw - 320px)/800))}.income-info__posttext{font-size:calc(18px + 7*((100vw - 320px)/800))}.footer{padding-top:calc(30px + 30*((100vw - 320px)/800));padding-bottom:calc(30px + 30*((100vw - 320px)/800))}.footer__item:last-child{margin-top:calc(30px + 45*((100vw - 320px)/800))}}@media (max-width:991.98px){._container{max-width:750px}.hero__item{-webkit-box-flex:0;-ms-flex:0 1 100%;flex:0 1 100%}.info-cash__img{margin:auto}.info-cash__row{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.info-cash__col{margin-bottom:20px;width:100%}.info-cash__bonus,.info-cash__name,.info-cash__team{text-align:center}.stat-cash__annotation{grid-column:1/3;text-align:center}}@media (max-width:767.98px){._container{max-width:none;padding:0 10px}.header__wrap{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row}.header__burger{display:block;position:relative;width:40px;height:40px;cursor:pointer;z-index:5}.header__burger span{-webkit-transition:all .3s ease 0s;-o-transition:all .3s ease 0s;transition:all .3s ease 0s;top:calc(50% - 1px);left:calc(50% - 15px);width:30px;position:absolute;height:2px;background-color:#002e6c;border-radius:2px}.header__burger span:first-child{top:10px}.header__burger span:last-child{top:auto;bottom:10px}.header__burger._active{border-bottom-left-radius:0;border-bottom-right-radius:0}.header__burger._active span{-webkit-transform:scale(0);-ms-transform:scale(0);transform:scale(0)}.header__burger._active span:first-child{-webkit-transform:rotate(-45deg);-ms-transform:rotate(-45deg);transform:rotate(-45deg);top:calc(50% - 1px)}.header__burger._active span:last-child{-webkit-transform:rotate(45deg);-ms-transform:rotate(45deg);transform:rotate(45deg);bottom:calc(50% - 1px)}.menu-top__list{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;background:#f2f1f1;padding:20px;-webkit-box-align:start;-ms-flex-align:start;align-items:start}.menu-top__item:last-child{margin-right:0;margin-bottom:0}.menu-top__item{margin-right:0;margin-bottom:20px}.menu-top{overflow:hidden;position:absolute;top:86px;right:-10px;width:330px;max-height:0;margin-top:0}.hero{background-position:center center}.stat-cash{grid-template-columns:140px 1fr}.belay__wrap{display:block}.belay__item:first-child{-webkit-box-flex:0;-ms-flex:0 1 100%;flex:0 1 100%;padding-bottom:80px}.belay__item:last-child{display:none}.income__wrap{grid-template-columns:1fr;grid-auto-flow:row;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.income__item:last-child{justify-self:center}.income__item{justify-self:center}.income__img{width:50%;margin:auto;top:-10px}}@media (max-width:767.98px) and (max-width:1120px){.menu-top{top:calc(58px + 28*((100vw - 320px)/800))}.belay__item:first-child{padding-bottom:calc(40px + 40*((100vw - 320px)/800))}}@media (max-width:479.98px){.header__logo{max-width:70vw}.cash__subtitle,.cash__title,.hero__item{text-align:center}.stat-cash{grid-template-rows:auto auto;grid-template-columns:1fr;grid-gap:5px}.belay p,.belay__title,.footer p,.footer__contact a,.income-info__num,.income__subtitle,.income__title{text-align:center}.income-info__pretext{text-align:center;margin-right:0;margin-bottom:5px;top:0}.income-info{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.footer__logo{margin-bottom:20px}.footer__item_flex{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByZXNldHMvbnVsbC5zY3NzIiwibWFpbi5taW4uY3NzIiwibWFpbi5zY3NzIiwibWFpbi5jc3MiLCJibG9ja3MvaGVhZGVyLnNjc3MiLCJwcmVzZXRzL21peGlucy5zY3NzIiwiYmxvY2tzL2Nhc2hTZWN0aW9uLnNjc3MiLCJibG9ja3MvdG9wU2VjdGlvbi5zY3NzIiwiYmxvY2tzL2JlbGF5U2VjdGlvbi5zY3NzIiwiYmxvY2tzL2luY29tZVNlY3Rpb24uc2NzcyIsImJsb2Nrcy9hcHBseVNlY3Rpb24uc2NzcyIsImJsb2Nrcy9mb290ZXIuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxDLENBQ0MsUyxDQUNBLFEsQ0FDQSxRLENBSEQsQyxDQ1FBLE0sQ0FEQSxPLENERUMsNkIsQ0FDQSxxQixDQVVELEssQ0NMQSxNLENBQ0EsTSxDQUZBLEcsQ0FHQSxPLENEUUMsYSxDQzBXRCwwQixDRHhXQSxJLENBQ0MsYyxDQ0ZELEksQ0RJQSxJLENBRUMsVyxDQUNBLGUsQ0FFRCxJLENBQ0MsYSxDQUNBLG9CLENBRUEseUIsQ0FDQSwwQixDQUNBLDZCLENFRUQsYSxDREhBLE0sQ0RHQSxLLENDRkEsUSxDREtDLHFCLENDREQsZ0IsQ0RJQSxZLENDQUEsTSxDREdBLGtCLENBQ0MsYyxDQ0NELHdCLENERUEsUyxDQUNDLFEsQ0NFRCxDLENBS0EsTyxDREpBLFMsQ0NDRSxvQixDQU9GLEssQ0REQSxlLENDS0EsRyxDREZBLGtCLENDTUEsRSxDREhBLEUsQ0NLQSxFLENBQ0EsRSxDQUNBLEUsQ0FDQSxFLENBQ0UsbUIsQ0RIRCxpQixDRTNCRCxRLENBUEMsVSxDQUNDLGUsQ0FNRixRLENBQ0MsVSxDQUNBLGUsQ0FFQSxtQixDQUFBLG1CLENBQUEsWSxDQUNBLDJCLENBQUEsNEIsQ0Q4Q0MseUIsQ0FDQSxxQixDQUdGLFcsQ0N6Q0MsZ0IsQ0N1Q0QsYSxDRnFEQSxPLENBQ0UsZSxDQUNBLGdCLENBQ0EsbUIsQ0FHRixhLENBQ0UsbUIsQ0FDQSxtQixDQUNBLFksQ0FDQSx3QixDQUNBLHFCLENBQ0Esa0IsQ0d0S0Ysd0IsQ0E4Q0EscUIsQ0FDQyw2QixDRHlIRCxhLENFdElFLGlCLENKOElGLGUsQ0VIQSxZLENGT0EsaUIsQ0VIRSxjLENBQ0YsVyxDRk9BLFMsQ0d0SUUsMEIsQ0FDQSxxQixDSHdJQSxrQixDQUdGLGUsQ0FDRSxtQixDRVRGLG1CLENDaklFLFksQ0FKRCx3QixDSGtKQyxxQixDQUNBLGtCLENBR0YsZSxDRVpBLGlCLENGZ0JBLDBCLENBQ0UsYyxDQUdGLDBDLENFZkEsMEIsQ0NwSUMsMEIsQ0FDQyxtQixDRHNJRix3QixDQ3BJQyxxQixDQUNDLGtCLENEc0lGLHVCLENDcklFLG9CLENBRkQsc0IsQ0gwSkMsVSxDQUNBLGtCLENBQ0EsaUIsQ0FDQSxlLENBQ0EsVyxDQUNBLFcsQ0FHRixnRCxDQUNFLFUsQ0FDQSxrQixDQUdGLGUsQ0FDRSxhLENBQ0EsMEIsQ0FDQSxxQixDQUNBLGtCLENLMUhFLGUsQ0w2SEoscUIsQ0VqQkUsYSxDRnFCRixpQixDRWpCRSxnQixDRnFCRixLLENFakJFLG1FLENDeElFLHFCLENINEpGLGdCLENBR0YsVyxDRzdKSyxtQixDSCtKSCxtQixDQUNBLFksQ0FHRixXLENHL0pLLGtCLENIaUtILGdCLENBQ0EsWSxDQUNBLHdCLENBQ0EscUIsQ0V2QkEsa0IsQ0FDRixpQixDQ3JJRSxvQixDRHlJRixZLENDcklFLFUsQ0FMRCxlLENIcUtDLGtCLENFdkJBLGMsQ0NuSUYsZSxDQUNDLFUsQ0FBQSxlLENBQUEsYyxDRHVJRCxpQixDQ3RJQyxvQixDSG9LRCxLLENHbEtFLGUsQ0hvS0EsaUIsQ0FDQSxvQixDQUdGLFcsQ0FDRSxlLENBR0YsWSxDQUNFLGUsQ0FDQSxrQixDQUNBLGMsQ0FHRixlLENFbENBLGlCLENDdklDLG9CLENBQ0MsZSxDRHlJRixjLENBR0EsVSxDQ3pJRyxpQixDQUNDLGtCLENIZ0xKLGlCLENBQ0UsZSxDQUNBLGlCLENHaExFLGtCLENIa0xGLGEsQ0FDQSxpQixDR2xMRSx3QixDQUNBLGMsQ0hzTEosZ0IsQ0dsTEksWSxDRDJJSixhLENDMUlJLCtCLENEOElKLGUsQ0N6SUcsVyxDQWpCRCxZLENIc01BLGlCLENBQ0EsZSxDR2pMQSxtQixDQXhCRCxVLENIOE1DLFcsQ0V0Q0YsZSxDQzNJQyxtQixDQUNDLG1CLENBQ0EsWSxDQUFBLHVCLENBQUEsb0IsQ0Q2SUYsc0IsQ0M1SUUsd0IsQ0FDQyxxQixDRDhJSCw2QixDRjhDQSwyQixDRTFDRSxtQixDQUNGLCtCLENDN0lDLGtCLENIMFZELG1CLENBbUpBLG9CLENBalRBLDBCLENBc0NBLDJCLENBckNFLGUsQ0FHRixnQixDQUNFLGMsQ0UxQ0EsZSxDQUNGLGtCLENGOENBLGdCLENFMUNFLGMsQ0Y4Q0Ysc0IsQ0UxQ0EsYyxDRjRDRSxlLENNMVhGLGEsQ044WEEsMkIsQ0UxQ0EsZSxDRTlTRSxlLENKaVdGLGdCLENNbFlRLGtCLENOc1lSLHNCLENBQ0UsZSxDQUNBLGMsQ0l2V0EsVSxDRS9CRSxZLENOK1lGLGEsQ0VoREEsd0IsQ0FDRixxQixDRWpVRSxrQixDRS9CRSw2QyxDSnFXSixnQixDSWhXUSxjLENOcVpSLGUsQ0FDRSxpQixDRWxEQSxXLENBQ0YsVSxDSWxXUSxrQixDQVJKLG1CLENOZ2FGLG1CLENBQ0EsWSxDQUNBLHdCLENFcERBLHFCLENBQ0Ysa0IsQ0lwV1EsaUIsQ0FYSixjLENKb1hKLG9CLENJcldJLGUsQ0FDSSxVLENBQ0EsaUIsQ0FDQSxTLENGVE4sYyxDSndhRixzQixDQUNFLFUsQ0VwREEsYSxDQUNGLGlCLENJMVdJLFMsQ0FDSSxNLENBQ0EsSyxDRmROLFEsQ0VnQk0sa0IsQ0FDQSxpQixDSjRXUixTLENGd0RBLDhDLENFcERFLFMsQ0FDRixrQixDRndEQSw4QyxDRXBERSxTLENHdFpGLDhDLENBQ0ksUyxDSDRaSixzQixDRXZYRSxlLENDdENGLGMsQ0xxZEUsYyxDSS9hQSxNLENDdENGLGtCLENIdWFBLFksQ0duYUksbUIsQ0RpQ0YsbUIsQ0ZxWUYsWSxDRndEQSxZLENFcERFLFcsQ0Z3REYsd0IsQ0s3ZFEsa0IsQ0RPTixnQixDRm9hRixZLENFbmFFLGlCLENKNGRGLHVCLENFcERBLGtCLENHOWFRLGdCLENBSkosWSxDSHViSixXLENHL2FJLGlCLENBQ0ksVyxDQUNBLGdCLENIbWJSLGEsQ0VuYkUsVSxDQ0ZFLGUsQ0w2ZUYsaUIsQ0VwREEsa0IsQ0FDRixjLENGd0RBLFEsQ0VwREUsYyxDQUNGLFUsQ0ZzREUsa0IsQ0sxZUYsaUIsQ0RZRSxPLENDWkYsaUIsQ0xvZkUsb0IsQ0VwREEsa0IsQ0YrREYsaUIsQ0FQQSxjLENBQ0UsYyxDRXBEQSxVLENBQ0YsZSxDR2hjSSxrQixDTHlmSixpQixDS3JmUSxjLENBRUEsaUIsQ0htY1IsYSxDRXhkRSxrQixDSmloQkYsYSxDRXBEQSxZLENHcmNJLCtDLENBQ0ksYSxDQUNBLHdCLENBQ0EscUIsQ0h1Y1IsdUIsQ0Z3REEsd0IsQ0VwREUsZ0IsQ0Z3REYsWSxDSzVmUSxpQixDQUNBLFEsQ0FDQSxzRyxDSHljUiw4RixDRndEQSxnQixDRXBEQSxjLENGd0RBLFksQ0VwREUsaUIsQ0FDRixtQixDR3pjSSxtQixDQUNJLFksQ0xrZ0JSLGlCLENBQ0UsZSxDQUNBLFUsQ0tsZ0JNLGUsQ0xvZ0JOLGUsQ0tuZ0JNLHNCLENBQ0ksYyxDSDhjWixxQixDR3pjUSxpQixDQVZKLFEsQ0xpaEJGLFUsQ0FDQSxnQixDQUNBLGMsQ0FHRixzQixDQUNFLG1DLENFL0RBLCtCLENBQ0YsMkIsQ0d6Y1EsVSxDQURKLFUsQ0w2Z0JGLGtCLENBQ0EsZSxDRS9EQSxlLENBQ0YsYyxDQUdBLE0sQ0ZvRUEsYSxDSzlnQkksa0IsQ0w4Z0JKLGEsQ0UvREEsVSxDRXBoQkUsVSxDQ3FFRSxXLENMa2hCRixnQixDQUlGLE8sQ0FDRSxrQixDRS9EQSxnQixDQUNGLG1CLENBR0Esa0IsQ0VqaUJFLG1CLENDNkVFLG1CLENMdWhCRixZLENFL0RBLHdCLENBQ0YscUIsQ0d2ZFEsa0IsQ0FGSix3QixDTDRoQkYscUIsQ0UvREEsNkIsQ0FDRixVLENGbUVBLHdCLENLdmhCWSxlLENMMmhCWixrQixDSW5uQkUsYSxDRnFqQkYsZ0IsQ0ZtRUEsUyxDQUNBLFMsQ0UvREEsVSxDRzdkWSxpQixDQUNJLDBCLENIK2RoQixxQixDRzVkUSxrQixDQWJKLGUsQ0w0aUJGLGMsQ0FPRixTLENJdm9CRSxrQixDQzJHTSxXLENBQ0ksNEMsQ0FLWixLLENBQ0ksa0IsQ0FDQSxpQixDQUNBLGEsQ0xxaUJKLFdLcGlCSSx1QixFSG1lSixLLENHbGVJLHNFLEFMeWlCSiwwQkFDRSxXLENFakVBLGUsQ0dyZU0sYSxDQUNBLDJCLENBQ0EsNEIsQ0FDQSx5QixDQUNBLHFCLENBQ0EsUyxDTDZpQkosZSxDSzNpQkksVyxDSHllUixrQixDR3hlUSxnQixDQUNJLFksQ0FHQSxnQixDRHRJVix5QixDQ2tJTSxhLENEaElMLG1DLEFKZ3NCSCwwQktuakJZLE8sQ0FDQSxpRCxDSGtmWixvRCxDR3hlZ0IsSyxDSDRlaEIsa0QsQ0FHQSxXLENHbGVZLGlELENBTUosb0QsQ0hvZVIsWSxDRWhwQkUsK0MsQ0ZvcEJBLGUsQ0FDRiwrQyxDRnlFRSxLLENLN2lCVSxpRCxDQWpFWixvRCxDSGdqQkEsVyxDR3plSSxnRCxDTG1qQkYsWSxDS2hqQk0sK0MsQ0xvakJOLGUsQ08vdkJGLDhDLENBRUksVSxDQUNJLGtELENBQ0EsbUQsQ0wrckJOLGlCLENBQ0YsK0MsQ0FHQSxnQixDSzdyQlEsOEMsQ0FvQkosUSxDSFFGLFMsQ0l0Q0YsUyxDRGFZLHNCLENQc3dCVixnQixDRXhERixzQixDRm9FRSxnQixDSTF2QkEsOEMsQ0czQk0sMkIsQ0g2QkwsK0MsQ0FERCxvQixDRzVCTSwrQyxDUGl5Qk4sd0IsQ0U3RUYsaUQsQ0ZpRkUsYSxDRTdFQSxtRCxDS3ZzQk0sK0MsQ0hVTixPLENBckJBLGlELENBdUJDLG9ELENBdEJELGMsQ0dhRSwrQyxDTDJ0QkosaUIsQ0tydEJRLDhDLENMMHRCUixtRCxDS3B0QlEsaUIsQ0FDQSwrQyxDSDFCTixzQixDR3VCRSwrQyxDTGl1QkoscUIsQ0s1dEJRLDhDLENBR0Esc0IsQ0FSSiw4QyxDTHl1QkosTyxDRitFSSxpRCxDUTUxQkEsb0QsQ0FKSix3QixDSnVDRyxrRCxBRmd3QkgsNEJFdHhCRSxXLENJWk0sZSxDTnV5QlIsVyxDTWx5Qlksa0IsQ0FMSixpQixDQU1RLGEsQ0FHUixlLENKRU4sVyxDSUVVLGUsQ0FDQSwyQixDSmtCViw0QixDRm94QkYseUIsQ0V4eUJFLHFCLENJSE0sd0IsQ0pJTCxxQixDRjJ5QkQsa0IsQ00veUJNLGUsQ0p5Qkwsa0IsQ0YyeEJELFUsQ01yeUJVLGlCLENBZkosZ0IsQ0FXQSxnQixDQUhRLGlCLENBUUosc0IsQ0FMSixlLENBTVEsbUIsQVIwNEJoQiw0QkFDRSxXLENFakZBLGMsQ0FDRixjLENBR0EsYSxDTW56QmdCLDZCLENBRkosNEIsQ0FHUSxzQixDTnN6QmxCLGtCLENNMXpCTSxlLENBUVEsYSxDTnV6QmQsaUIsQ0FDRixVLENNcnpCUSxXLENBQ0ksYyxDQUNBLFMsQ053ekJaLG9CLENNdHpCWSxrQyxDQUNJLDZCLENOd3pCaEIsMEIsQ010ekJZLG1CLENBUEoscUIsQ0FRUSxVLENBQ0EsaUIsQ0FDQSxVLENOeXpCZCx3QixDQUNGLGlCLENNcHpCSSxnQyxDQUNBLFEsQ053ekJKLCtCLENNdnpCSSxRLENKcERGLFcsQ0l3RE0sdUIsQ055ekJSLDJCLENFaDNCRSw0QixDRm8zQkEsNEIsQ0FDRiwwQixDTTd6QlEsc0IsQ0p6RE4sa0IsQ0l5RE0sd0MsQ0p2REwsZ0MsQ0YyM0JELDRCLENBQ0Ysd0IsQ01sMEJRLG1CLENOczBCTix1QyxDQUNGLCtCLENNbjBCSSwyQixDQUNJLHVCLENBQ0Esc0IsQ0psRU4sZSxDRjA0QkYsMkIsQ0V6NEJFLDRCLENJK0RFLHlCLENKOURELHFCLENGNDRCRCxrQixDQUNGLFksQ016MEJRLHVCLENBTkosb0IsQ0FPUSxpQixDUm02QlYsMEIsQ0VwRkEsYyxDQUNGLGUsQ0Z3RkUsZSxDQUNFLGMsQ1FqNkJJLGtCLENBR0EsUyxDQUNBLGUsQ0puRk4saUIsQ0ZnNkJGLFEsQ0UvNUJFLFcsQ0k0RUUsVyxDSjNFRCxZLENGazZCRCxZLENNbjNCRixLLENBc0NRLGlDLENSMjZCTixVLENFekZBLCtCLENPejdCRixZLENBQ0ksYSxDQUVJLHdCLENBQ0Esa0IsQ0FDQSxpQixDQUNBLGEsQ0FDQSxtQixDQ1BSLHVCLENBQ0ksWSxDUjA4QkosYSxDRXI2QkUseUIsQ010Q0Ysa0IsQ051Q0csdUIsQ0Z3NkJELG9CLENBQ0Ysc0IsQ0Y2RkUsd0IsQ0V6RkEsbUIsQ1FoOUJFLGEsQ0FFUSxtQixDQUlKLFksQ0FDSSxTLENBQUEsVyxDQUFBLFcsQVJxOUJaLG1EUWo5QlksUyxDQUxKLHlDLENWMmpDTix3QixDQUNFLHNELEFBUUosNEJFbEdFLGEsQ0FDRixjLENRNThCUSxlLENWc2pDTixZLENVN2pDVSxXLENSdTlCWixpQixDUTk4QlEsVSxDQUNBLDRCLENOcEJOLHlCLENGNitCRixZLENRcDlCWSxRLENWNGpDVixhLENBaURBLFMsQ0FKQSxrQixDRWxJRixpQixDUS85QlEsaUIsQ1J1OUJSLGMsQ0FQRSxpQixDRndIQSxxQixDQ3BoQ0YsaUIsQ0FDQyxjLENEc2hDRyxpQixDQUNBLEssQ0VwR0osWSxDQUNBLDJCLENGd0dJLDRCLENFdEdILHlCLENGd0dHLHFCLENFcEdKLGEsQ0Z3R0ksa0IsQ0VwR0gsa0IsQ0Z3R0csMkIsQ0V0R0osNEIsQ0Z3R0kseUIsQ0V0R0osdUIiLCJmaWxlIjoibWFpbi5taW4uY3NzIiwic291cmNlc0NvbnRlbnQiOlsiKiB7XHJcblx0cGFkZGluZzogMHB4O1xyXG5cdG1hcmdpbjogMHB4O1xyXG5cdGJvcmRlcjogMHB4O1xyXG59XHJcbiosXHJcbio6YmVmb3JlLFxyXG4qOmFmdGVyIHtcclxuXHQtbW96LWJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcblx0LXdlYmtpdC1ib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG5cdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbn1cclxuOmZvY3VzLFxyXG46YWN0aXZlIHtcclxuXHQvLyBvdXRsaW5lOiBub25lO1xyXG59XHJcbmE6Zm9jdXMsXHJcbmE6YWN0aXZlIHtcclxuXHQvLyBvdXRsaW5lOiBub25lO1xyXG59XHJcbmFzaWRlLFxyXG5uYXYsXHJcbmZvb3RlcixcclxuaGVhZGVyLFxyXG5zZWN0aW9uIHtcclxuXHRkaXNwbGF5OiBibG9jaztcclxufVxyXG5odG1sIHtcclxuXHRmb250LXNpemU6ICN7JGZvbnRTaXplICsgcHh9O1xyXG59XHJcbmh0bWwsXHJcbmJvZHkge1xyXG5cdGhlaWdodDogMTAwJTtcclxuXHRtaW4td2lkdGg6ICRtaW5XaWR0aDtcclxufVxyXG5ib2R5IHtcclxuXHRsaW5lLWhlaWdodDogMTtcclxuXHRmb250LWZhbWlseTogJGZvbnRGYW1pbHk7XHJcblx0Ly90ZXh0LXJlbmRlcmluZzogb3B0aW1pemVMZWdpYmlsaXR5O1xyXG5cdC1tcy10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xyXG5cdC1tb3otdGV4dC1zaXplLWFkanVzdDogMTAwJTtcclxuXHQtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XHJcbn1cclxuaW5wdXQsXHJcbmJ1dHRvbixcclxudGV4dGFyZWEge1xyXG5cdGZvbnQtZmFtaWx5OiAkZm9udEZhbWlseTtcclxuXHRmb250LXNpemU6IGluaGVyaXQ7XHJcbn1cclxuaW5wdXQ6Oi1tcy1jbGVhciB7XHJcblx0ZGlzcGxheTogbm9uZTtcclxufVxyXG5idXR0b24ge1xyXG5cdGN1cnNvcjogcG9pbnRlcjtcclxuXHRiYWNrZ3JvdW5kLWNvbG9yOiBpbmhlcml0O1xyXG59XHJcbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lciB7XHJcblx0cGFkZGluZzogMDtcclxuXHRib3JkZXI6IDA7XHJcbn1cclxuYSxcclxuYTp2aXNpdGVkIHtcclxuXHR0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbn1cclxuYTpob3ZlciB7XHJcblx0dGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG59XHJcbnVsIGxpIHtcclxuXHRsaXN0LXN0eWxlOiBub25lO1xyXG59XHJcbmltZyB7XHJcblx0dmVydGljYWwtYWxpZ246IHRvcDtcclxufVxyXG5oMSxcclxuaDIsXHJcbmgzLFxyXG5oNCxcclxuaDUsXHJcbmg2IHtcclxuXHRmb250LXdlaWdodDogaW5oZXJpdDtcclxuXHRmb250LXNpemU6IGluaGVyaXQ7XHJcbn1cclxuLy8td2Via2l0LW92ZXJmbG93LXNjcm9sbGluZzogdG91Y2g7XHJcbi8vYW5pbWF0aW9uLXBsYXktc3RhdGU6IHBhdXNlZCAhaW1wb3J0YW50O1xyXG4iLCIqIHtcbiAgcGFkZGluZzogMHB4O1xuICBtYXJnaW46IDBweDtcbiAgYm9yZGVyOiAwcHg7XG59XG5cbiosXG4qOmJlZm9yZSxcbio6YWZ0ZXIge1xuICAtd2Via2l0LWJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbmFzaWRlLFxubmF2LFxuZm9vdGVyLFxuaGVhZGVyLFxuc2VjdGlvbiB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG5odG1sIHtcbiAgZm9udC1zaXplOiAxNnB4O1xufVxuXG5odG1sLFxuYm9keSB7XG4gIGhlaWdodDogMTAwJTtcbiAgbWluLXdpZHRoOiAzMjBweDtcbn1cblxuYm9keSB7XG4gIGxpbmUtaGVpZ2h0OiAxO1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgLW1zLXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XG4gIC1tb3otdGV4dC1zaXplLWFkanVzdDogMTAwJTtcbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xufVxuXG5pbnB1dCxcbmJ1dHRvbixcbnRleHRhcmVhIHtcbiAgZm9udDogaW5oZXJpdCBcIlJvYm90b1wiO1xufVxuXG5pbnB1dDo6LW1zLWNsZWFyIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuYnV0dG9uIHtcbiAgYmFja2dyb3VuZDogaW5oZXJpdDtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIge1xuICBwYWRkaW5nOiAwO1xuICBib3JkZXI6IDA7XG59XG5cbmEsXG5hOnZpc2l0ZWQge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5cbmE6aG92ZXIge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5cbnVsIGxpIHtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbn1cblxuaW1nIHtcbiAgdmVydGljYWwtYWxpZ246IHRvcDtcbn1cblxuaDEsXG5oMixcbmgzLFxuaDQsXG5oNSxcbmg2IHtcbiAgZm9udC13ZWlnaHQ6IGluaGVyaXQ7XG4gIGZvbnQtc2l6ZTogaW5oZXJpdDtcbn1cblxuYm9keSB7XG4gIGNvbG9yOiAjMDAyRTZDO1xufVxuXG5ib2R5Ll9sb2NrIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLndyYXBwZXIge1xuICB3aWR0aDogMTAwJTtcbiAgbWluLWhlaWdodDogMTAwJTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAtd2Via2l0LWJveC1kaXJlY3Rpb246IG5vcm1hbDtcbiAgLW1zLWZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG59XG5cbi5fY29udGFpbmVyIHtcbiAgbWF4LXdpZHRoOiAxMTIwcHg7XG4gIG1hcmdpbjogMCBhdXRvO1xufVxuXG4vKlxuLy9CdXJnZXJcbi5pY29uLW1lbnUge1xuXHRkaXNwbGF5OiBub25lO1xuXHRAbWVkaWEgKG1heC13aWR0aDogJG1kMytweCkge1xuXHRcdGRpc3BsYXk6IGJsb2NrO1xuXHRcdHBvc2l0aW9uOiBhYnNvbHV0ZTtcblx0XHR0b3A6IDE4cHg7XG5cdFx0cmlnaHQ6IDEwcHg7XG5cdFx0d2lkdGg6IDMwcHg7XG5cdFx0aGVpZ2h0OiAxOHB4O1xuXHRcdGN1cnNvcjogcG9pbnRlcjtcblx0XHR6LWluZGV4OiA1O1xuXHRcdHNwYW4ge1xuXHRcdFx0dHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZSAwcztcblx0XHRcdHRvcDogY2FsYyg1MCUgLSAxcHgpO1xuXHRcdFx0bGVmdDogMHB4O1xuXHRcdFx0cG9zaXRpb246IGFic29sdXRlO1xuXHRcdFx0d2lkdGg6IDEwMCU7XG5cdFx0XHRoZWlnaHQ6IDJweDtcblx0XHRcdGJhY2tncm91bmQtY29sb3I6ICMwMDA7XG5cdFx0XHQmOmZpcnN0LWNoaWxkIHtcblx0XHRcdFx0dG9wOiAwcHg7XG5cdFx0XHR9XG5cdFx0XHQmOmxhc3QtY2hpbGQge1xuXHRcdFx0XHR0b3A6IGF1dG87XG5cdFx0XHRcdGJvdHRvbTogMHB4O1xuXHRcdFx0fVxuXHRcdH1cblx0XHQmLl9hY3RpdmUge1xuXHRcdFx0c3BhbiB7XG5cdFx0XHRcdHRyYW5zZm9ybTogc2NhbGUoMCk7XG5cdFx0XHRcdCY6Zmlyc3QtY2hpbGQge1xuXHRcdFx0XHRcdHRyYW5zZm9ybTogcm90YXRlKC00NWRlZyk7XG5cdFx0XHRcdFx0dG9wOiBjYWxjKDUwJSAtIDFweCk7XG5cdFx0XHRcdH1cblx0XHRcdFx0JjpsYXN0LWNoaWxkIHtcblx0XHRcdFx0XHR0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7XG5cdFx0XHRcdFx0Ym90dG9tOiBjYWxjKDUwJSAtIDFweCk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cbn1cbiovXG5cbi5oZWFkZXIge1xuICBiYWNrZ3JvdW5kOiAjZmZmO1xuICBwYWRkaW5nLXRvcDogMzBweDtcbiAgcGFkZGluZy1ib3R0b206IDMwcHg7XG59XG5cbi5oZWFkZXJfX3dyYXAge1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtYm94LWFsaWduOiBjZW50ZXI7XG4gIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIC13ZWJraXQtYm94LXBhY2s6IGp1c3RpZnk7XG4gIC1tcy1mbGV4LXBhY2s6IGp1c3RpZnk7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2Vlbjtcbn1cblxuLmhlYWRlcl9fbWVudSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLmhlYWRlcl9fYnVyZ2VyIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLmhlYWRlcl9fbG9nbyBpbWcge1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogYXV0bztcbn1cblxuLm1lbnUtdG9wIHtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBhbGwgMC4ycztcbiAgLW8tdHJhbnNpdGlvbjogYWxsIDAuMnM7XG4gIHRyYW5zaXRpb246IGFsbCAwLjJzO1xufVxuXG4ubWVudS10b3BfX2xpc3Qge1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtYm94LWFsaWduOiBjZW50ZXI7XG4gIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi5tZW51LXRvcF9faXRlbSB7XG4gIG1hcmdpbi1yaWdodDogMzVweDtcbn1cblxuLm1lbnUtdG9wX19pdGVtOmxhc3QtY2hpbGQge1xuICBtYXJnaW4tcmlnaHQ6IDA7XG59XG5cbi5tZW51LXRvcF9faXRlbTpsYXN0LWNoaWxkIC5tZW51LXRvcF9fbGluayB7XG4gIGRpc3BsYXk6IC13ZWJraXQtaW5saW5lLWJveDtcbiAgZGlzcGxheTogLW1zLWlubGluZS1mbGV4Ym94O1xuICBkaXNwbGF5OiBpbmxpbmUtZmxleDtcbiAgLXdlYmtpdC1ib3gtYWxpZ246IGNlbnRlcjtcbiAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgLXdlYmtpdC1ib3gtcGFjazogY2VudGVyO1xuICAtbXMtZmxleC1wYWNrOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBjb2xvcjogI2ZmZjtcbiAgYmFja2dyb3VuZDogIzAwN0FGRjtcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xuICBmb250LXdlaWdodDogNTAwO1xuICBoZWlnaHQ6IDQ4cHg7XG4gIHdpZHRoOiAyMDBweDtcbn1cblxuLm1lbnUtdG9wX19pdGVtOmxhc3QtY2hpbGQgLm1lbnUtdG9wX19saW5rOmhvdmVyIHtcbiAgY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQ6ICMxNTc4RTA7XG59XG5cbi5tZW51LXRvcF9fbGluayB7XG4gIGNvbG9yOiAjMDAyRTZDO1xuICAtd2Via2l0LXRyYW5zaXRpb246IGFsbCAwLjNzO1xuICAtby10cmFuc2l0aW9uOiBhbGwgMC4zcztcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3M7XG59XG5cbi5tZW51LXRvcF9fbGluazpob3ZlciB7XG4gIGNvbG9yOiAjMTU3OEUwO1xufVxuXG4ubWVudS10b3AuX2FjdGl2ZSB7XG4gIG1heC1oZWlnaHQ6IDUwMHB4O1xufVxuXG4uaGVybyB7XG4gIGJhY2tncm91bmQ6IHVybCguLi9pbWcvaGVhZGVyLWJnLmpwZykgIzAwMkU2QyBuby1yZXBlYXQgY2VudGVyIHJpZ2h0O1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICBtaW4taGVpZ2h0OiA2NTBweDtcbn1cblxuLmhlcm9fX3dyYXAge1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG59XG5cbi5oZXJvX19pdGVtIHtcbiAgLXdlYmtpdC1ib3gtZmxleDogMDtcbiAgLW1zLWZsZXg6IDAgMSA2MCU7XG4gIGZsZXg6IDAgMSA2MCU7XG4gIC13ZWJraXQtYm94LWFsaWduOiBjZW50ZXI7XG4gIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHBhZGRpbmctdG9wOiAxMjBweDtcbiAgcGFkZGluZy1ib3R0b206IDEyMHB4O1xufVxuXG4uaGVyb19fdGl0bGUge1xuICBjb2xvcjogI2ZmZjtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgbWFyZ2luLWJvdHRvbTogMzVweDtcbiAgZm9udC1zaXplOiA5MnB4O1xufVxuXG4uaGVyb19fc3VidGl0bGUge1xuICBjb2xvcjogI2ZmZjtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgZm9udC1zaXplOiAzNnB4O1xuICBsaW5lLWhlaWdodDogMS4zZW07XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLmNhc2gge1xuICBiYWNrZ3JvdW5kOiAjZmZmO1xuICBwYWRkaW5nLXRvcDogMTIwcHg7XG4gIHBhZGRpbmctYm90dG9tOiAxMjBweDtcbn1cblxuLmNhc2hfX2luZm8ge1xuICBtYXJnaW4tdG9wOiA2MHB4O1xufVxuXG4uY2FzaF9fdGl0bGUge1xuICBmb250LXdlaWdodDogNTAwO1xuICBtYXJnaW4tYm90dG9tOiAxNXB4O1xuICBmb250LXNpemU6IDYycHg7XG59XG5cbi5jYXNoX19zdWJ0aXRsZSB7XG4gIGxpbmUtaGVpZ2h0OiAxLjRlbTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBmb250LXdlaWdodDogNTAwO1xuICBmb250LXNpemU6IDIwcHg7XG59XG5cbi5pbmZvLWNhc2gge1xuICBwYWRkaW5nOiA0MHB4IDcwcHg7XG4gIGJhY2tncm91bmQ6ICNGMkYxRjE7XG59XG5cbi5pbmZvLWNhc2hfX3RpdGxlIHtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBtYXJnaW46IDAgYXV0byA2MHB4O1xuICBkaXNwbGF5OiBibG9jaztcbiAgbGluZS1oZWlnaHQ6IDEuMmVtO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBmb250LXNpemU6IDMwcHg7XG59XG5cbi5pbmZvLWNhc2hfX3dyYXAge1xuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLWdhcDogMzBweDtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxNDBweCAxZnI7XG59XG5cbi5pbmZvLWNhc2hfX2ltZyB7XG4gIHdpZHRoOiAxNDBweDtcbiAgaGVpZ2h0OiAxNDBweDtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4uaW5mby1jYXNoX19pbWcgaW1nIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbn1cblxuLmluZm8tY2FzaF9fcm93IHtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtd2Via2l0LWJveC1hbGlnbjogc3RhcnQ7XG4gIC1tcy1mbGV4LWFsaWduOiBzdGFydDtcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG4gIC13ZWJraXQtYm94LXBhY2s6IGp1c3RpZnk7XG4gIC1tcy1mbGV4LXBhY2s6IGp1c3RpZnk7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2Vlbjtcbn1cblxuLmluZm8tY2FzaF9fcm93OmZpcnN0LWNoaWxkIHtcbiAgcGFkZGluZy1ib3R0b206IDMwcHg7XG4gIGJvcmRlci1ib3R0b206IDNweCBzb2xpZCAjMDAyRTZDO1xuICBtYXJnaW4tYm90dG9tOiAzMHB4O1xufVxuXG4uaW5mby1jYXNoX19jb2w6bGFzdC1jaGlsZCB7XG4gIG1hcmdpbi1ib3R0b206IDA7XG59XG5cbi5pbmZvLWNhc2hfX25hbWUge1xuICBmb250LXNpemU6IDI2cHg7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XG59XG5cbi5pbmZvLWNhc2hfX3RlYW0ge1xuICBmb250LXNpemU6IDIwcHg7XG59XG5cbi5pbmZvLWNhc2hfX2JvbnVzIHNwYW4ge1xuICBmb250LXNpemU6IDI2cHg7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4uaW5mby1jYXNoX19ib251cyBzcGFuLl9iaWcge1xuICBmb250LXdlaWdodDogNzAwO1xuICBmb250LXNpemU6IDExNXB4O1xufVxuXG4uaW5mby1jYXNoX19ib251cyBzcGFuIHN1cCB7XG4gIGZvbnQtc2l6ZTogMTZweDtcbn1cblxuLmluZm8tY2FzaF9fc3RhdCB7XG4gIG1hcmdpbi1ib3R0b206IDE1cHg7XG59XG5cbi5pbmZvLWNhc2hfX3N0YXRfdGl0bGUge1xuICBmb250LXdlaWdodDogNTAwO1xuICBmb250LXNpemU6IDIwcHg7XG59XG5cbi5pbmZvLWNhc2hfX3N0YXQ6bGFzdC1jaGlsZCB7XG4gIG1hcmdpbi1ib3R0b206IDA7XG59XG5cbi5zdGF0LWNhc2gge1xuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLWdhcDogMTVweDtcbiAgLXdlYmtpdC1ib3gtYWxpZ246IGNlbnRlcjtcbiAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxNDBweCBtaW5tYXgoMzE1cHgsIDFmcik7XG59XG5cbi5zdGF0LWNhc2hfX25hbWUge1xuICBmb250LXNpemU6IDIwcHg7XG59XG5cbi5zdGF0LWNhc2hfX3JvdyB7XG4gIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgaGVpZ2h0OiAzMnB4O1xuICB3aWR0aDogMTAwJTtcbiAgYmFja2dyb3VuZDogI0RFREVERTtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtd2Via2l0LWJveC1hbGlnbjogY2VudGVyO1xuICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHBhZGRpbmc6IDAgMTBweDtcbn1cblxuLnN0YXQtY2FzaF9fcm93IHNwYW4ge1xuICBmb250LXdlaWdodDogNzAwO1xuICBjb2xvcjogI2ZmZjtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB6LWluZGV4OiAyO1xuICBmb250LXNpemU6IDI4cHg7XG59XG5cbi5zdGF0LWNhc2hfX3Jvdzo6YWZ0ZXIge1xuICBjb250ZW50OiBcIlwiO1xuICBkaXNwbGF5OiBibG9jaztcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB6LWluZGV4OiAxO1xuICBsZWZ0OiAwO1xuICB0b3A6IDA7XG4gIGJvdHRvbTogMDtcbiAgYmFja2dyb3VuZDogIzAwMkU2QztcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xuICB3aWR0aDogMTIlO1xufVxuXG4uc3RhdC1jYXNoOm50aC1jaGlsZCgxKSAuc3RhdC1jYXNoX19yb3c6OmFmdGVyIHtcbiAgd2lkdGg6IDc1JTtcbiAgYmFja2dyb3VuZDogIzc0QUE1Qztcbn1cblxuLnN0YXQtY2FzaDpudGgtY2hpbGQoMikgLnN0YXQtY2FzaF9fcm93OjphZnRlciB7XG4gIHdpZHRoOiA2MCU7XG59XG5cbi5zdGF0LWNhc2g6bnRoLWNoaWxkKDMpIC5zdGF0LWNhc2hfX3Jvdzo6YWZ0ZXIge1xuICB3aWR0aDogNTAlO1xufVxuXG4uc3RhdC1jYXNoX19hbm5vdGF0aW9uIHtcbiAgZ3JpZC1jb2x1bW46IDIvMztcbiAgZm9udC1zaXplOiAyMHB4O1xuICBwYWRkaW5nOiAxMHB4IDA7XG59XG5cbi5iZWxheSB7XG4gIGJhY2tncm91bmQ6ICMwMDJFNkM7XG59XG5cbi5iZWxheV9fd3JhcCB7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbn1cblxuLmJlbGF5X19pdGVtIHtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuXG4uYmVsYXlfX2l0ZW06Zmlyc3QtY2hpbGQge1xuICAtd2Via2l0LWJveC1mbGV4OiAwO1xuICAtbXMtZmxleDogMCAxIDM4JTtcbiAgZmxleDogMCAxIDM4JTtcbiAgcGFkZGluZy10b3A6IDExMHB4O1xufVxuXG4uYmVsYXlfX2l0ZW06bGFzdC1jaGlsZCB7XG4gIC13ZWJraXQtYm94LWZsZXg6IDA7XG4gIC1tcy1mbGV4OiAwIDEgNjIlO1xuICBmbGV4OiAwIDEgNjIlO1xufVxuXG4uYmVsYXlfX2ltZyB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgcmlnaHQ6IC05MHB4O1xuICB0ZXh0LWFsaWduOiByaWdodDtcbn1cblxuLmJlbGF5X190aXRsZSB7XG4gIGNvbG9yOiAjZmZmO1xuICBmb250LXdlaWdodDogNTAwO1xuICBsaW5lLWhlaWdodDogMS4yZW07XG4gIG1hcmdpbi1ib3R0b206IDUwcHg7XG4gIGZvbnQtc2l6ZTogNjJweDtcbn1cblxuLmJlbGF5IHAge1xuICBmb250LXNpemU6IDIwcHg7XG4gIGNvbG9yOiAjZmZmO1xuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuICBsaW5lLWhlaWdodDogMS40ZW07XG59XG5cbi5iZWxheSBwOmxhc3QtY2hpbGQge1xuICBtYXJnaW4tYm90dG9tOiAwO1xufVxuXG4uaW5jb21lIHtcbiAgcGFkZGluZy10b3A6IDExMHB4O1xuICBwYWRkaW5nLWJvdHRvbTogMTEwcHg7XG4gIGJhY2tncm91bmQ6ICM3NEFBNUM7XG59XG5cbi5pbmNvbWVfX3RpdGxlIHtcbiAgZm9udC1zaXplOiA2MnB4O1xuICBjb2xvcjogI2ZmZjtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgbWFyZ2luLWJvdHRvbTogMTVweDtcbn1cblxuLmluY29tZV9fc3VidGl0bGUge1xuICBmb250LXNpemU6IDIwcHg7XG4gIGNvbG9yOiAjZmZmO1xuICBsaW5lLWhlaWdodDogMS4yZW07XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXJnaW4tYm90dG9tOiA5MHB4O1xufVxuXG4uaW5jb21lX193cmFwIHtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgbWlubWF4KDQ3MHB4LCAxZnIpIDFmcjtcbiAgZ3JpZC1nYXA6IDMwcHg7XG4gIC13ZWJraXQtYm94LXBhY2s6IHN0cmV0Y2g7XG4gIC1tcy1mbGV4LXBhY2s6IHN0cmV0Y2g7XG4gIGp1c3RpZnktY29udGVudDogc3RyZXRjaDtcbn1cblxuLmluY29tZV9faXRlbTpsYXN0LWNoaWxkIHtcbiAganVzdGlmeS1zZWxmOiBlbmQ7XG59XG5cbi5pbmNvbWVfX2ltZyB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdG9wOiAyMHB4O1xuICAtd2Via2l0LWZpbHRlcjogZHJvcC1zaGFkb3coMTZweCAyMnB4IDUwcHggcmdiYSgwLCAwLCAwLCAwLjM4KSkgZHJvcC1zaGFkb3coMTBweCAxMHB4IDIycHggcmdiYSgwLCAwLCAwLCAwLjE3KSk7XG4gIGZpbHRlcjogZHJvcC1zaGFkb3coMTZweCAyMnB4IDUwcHggcmdiYSgwLCAwLCAwLCAwLjM4KSkgZHJvcC1zaGFkb3coMTBweCAxMHB4IDIycHggcmdiYSgwLCAwLCAwLCAwLjE3KSk7XG59XG5cbi5pbmNvbWVfX2ltZyBpbWcge1xuICBtYXgtd2lkdGg6IDEwMCU7XG59XG5cbi5pbmNvbWUtaW5mbyB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xufVxuXG4uaW5jb21lLWluZm9fX251bSB7XG4gIGZvbnQtc2l6ZTogMTY4cHg7XG4gIGNvbG9yOiAjZmZmO1xuICBmb250LXdlaWdodDogNzAwO1xuICBsaW5lLWhlaWdodDogMWVtO1xufVxuXG4uaW5jb21lLWluZm9fX251bSBzcGFuIHtcbiAgZm9udC1zaXplOiA3N3B4O1xufVxuXG4uaW5jb21lLWluZm9fX3ByZXRleHQge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHRvcDogMzBweDtcbiAgY29sb3I6ICNmZmY7XG4gIG1hcmdpbi1yaWdodDogNXB4O1xuICBmb250LXNpemU6IDIwcHg7XG59XG5cbi5pbmNvbWUtaW5mb19fcG9zdHRleHQge1xuICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMTIwJSk7XG4gIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTEyMCUpO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTEyMCUpO1xuICBjb2xvcjogI2ZmZjtcbiAgd2lkdGg6IDEwMCU7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGxpbmUtaGVpZ2h0OiAxZW07XG4gIGZvbnQtc2l6ZTogMjVweDtcbn1cblxuLmFwcGx5IHtcbiAgYmFja2dyb3VuZDogI0YyRjFGMTtcbn1cblxuLmFwcGx5IGlmcmFtZSB7XG4gIGZsb2F0OiBsZWZ0O1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiBhdXRvO1xuICBtaW4taGVpZ2h0OiA2MTBweDtcbiAgYmFja2dyb3VuZDogI0YyRjFGMTtcbn1cblxuLmZvb3RlciB7XG4gIGJhY2tncm91bmQ6ICMwMDJFNkM7XG4gIHBhZGRpbmctdG9wOiA2MHB4O1xuICBwYWRkaW5nLWJvdHRvbTogNjBweDtcbn1cblxuLmZvb3Rlcl9faXRlbV9mbGV4IHtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtd2Via2l0LWJveC1hbGlnbjogY2VudGVyO1xuICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAtd2Via2l0LWJveC1wYWNrOiBqdXN0aWZ5O1xuICAtbXMtZmxleC1wYWNrOiBqdXN0aWZ5O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4uZm9vdGVyX19pdGVtOmxhc3QtY2hpbGQge1xuICBtYXJnaW4tdG9wOiA3NXB4O1xufVxuXG4uZm9vdGVyX19jb250YWN0IGEge1xuICBkaXNwbGF5OiBibG9jaztcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XG59XG5cbi5mb290ZXIgYSxcbi5mb290ZXIgcCB7XG4gIGNvbG9yOiAjZmZmO1xuICBsaW5lLWhlaWdodDogMS40ZW07XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogYWxsIDAuMnM7XG4gIC1vLXRyYW5zaXRpb246IGFsbCAwLjJzO1xuICB0cmFuc2l0aW9uOiBhbGwgMC4ycztcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAyMHB4O1xufVxuXG4uZm9vdGVyIGE6aG92ZXIge1xuICBjb2xvcjogIzE1NzhFMDtcbn1cblxuLmZvb3RlciBwIHtcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcbn1cblxuLmZvb3RlciBwOmxhc3QtY2hpbGQge1xuICBtYXJnaW4tYm90dG9tOiAwO1xufVxuXG4uZm9vdGVyIHAgYSB7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNSk7XG59XG5cbi5wYWdlIHtcbiAgLXdlYmtpdC1ib3gtZmxleDogMTtcbiAgLW1zLWZsZXg6IDEgMSBhdXRvO1xuICBmbGV4OiAxIDEgYXV0bztcbn1cblxuQHN1cHBvcnRzICgtd2Via2l0LWFwcGVhcmFuY2U6bm9uZSkge1xuICAuaGVybyB7XG4gICAgYmFja2dyb3VuZDogdXJsKC4uL2ltZy9oZWFkZXItYmcud2VicCkgIzAwMkU2QyBuby1yZXBlYXQgY2VudGVyIHJpZ2h0O1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAxMTMycHgpIHtcbiAgLl9jb250YWluZXIge1xuICAgIG1heC13aWR0aDogOTcwcHg7XG4gIH1cblxuICAuaGVhZGVyX193cmFwIHtcbiAgICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAgIC13ZWJraXQtYm94LWRpcmVjdGlvbjogbm9ybWFsO1xuICAgIC1tcy1mbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIH1cblxuICAubWVudS10b3Age1xuICAgIG1hcmdpbi10b3A6IDIwcHg7XG4gIH1cblxuICAuaGVyb19faXRlbSB7XG4gICAgLXdlYmtpdC1ib3gtZmxleDogMDtcbiAgICAtbXMtZmxleDogMCAxIDgwJTtcbiAgICBmbGV4OiAwIDEgODAlO1xuICB9XG5cbiAgLmluZm8tY2FzaF9fd3JhcCB7XG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnI7XG4gIH1cblxuICAuaW5jb21lX193cmFwIHtcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAxZnIgMWZyO1xuICB9XG5cbkBzdXBwb3J0cyAoLXdlYmtpdC1hcHBlYXJhbmNlOm5vbmUpIHtcblxufVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMTEyMHB4KSB7XG4gIC5oZWFkZXIge1xuICAgIHBhZGRpbmctdG9wOiBjYWxjKDE1cHggKyAxNSAqICgoMTAwdncgLSAzMjBweCkgLyA4MDApKTtcbiAgfVxuXG4gIC5oZWFkZXIge1xuICAgIHBhZGRpbmctYm90dG9tOiBjYWxjKDE1cHggKyAxNSAqICgoMTAwdncgLSAzMjBweCkgLyA4MDApKTtcbiAgfVxuXG4gIC5oZXJvIHtcbiAgICBtaW4taGVpZ2h0OiBjYWxjKDI1MHB4ICsgNDAwICogKCgxMDB2dyAtIDMyMHB4KSAvIDgwMCkpO1xuICB9XG5cbiAgLmhlcm9fX2l0ZW0ge1xuICAgIHBhZGRpbmctdG9wOiBjYWxjKDQwcHggKyA4MCAqICgoMTAwdncgLSAzMjBweCkgLyA4MDApKTtcbiAgfVxuXG4gIC5oZXJvX19pdGVtIHtcbiAgICBwYWRkaW5nLWJvdHRvbTogY2FsYyg0MHB4ICsgODAgKiAoKDEwMHZ3IC0gMzIwcHgpIC8gODAwKSk7XG4gIH1cblxuICAuaGVyb19fdGl0bGUge1xuICAgIGZvbnQtc2l6ZTogY2FsYyg0MHB4ICsgNTIgKiAoKDEwMHZ3IC0gMzIwcHgpIC8gODAwKSk7XG4gIH1cblxuICAuaGVyb19fc3VidGl0bGUge1xuICAgIGZvbnQtc2l6ZTogY2FsYygyMHB4ICsgMTYgKiAoKDEwMHZ3IC0gMzIwcHgpIC8gODAwKSk7XG4gIH1cblxuICAuY2FzaCB7XG4gICAgcGFkZGluZy10b3A6IGNhbGMoNDBweCArIDgwICogKCgxMDB2dyAtIDMyMHB4KSAvIDgwMCkpO1xuICB9XG5cbiAgLmNhc2gge1xuICAgIHBhZGRpbmctYm90dG9tOiBjYWxjKDQwcHggKyA4MCAqICgoMTAwdncgLSAzMjBweCkgLyA4MDApKTtcbiAgfVxuXG4gIC5jYXNoX19pbmZvIHtcbiAgICBtYXJnaW4tdG9wOiBjYWxjKDMwcHggKyAzMCAqICgoMTAwdncgLSAzMjBweCkgLyA4MDApKTtcbiAgfVxuXG4gIC5jYXNoX190aXRsZSB7XG4gICAgZm9udC1zaXplOiBjYWxjKDM1cHggKyAyNyAqICgoMTAwdncgLSAzMjBweCkgLyA4MDApKTtcbiAgfVxuXG4gIC5jYXNoX19zdWJ0aXRsZSB7XG4gICAgZm9udC1zaXplOiBjYWxjKDE0cHggKyA2ICogKCgxMDB2dyAtIDMyMHB4KSAvIDgwMCkpO1xuICB9XG5cbiAgLmluZm8tY2FzaCB7XG4gICAgcGFkZGluZy1sZWZ0OiBjYWxjKDIwcHggKyA1MCAqICgoMTAwdncgLSAzMjBweCkgLyA4MDApKTtcbiAgfVxuXG4gIC5pbmZvLWNhc2gge1xuICAgIHBhZGRpbmctcmlnaHQ6IGNhbGMoMjBweCArIDUwICogKCgxMDB2dyAtIDMyMHB4KSAvIDgwMCkpO1xuICB9XG5cbiAgLmluZm8tY2FzaF9fdGl0bGUge1xuICAgIGZvbnQtc2l6ZTogY2FsYygxOHB4ICsgMTIgKiAoKDEwMHZ3IC0gMzIwcHgpIC8gODAwKSk7XG4gIH1cblxuICAuaW5mby1jYXNoX19uYW1lIHtcbiAgICBmb250LXNpemU6IGNhbGMoMjBweCArIDYgKiAoKDEwMHZ3IC0gMzIwcHgpIC8gODAwKSk7XG4gIH1cblxuICAuaW5mby1jYXNoX190ZWFtIHtcbiAgICBmb250LXNpemU6IGNhbGMoMTZweCArIDQgKiAoKDEwMHZ3IC0gMzIwcHgpIC8gODAwKSk7XG4gIH1cblxuICAuaW5mby1jYXNoX19ib251cyBzcGFuLl9iaWcge1xuICAgIGZvbnQtc2l6ZTogY2FsYyg4MHB4ICsgMzUgKiAoKDEwMHZ3IC0gMzIwcHgpIC8gODAwKSk7XG4gIH1cblxuICAuaW5mby1jYXNoX19zdGF0X3RpdGxlIHtcbiAgICBmb250LXNpemU6IGNhbGMoMTZweCArIDQgKiAoKDEwMHZ3IC0gMzIwcHgpIC8gODAwKSk7XG4gIH1cblxuICAuc3RhdC1jYXNoX19uYW1lIHtcbiAgICBmb250LXNpemU6IGNhbGMoMTZweCArIDQgKiAoKDEwMHZ3IC0gMzIwcHgpIC8gODAwKSk7XG4gIH1cblxuICAuc3RhdC1jYXNoX19yb3cgc3BhbiB7XG4gICAgZm9udC1zaXplOiBjYWxjKDE4cHggKyAxMCAqICgoMTAwdncgLSAzMjBweCkgLyA4MDApKTtcbiAgfVxuXG4gIC5zdGF0LWNhc2hfX2Fubm90YXRpb24ge1xuICAgIGZvbnQtc2l6ZTogY2FsYygxNnB4ICsgNCAqICgoMTAwdncgLSAzMjBweCkgLyA4MDApKTtcbiAgfVxuXG4gIC5iZWxheV9faXRlbTpmaXJzdC1jaGlsZCB7XG4gICAgcGFkZGluZy10b3A6IGNhbGMoNDBweCArIDcwICogKCgxMDB2dyAtIDMyMHB4KSAvIDgwMCkpO1xuICB9XG5cbiAgLmJlbGF5X190aXRsZSB7XG4gICAgbWFyZ2luLWJvdHRvbTogY2FsYygyMHB4ICsgMzAgKiAoKDEwMHZ3IC0gMzIwcHgpIC8gODAwKSk7XG4gIH1cblxuICAuYmVsYXlfX3RpdGxlIHtcbiAgICBmb250LXNpemU6IGNhbGMoMzBweCArIDMyICogKCgxMDB2dyAtIDMyMHB4KSAvIDgwMCkpO1xuICB9XG5cbiAgLmJlbGF5IHAge1xuICAgIGZvbnQtc2l6ZTogY2FsYygxNnB4ICsgNCAqICgoMTAwdncgLSAzMjBweCkgLyA4MDApKTtcbiAgfVxuXG4gIC5pbmNvbWUge1xuICAgIHBhZGRpbmctdG9wOiBjYWxjKDQwcHggKyA3MCAqICgoMTAwdncgLSAzMjBweCkgLyA4MDApKTtcbiAgfVxuXG4gIC5pbmNvbWUge1xuICAgIHBhZGRpbmctYm90dG9tOiBjYWxjKDQwcHggKyA3MCAqICgoMTAwdncgLSAzMjBweCkgLyA4MDApKTtcbiAgfVxuXG4gIC5pbmNvbWVfX3RpdGxlIHtcbiAgICBmb250LXNpemU6IGNhbGMoMzBweCArIDMyICogKCgxMDB2dyAtIDMyMHB4KSAvIDgwMCkpO1xuICB9XG5cbiAgLmluY29tZV9fc3VidGl0bGUge1xuICAgIGZvbnQtc2l6ZTogY2FsYygxNnB4ICsgNCAqICgoMTAwdncgLSAzMjBweCkgLyA4MDApKTtcbiAgfVxuXG4gIC5pbmNvbWVfX3N1YnRpdGxlIHtcbiAgICBtYXJnaW4tYm90dG9tOiBjYWxjKDIwcHggKyA3MCAqICgoMTAwdncgLSAzMjBweCkgLyA4MDApKTtcbiAgfVxuXG4gIC5pbmNvbWUtaW5mb19fbnVtIHtcbiAgICBmb250LXNpemU6IGNhbGMoODBweCArIDg4ICogKCgxMDB2dyAtIDMyMHB4KSAvIDgwMCkpO1xuICB9XG5cbiAgLmluY29tZS1pbmZvX19udW0gc3BhbiB7XG4gICAgZm9udC1zaXplOiBjYWxjKDM1cHggKyA0MiAqICgoMTAwdncgLSAzMjBweCkgLyA4MDApKTtcbiAgfVxuXG4gIC5pbmNvbWUtaW5mb19fcHJldGV4dCB7XG4gICAgZm9udC1zaXplOiBjYWxjKDE4cHggKyAyICogKCgxMDB2dyAtIDMyMHB4KSAvIDgwMCkpO1xuICB9XG5cbiAgLmluY29tZS1pbmZvX19wb3N0dGV4dCB7XG4gICAgZm9udC1zaXplOiBjYWxjKDE4cHggKyA3ICogKCgxMDB2dyAtIDMyMHB4KSAvIDgwMCkpO1xuICB9XG5cbiAgLmZvb3RlciB7XG4gICAgcGFkZGluZy10b3A6IGNhbGMoMzBweCArIDMwICogKCgxMDB2dyAtIDMyMHB4KSAvIDgwMCkpO1xuICB9XG5cbiAgLmZvb3RlciB7XG4gICAgcGFkZGluZy1ib3R0b206IGNhbGMoMzBweCArIDMwICogKCgxMDB2dyAtIDMyMHB4KSAvIDgwMCkpO1xuICB9XG5cbiAgLmZvb3Rlcl9faXRlbTpsYXN0LWNoaWxkIHtcbiAgICBtYXJnaW4tdG9wOiBjYWxjKDMwcHggKyA0NSAqICgoMTAwdncgLSAzMjBweCkgLyA4MDApKTtcbiAgfVxuXG4gIC5mb290ZXIgYSxcbiAgLmZvb3RlciBwIHtcbiAgICBmb250LXNpemU6IGNhbGMoMTZweCArIDQgKiAoKDEwMHZ3IC0gMzIwcHgpIC8gODAwKSk7XG4gIH1cblxuQHN1cHBvcnRzICgtd2Via2l0LWFwcGVhcmFuY2U6bm9uZSkge1xuXG59XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA5OTEuOThweCkge1xuICAuX2NvbnRhaW5lciB7XG4gICAgbWF4LXdpZHRoOiA3NTBweDtcbiAgfVxuXG4gIC5oZXJvX19pdGVtIHtcbiAgICAtd2Via2l0LWJveC1mbGV4OiAwO1xuICAgIC1tcy1mbGV4OiAwIDEgMTAwJTtcbiAgICBmbGV4OiAwIDEgMTAwJTtcbiAgfVxuXG4gIC5pbmZvLWNhc2hfX2ltZyB7XG4gICAgbWFyZ2luOiBhdXRvO1xuICB9XG5cbiAgLmluZm8tY2FzaF9fcm93IHtcbiAgICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAgIC13ZWJraXQtYm94LWRpcmVjdGlvbjogbm9ybWFsO1xuICAgIC1tcy1mbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgLXdlYmtpdC1ib3gtYWxpZ246IGNlbnRlcjtcbiAgICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIH1cblxuICAuaW5mby1jYXNoX19jb2wge1xuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cblxuICAuaW5mby1jYXNoX19uYW1lIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIH1cblxuICAuaW5mby1jYXNoX190ZWFtIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIH1cblxuICAuaW5mby1jYXNoX19ib251cyB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB9XG5cbiAgLnN0YXQtY2FzaF9fYW5ub3RhdGlvbiB7XG4gICAgZ3JpZC1jb2x1bW46IDEvMztcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIH1cblxuQHN1cHBvcnRzICgtd2Via2l0LWFwcGVhcmFuY2U6bm9uZSkge1xuXG59XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjcuOThweCkge1xuICAuX2NvbnRhaW5lciB7XG4gICAgbWF4LXdpZHRoOiBub25lO1xuICAgIHBhZGRpbmc6IDAgMTBweDtcbiAgfVxuXG4gIC5oZWFkZXJfX3dyYXAge1xuICAgIC13ZWJraXQtYm94LW9yaWVudDogaG9yaXpvbnRhbDtcbiAgICAtd2Via2l0LWJveC1kaXJlY3Rpb246IG5vcm1hbDtcbiAgICAtbXMtZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICB9XG5cbiAgLmhlYWRlcl9fYnVyZ2VyIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgd2lkdGg6IDQwcHg7XG4gICAgaGVpZ2h0OiA0MHB4O1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICB6LWluZGV4OiA1O1xuICB9XG5cbiAgLmhlYWRlcl9fYnVyZ2VyIHNwYW4ge1xuICAgIC13ZWJraXQtdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZSAwcztcbiAgICAtby10cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlIDBzO1xuICAgIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2UgMHM7XG4gICAgdG9wOiBjYWxjKDUwJSAtIDFweCk7XG4gICAgbGVmdDogY2FsYyg1MCUgLSAxNXB4KTtcbiAgICB3aWR0aDogMzBweDtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgaGVpZ2h0OiAycHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwMkU2QztcbiAgICBib3JkZXItcmFkaXVzOiAycHg7XG4gIH1cblxuICAuaGVhZGVyX19idXJnZXIgc3BhbjpmaXJzdC1jaGlsZCB7XG4gICAgdG9wOiAxMHB4O1xuICB9XG5cbiAgLmhlYWRlcl9fYnVyZ2VyIHNwYW46bGFzdC1jaGlsZCB7XG4gICAgdG9wOiBhdXRvO1xuICAgIGJvdHRvbTogMTBweDtcbiAgfVxuXG4gIC5oZWFkZXJfX2J1cmdlci5fYWN0aXZlIHtcbiAgICBib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOiAwO1xuICAgIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiAwO1xuICB9XG5cbiAgLmhlYWRlcl9fYnVyZ2VyLl9hY3RpdmUgc3BhbiB7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlKDApO1xuICAgIC1tcy10cmFuc2Zvcm06IHNjYWxlKDApO1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMCk7XG4gIH1cblxuICAuaGVhZGVyX19idXJnZXIuX2FjdGl2ZSBzcGFuOmZpcnN0LWNoaWxkIHtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKC00NWRlZyk7XG4gICAgLW1zLXRyYW5zZm9ybTogcm90YXRlKC00NWRlZyk7XG4gICAgdHJhbnNmb3JtOiByb3RhdGUoLTQ1ZGVnKTtcbiAgICB0b3A6IGNhbGMoNTAlIC0gMXB4KTtcbiAgfVxuXG4gIC5oZWFkZXJfX2J1cmdlci5fYWN0aXZlIHNwYW46bGFzdC1jaGlsZCB7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7XG4gICAgLW1zLXRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7XG4gICAgYm90dG9tOiBjYWxjKDUwJSAtIDFweCk7XG4gIH1cblxuICAubWVudS10b3BfX2xpc3Qge1xuICAgIC13ZWJraXQtYm94LW9yaWVudDogdmVydGljYWw7XG4gICAgLXdlYmtpdC1ib3gtZGlyZWN0aW9uOiBub3JtYWw7XG4gICAgLW1zLWZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBiYWNrZ3JvdW5kOiAjRjJGMUYxO1xuICAgIHBhZGRpbmc6IDIwcHg7XG4gICAgLXdlYmtpdC1ib3gtYWxpZ246IHN0YXJ0O1xuICAgIC1tcy1mbGV4LWFsaWduOiBzdGFydDtcbiAgICBhbGlnbi1pdGVtczogc3RhcnQ7XG4gIH1cblxuICAubWVudS10b3BfX2l0ZW06bGFzdC1jaGlsZCB7XG4gICAgbWFyZ2luLXJpZ2h0OiAwO1xuICAgIG1hcmdpbi1ib3R0b206IDA7XG4gIH1cblxuICAubWVudS10b3BfX2l0ZW0ge1xuICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuICB9XG5cbiAgLm1lbnUtdG9wIHtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDg2cHg7XG4gICAgcmlnaHQ6IC0xMHB4O1xuICAgIHdpZHRoOiAzMzBweDtcbiAgICBtYXgtaGVpZ2h0OiAwO1xuICAgIG1hcmdpbi10b3A6IDA7XG4gIH1cblxuICAuaGVybyB7XG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIGNlbnRlcjtcbiAgfVxuXG4gIC5zdGF0LWNhc2gge1xuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMTQwcHggMWZyO1xuICB9XG5cbiAgLmJlbGF5X193cmFwIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgfVxuXG4gIC5iZWxheV9faXRlbTpmaXJzdC1jaGlsZCB7XG4gICAgLXdlYmtpdC1ib3gtZmxleDogMDtcbiAgICAtbXMtZmxleDogMCAxIDEwMCU7XG4gICAgZmxleDogMCAxIDEwMCU7XG4gICAgcGFkZGluZy1ib3R0b206IDgwcHg7XG4gIH1cblxuICAuYmVsYXlfX2l0ZW06bGFzdC1jaGlsZCB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxuXG4gIC5pbmNvbWVfX3dyYXAge1xuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyO1xuICAgIGdyaWQtYXV0by1mbG93OiByb3c7XG4gICAgLXdlYmtpdC1ib3gtcGFjazogY2VudGVyO1xuICAgIC1tcy1mbGV4LXBhY2s6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgfVxuXG4gIC5pbmNvbWVfX2l0ZW06bGFzdC1jaGlsZCB7XG4gICAganVzdGlmeS1zZWxmOiBjZW50ZXI7XG4gIH1cblxuICAuaW5jb21lX19pdGVtIHtcbiAgICBqdXN0aWZ5LXNlbGY6IGNlbnRlcjtcbiAgfVxuXG4gIC5pbmNvbWVfX2ltZyB7XG4gICAgd2lkdGg6IDUwJTtcbiAgICBtYXJnaW46IGF1dG87XG4gICAgdG9wOiAtMTBweDtcbiAgfVxuXG5Ac3VwcG9ydHMgKC13ZWJraXQtYXBwZWFyYW5jZTpub25lKSB7XG5cbn1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDc2Ny45OHB4KSBhbmQgKG1heC13aWR0aDogMTEyMHB4KSB7XG4gIC5tZW51LXRvcCB7XG4gICAgdG9wOiBjYWxjKDU4cHggKyAyOCAqICgoMTAwdncgLSAzMjBweCkgLyA4MDApKTtcbiAgfVxuXG4gIC5iZWxheV9faXRlbTpmaXJzdC1jaGlsZCB7XG4gICAgcGFkZGluZy1ib3R0b206IGNhbGMoNDBweCArIDQwICogKCgxMDB2dyAtIDMyMHB4KSAvIDgwMCkpO1xuICB9XG5cbkBzdXBwb3J0cyAoLXdlYmtpdC1hcHBlYXJhbmNlOm5vbmUpIHtcblxufVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNDc5Ljk4cHgpIHtcbiAgLmhlYWRlcl9fbG9nbyB7XG4gICAgbWF4LXdpZHRoOiA3MHZ3O1xuICB9XG5cbiAgLmhlcm9fX2l0ZW0ge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgfVxuXG4gIC5jYXNoX190aXRsZSB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB9XG5cbiAgLmNhc2hfX3N1YnRpdGxlIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIH1cblxuICAuc3RhdC1jYXNoIHtcbiAgICBncmlkLXRlbXBsYXRlLXJvd3M6IGF1dG8gYXV0bztcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmcjtcbiAgICBncmlkLWdhcDogNXB4O1xuICB9XG5cbiAgLmJlbGF5X190aXRsZSB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB9XG5cbiAgLmJlbGF5IHAge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgfVxuXG4gIC5pbmNvbWVfX3RpdGxlIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIH1cblxuICAuaW5jb21lX19zdWJ0aXRsZSB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB9XG5cbiAgLmluY29tZS1pbmZvX19udW0ge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgfVxuXG4gIC5pbmNvbWUtaW5mb19fcHJldGV4dCB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICBtYXJnaW4tYm90dG9tOiA1cHg7XG4gICAgdG9wOiAwO1xuICB9XG5cbiAgLmluY29tZS1pbmZvIHtcbiAgICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAgIC13ZWJraXQtYm94LWRpcmVjdGlvbjogbm9ybWFsO1xuICAgIC1tcy1mbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIH1cblxuICAuZm9vdGVyX19sb2dvIHtcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuICB9XG5cbiAgLmZvb3Rlcl9faXRlbV9mbGV4IHtcbiAgICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAgIC13ZWJraXQtYm94LWRpcmVjdGlvbjogbm9ybWFsO1xuICAgIC1tcy1mbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIH1cblxuICAuZm9vdGVyX19jb250YWN0IGEge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgfVxuXG4gIC5mb290ZXIgcCB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB9XG5cbkBzdXBwb3J0cyAoLXdlYmtpdC1hcHBlYXJhbmNlOm5vbmUpIHtcblxufVxufVxyXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbkJ5WlhObGRITXZiblZzYkM1elkzTnpJaXdpYldGcGJpNWpjM01pTENKdFlXbHVMbk5qYzNNaUxDSmliRzlqYTNNdmFHVmhaR1Z5TG5OamMzTWlMQ0p3Y21WelpYUnpMMjFwZUdsdWN5NXpZM056SWl3aVlteHZZMnR6TDNSdmNGTmxZM1JwYjI0dWMyTnpjeUlzSW1Kc2IyTnJjeTlqWVhOb1UyVmpkR2x2Ymk1elkzTnpJaXdpWW14dlkydHpMMkpsYkdGNVUyVmpkR2x2Ymk1elkzTnpJaXdpWW14dlkydHpMMmx1WTI5dFpWTmxZM1JwYjI0dWMyTnpjeUlzSW1Kc2IyTnJjeTloY0hCc2VWTmxZM1JwYjI0dWMyTnpjeUlzSW1Kc2IyTnJjeTltYjI5MFpYSXVjMk56Y3lKZExDSnVZVzFsY3lJNlcxMHNJbTFoY0hCcGJtZHpJam9pUVVGQlFUdEZRVU5ETEZsQlFVRTdSVUZEUVN4WFFVRkJPMFZCUTBFc1YwRkJRVHRCUTBORU96dEJSRU5CT3pzN1JVRkpReXc0UWtGQlFUdEZRVU5CTEhOQ1FVRkJPMEZEUlVRN08wRkVVVUU3T3pzN08wVkJTME1zWTBGQlFUdEJRMHhFT3p0QlJFOUJPMFZCUTBNc1pVRkJRVHRCUTBwRU96dEJSRTFCT3p0RlFVVkRMRmxCUVVFN1JVRkRRU3huUWtWV1ZUdEJSRTlZT3p0QlJFdEJPMFZCUTBNc1kwRkJRVHRGUVVOQkxIRkNSWEpDV1R0RlJuVkNXaXd3UWtGQlFUdEZRVU5CTERKQ1FVRkJPMFZCUTBFc09FSkJRVUU3UVVOSVJEczdRVVJMUVRzN08wVkJSME1zY1VKRk9VSlpPMFZHSzBKYUxHdENRVUZCTzBGRFJrUTdPMEZFU1VFN1JVRkRReXhoUVVGQk8wRkRSRVE3TzBGRVIwRTdSVUZEUXl4bFFVRkJPMFZCUTBFc2VVSkJRVUU3UVVOQlJEczdRVVJGUVR0RlFVTkRMRlZCUVVFN1JVRkRRU3hUUVVGQk8wRkRRMFE3TzBGRVEwRTdPMFZCUlVNc2NVSkJRVUU3UVVORlJEczdRVVJCUVR0RlFVTkRMSEZDUVVGQk8wRkRSMFE3TzBGRVJFRTdSVUZEUXl4blFrRkJRVHRCUTBsRU96dEJSRVpCTzBWQlEwTXNiVUpCUVVFN1FVTkxSRHM3UVVSSVFUczdPenM3TzBWQlRVTXNiMEpCUVVFN1JVRkRRU3hyUWtGQlFUdEJRMDFFT3p0QlF6TkRRVHRGUVVORExHTkJWbGs3UVVSM1JHSTdRVU0zUTBNN1JVRkRReXhuUWtGQlFUdEJSQ3REUmpzN1FVTjZRMEU3UlVGRFF5eFhRVUZCTzBWQlEwRXNaMEpCUVVFN1JVRkRRU3huUWtGQlFUdEZRVU5CTEc5Q1FVRkJPMFZCUVVFc2IwSkJRVUU3UlVGQlFTeGhRVUZCTzBWQlEwRXNORUpCUVVFN1JVRkJRU3cyUWtGQlFUdE5RVUZCTERCQ1FVRkJPMVZCUVVFc2MwSkJRVUU3UVVRMFEwUTdRVU55UTBFN1JVRkRReXhwUWtGQlFUdEZRVU5CTEdOQlFVRTdRVVIxUTBRN1FVTjBRME03UlVGSVJEdEpRVWxGTEdkQ1FVRkJPMFZFZVVOQk8wRkJRMFk3UVVONFEwTTdSVUZPUkR0SlFVOUZMR2RDUVVGQk8wVkVNa05CTzBGQlEwWTdRVU14UTBNN1JVRlVSRHRKUVZWRkxHVkJRVUU3U1VGRFFTeGxRVUZCTzBWRU5rTkJPMEZCUTBZN08wRkZja2hCT3pzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenREUVVGQk8wRkJPRU5CTzBWQlEwTXNaMEpCUVVFN1JVTmtReXhwUWtGQlFUdEZRVUZCTEc5Q1FVRkJPMEZJZFVsR08wRkhkRWxGTzBWRVdVWTdTVU5ZUnl4elJFRkJRVHRGU0hsSlJEdEJRVU5HTzBGSE0wbEZPMFZFV1VZN1NVTllSeXg1UkVGQlFUdEZTRGhKUkR0QlFVTkdPMEZGYUVsRE8wVkJRME1zYjBKQlFVRTdSVUZCUVN4dlFrRkJRVHRGUVVGQkxHRkJRVUU3UlVGRFFTeDVRa0ZCUVR0TlFVRkJMSE5DUVVGQk8xVkJRVUVzYlVKQlFVRTdSVUZEUVN4NVFrRkJRVHROUVVGQkxITkNRVUZCTzFWQlFVRXNPRUpCUVVFN1FVWnJTVVk3UVVWcVNVVTdSVUZLUkR0SlFVdEZMRFJDUVVGQk8wbEJRVUVzTmtKQlFVRTdVVUZCUVN3d1FrRkJRVHRaUVVGQkxITkNRVUZCTzBWR2IwbEVPMEZCUTBZN1FVVnVTVVU3UlVGUVJEdEpRVkZGTERoQ1FVRkJPMGxCUVVFc05rSkJRVUU3VVVGQlFTeDFRa0ZCUVR0WlFVRkJMRzFDUVVGQk8wVkdjMGxFTzBGQlEwWTdRVVZ3U1VNN1JVRkRReXhyUWtGQlFUdEJSbk5KUmp0QlJYQkpRenRGUVVORExHRkJRVUU3UVVaelNVWTdRVVZ5U1VVN1JVRkdSRHRKUVVkRkxHTkJRVUU3U1VGRFFTeHJRa0ZCUVR0SlFVTkJMRmRCUVVFN1NVRkRRU3haUVVGQk8wbEJRMEVzWlVGQlFUdEpRVU5CTEZWQlFVRTdSVVozU1VRN1JVVjJTVU03U1VGRFF5eHZRMEZCUVR0SlFVRkJMQ3RDUVVGQk8wbEJRVUVzTkVKQlFVRTdTVUZEUVN4dlFrRkJRVHRKUVVOQkxITkNRVUZCTzBsQlEwRXNWMEZCUVR0SlFVTkJMR3RDUVVGQk8wbEJRMEVzVjBGQlFUdEpRVU5CTEhsQ1JHeEVVenRKUTIxRVZDeHJRa0ZCUVR0RlJubEpSanRGUlhoSlJUdEpRVU5ETEZOQlFVRTdSVVl3U1VnN1JVVjRTVVU3U1VGRFF5eFRRVUZCTzBsQlEwRXNXVUZCUVR0RlJqQkpTRHRGUlhaSlF6dEpRVU5ETERSQ1FVRkJPMGxCUTBFc05rSkJRVUU3UlVaNVNVWTdSVVY0U1VVN1NVRkRReXd5UWtGQlFUdFJRVUZCTEhWQ1FVRkJPMWxCUVVFc2JVSkJRVUU3UlVZd1NVZzdSVVY2U1VjN1NVRkRReXhwUTBGQlFUdFJRVUZCTERaQ1FVRkJPMWxCUVVFc2VVSkJRVUU3U1VGRFFTeHZRa0ZCUVR0RlJqSkpTanRGUlhwSlJ6dEpRVU5ETEdkRFFVRkJPMUZCUVVFc05FSkJRVUU3V1VGQlFTeDNRa0ZCUVR0SlFVTkJMSFZDUVVGQk8wVkdNa2xLTzBGQlEwWTdRVVZ5U1VVN1JVRkRReXhsUVVGQk8wVkJRMEVzV1VGQlFUdEJSblZKU0R0QlJYSkpSVHRGUVV4RU8wbEJUVVVzWlVGQlFUdEZSbmRKUkR0QlFVTkdPenRCUlhCSlFUdEZRVU5ETERSQ1FVRkJPMFZCUVVFc2RVSkJRVUU3UlVGQlFTeHZRa0ZCUVR0QlJuVkpSRHRCUlhSSlF6dEZRVU5ETEc5Q1FVRkJPMFZCUVVFc2IwSkJRVUU3UlVGQlFTeGhRVUZCTzBWQlEwRXNlVUpCUVVFN1RVRkJRU3h6UWtGQlFUdFZRVUZCTEcxQ1FVRkJPMEZHZDBsR08wRkZka2xGTzBWQlNFUTdTVUZKUlN3MFFrRkJRVHRKUVVGQkxEWkNRVUZCTzFGQlFVRXNNRUpCUVVFN1dVRkJRU3h6UWtGQlFUdEpRVU5CTEcxQ1JEVkdZenRKUXpaR1pDeGhRVUZCTzBsQlEwRXNkMEpCUVVFN1VVRkJRU3h4UWtGQlFUdFpRVUZCTEd0Q1FVRkJPMFZHTUVsRU8wRkJRMFk3UVVWMlNVTTdSVUZEUXl4clFrRkJRVHRCUm5sSlJqdEJSWGhKUlR0RlFVTkRMR1ZCUVVFN1FVWXdTVWc3UVVWNlNVYzdSVUZEUXl3eVFrRkJRVHRGUVVGQkxESkNRVUZCTzBWQlFVRXNiMEpCUVVFN1JVRkRRU3g1UWtGQlFUdE5RVUZCTEhOQ1FVRkJPMVZCUVVFc2JVSkJRVUU3UlVGRFFTeDNRa0ZCUVR0TlFVRkJMSEZDUVVGQk8xVkJRVUVzZFVKQlFVRTdSVUZEUVN4WFFVRkJPMFZCUTBFc2JVSkVha2hSTzBWRGEwaFNMR3RDUVVGQk8wVkJRMEVzWjBKQlFVRTdSVUZEUVN4WlFVRkJPMFZCUTBFc1dVRkJRVHRCUmpKSlNqdEJSVEZKU1R0RlFVTkRMRmRCUVVFN1JVRkRRU3h0UWtSMlNGazdRVVJ0VVdwQ08wRkZla2xITzBWQmFrSkVPMGxCYTBKRkxHVkJRVUU3U1VGRFFTeG5Ra0ZCUVR0RlJqUkpSanRCUVVOR08wRkZNVWxGTzBWQmVFSkVPMGxCZVVKRkxHVkJRVUU3U1VGRFFTeHRRa0ZCUVR0RlJqWkpSRHRCUVVOR08wRkZNMGxETzBWQlEwTXNZMFJ1U1ZjN1JVTnZTVmdzTkVKQlFVRTdSVUZCUVN4MVFrRkJRVHRGUVVGQkxHOUNRVUZCTzBGR05rbEdPMEZGTlVsRk8wVkJRME1zWTBSNFNXTTdRVVJ6VW1wQ08wRkZNMGxETzBWQmFrUkVPMGxCYTBSRkxHZENRVUZCTzBWR09FbEJPMEZCUTBZN1FVVTNTVU03UlVGd1JFUTdTVUZ4UkVVc1owSkJRVUU3U1VGRFFTeHJRa0ZCUVR0SlF6TkpRU3hUUVVGQk8wbEVOa2xCTEZsQlFVRTdTVUZEUVN4WlFVRkJPMGxCUTBFc1lVRkJRVHRKUVVOQkxHRkJRVUU3UlVablNrRTdRVUZEUmp0QlIyaFRSVHRGUkc5R1JqdEpRMjVHUnl3NFEwRkJRVHRGU0cxVFJEdEJRVU5HTzBGRmNFcERPMFZCUTBNc2FVSkJRVUU3UVVaelNrWTdPMEZKT1ZWQk8wVkJRMGtzYjBWQlFVRTdSVUZEUVN4elFrRkJRVHRGUkcxRFJpeHBRa0ZCUVR0QlNDdFRSanRCUnpsVFJUdEZRM1JEUmp0SlJIVkRSeXgxUkVGQlFUdEZTR2xVUkR0QlFVTkdPMEZKY2xaSk8wVkJRMGtzYjBKQlFVRTdSVUZCUVN4dlFrRkJRVHRGUVVGQkxHRkJRVUU3UVVwMVZsSTdRVWx5VmtrN1JVRkRTU3h0UWtGQlFUdE5RVUZCTEdsQ1FVRkJPMVZCUVVFc1lVRkJRVHRGUVVOQkxIbENRVUZCTzAxQlFVRXNjMEpCUVVFN1ZVRkJRU3h0UWtGQlFUdEZSRFJDVGl4clFrRkJRVHRGUVVGQkxIRkNRVUZCTzBGSU5sUkdPMEZITlZSRk8wVkRMMEpGTzBsRVowTkVMSE5FUVVGQk8wVklLMVJFTzBGQlEwWTdRVWRxVlVVN1JVTXZRa1U3U1VSblEwUXNlVVJCUVVFN1JVaHZWVVE3UVVGRFJqdEJTV2hYVVR0RlFVeEtPMGxCVFZFc2JVSkJRVUU3VVVGQlFTeHBRa0ZCUVR0WlFVRkJMR0ZCUVVFN1JVcHRWMVk3UVVGRFJqdEJTV3hYVVR0RlFWSktPMGxCVTFFc2JVSkJRVUU3VVVGQlFTeHJRa0ZCUVR0WlFVRkJMR05CUVVFN1JVcHhWMVk3UVVGRFJqdEJTWEJYVVR0RlFWaEtPMGxCV1ZFc2EwSkJRVUU3UlVwMVYxWTdRVUZEUmp0QlNYSlhTVHRGUVVOSkxGZEJRVUU3UlVGRFFTeG5Ra0ZCUVR0RlFVTkJMRzFDUVVGQk8wVkVWRTRzWlVGQlFUdEJTR2xZUmp0QlIyaFlSVHRGUTB0Rk8wbEVTa1FzYjBSQlFVRTdSVWh0V0VRN1FVRkRSanRCU1RGWFNUdEZRVU5KTEZkQlFVRTdSVUZEUVN4blFrRkJRVHRGUkdST0xHVkJRVUU3UlVOblFrMHNhMEpCUVVFN1JVRkRRU3h4UWtGQlFUdEJTalJYVWp0QlJ6VllSVHRGUTFkRk8wbEVWa1FzYjBSQlFVRTdSVWdyV0VRN1FVRkRSanRCU1M5WFNUdEZRVzVEU2p0SlFXOURVU3hyUTBGQlFUdEZTbXRZVGp0QlFVTkdPenRCUzNaYVFUdEZRVU5KTEdkQ1FVRkJPMFZHYjBOR0xHdENRVUZCTzBWQlFVRXNjVUpCUVVFN1FVaDNXRVk3UVVkMldFVTdSVVYwUTBZN1NVWjFRMGNzYzBSQlFVRTdSVWd3V0VRN1FVRkRSanRCUnpWWVJUdEZSWFJEUmp0SlJuVkRSeXg1UkVGQlFUdEZTQ3RZUkR0QlFVTkdPMEZMYm1GSk8wVkdhVU5HTEdkQ1FVRkJPMEZJY1ZsR08wRkhjRmxGTzBWRmJFTkZPMGxHYlVORUxIRkVRVUZCTzBWSWRWbEVPMEZCUTBZN1FVdDRZVWs3UlVGRFNTeG5Ra0ZCUVR0RlFVTkJMRzFDUVVGQk8wVkdUMDRzWlVGQlFUdEJTRzloUmp0QlIyNWhSVHRGUlZaRk8wbEdWMFFzYjBSQlFVRTdSVWh6WVVRN1FVRkRSanRCU3psaFVUdEZRVXBLTzBsQlMxRXNhMEpCUVVFN1JVeHBZbFk3UVVGRFJqdEJTeTloU1R0RlFVTkpMR3RDUVVGQk8wVkJRMEVzY1VKQlFVRTdSVUZEUVN4blFrRkJRVHRGUmtaT0xHVkJRVUU3UVVodllrWTdRVWR1WWtVN1JVVkdSVHRKUmtkRUxHMUVRVUZCTzBWSWMySkVPMEZCUTBZN1FVdHlZbEU3UlVGTVNqdEpRVTFSTEd0Q1FVRkJPMFZNZDJKV08wRkJRMFk3TzBGTGNHSkJPMFZCUTBrc2JVSktWV0U3UlVsVVlpeHBRa0ZCUVR0RlFVTkJMRzlDUVVGQk8wVkdVVVlzYTBKQlFVRTdSVUZCUVN4dFFrRkJRVHRCU0dsaVJqdEJSMmhpUlR0RlJWcEdPMGxHWVVjc2RVUkJRVUU3UlVodFlrUTdRVUZEUmp0QlIzSmlSVHRGUlZwR08wbEdZVWNzZDBSQlFVRTdSVWgzWWtRN1FVRkRSanRCUzJoalNUdEZRVU5KTEdkQ1FVRkJPMFZCUTBFc2EwSkJRVUU3UlVGRFFTeHRRa0ZCUVR0RlFVTkJMR05CUVVFN1JVRkRRU3hyUWtGQlFUdEZRVU5CTEhsQ1FVRkJPMFZHZEVKT0xHVkJRVUU3UVVoNVpFWTdRVWQ0WkVVN1JVVmxSVHRKUm1SRUxHOUVRVUZCTzBWSU1tUkVPMEZCUTBZN1FVdHlZMGs3UlVGRFNTeGhRVUZCTzBWQlEwRXNZMEZCUVR0RlFVTkJMR2REUVVGQk8wRk1kV05TTzBGTGRHTlJPMFZCU2tvN1NVRkxVU3d3UWtGQlFUdEZUSGxqVmp0QlFVTkdPMEZMZG1OSk8wVkJRMGtzV1VGQlFUdEZRVU5CTEdGQlFVRTdSVUZEUVN4clFrRkJRVHRGUVVOQkxHZENRVUZCTzBGTWVXTlNPMEZMZUdOUk8wVkJRMGtzVjBGQlFUdEZRVU5CTEZsQlFVRTdRVXd3WTFvN1FVdDRZMUU3UlVGVVNqdEpRVlZSTEZsQlFVRTdSVXd5WTFZN1FVRkRSanRCUzNwalNUdEZRVU5KTEc5Q1FVRkJPMFZCUVVFc2IwSkJRVUU3UlVGQlFTeGhRVUZCTzBWQlEwRXNkMEpCUVVFN1RVRkJRU3h4UWtGQlFUdFZRVUZCTEhWQ1FVRkJPMFZCUTBFc2VVSkJRVUU3VFVGQlFTeHpRa0ZCUVR0VlFVRkJMRGhDUVVGQk8wRk1NbU5TTzBGTE1XTlJPMFZCUTBrc2IwSkJRVUU3UlVGRFFTeG5RMEZCUVR0RlFVTkJMRzFDUVVGQk8wRk1OR05hTzBGTGVtTlJPMFZCVmtvN1NVRlhVU3cwUWtGQlFUdEpRVUZCTERaQ1FVRkJPMUZCUVVFc01FSkJRVUU3V1VGQlFTeHpRa0ZCUVR0SlFVTkJMSGxDUVVGQk8xRkJRVUVzYzBKQlFVRTdXVUZCUVN4dFFrRkJRVHRGVERSalZqdEJRVU5HTzBGTGVtTlJPMFZCUkVvN1NVRkZVU3h0UWtGQlFUdEpRVU5CTEZkQlFVRTdSVXcwWTFZN1FVRkRSanRCU3pOalVUdEZRVU5KTEdkQ1FVRkJPMEZNTm1OYU8wRkxNV05KTzBWR2RFVkdMR1ZCUVVFN1JVVjNSVTBzWjBKQlFVRTdSVUZEUVN4dFFrRkJRVHRCVERSalVqdEJSM0JvUWtVN1JVVnhSVVU3U1Vad1JVUXNiVVJCUVVFN1JVaDFhRUpFTzBGQlEwWTdRVXRvWkZFN1JVRktTanRKUVV0UkxHdENRVUZCTzBWTWJXUldPMEZCUTBZN1FVdHFaRWs3UlVZNVJVWXNaVUZCUVR0QlNHdHBRa1k3UVVkcWFVSkZPMFZGTmtWRk8wbEdOVVZFTEcxRVFVRkJPMFZJYjJsQ1JEdEJRVU5HTzBGTGRtUlJPMFZCUmtvN1NVRkhVU3hyUWtGQlFUdEZUREJrVmp0QlFVTkdPMEZMZG1SUk8wVkJRMGtzWlVGQlFUdEZRVU5CTEdkQ1FVRkJPMFZCUTBFc1kwRkJRVHRCVEhsa1dqdEJTM2hrV1R0RlFVTkpMR2RDUVVGQk8wVkdNVVprTEdkQ1FVRkJPMEZJY1dwQ1JqdEJSM0JxUWtVN1JVVjNSbFU3U1VaMlJsUXNiMFJCUVVFN1JVaDFha0pFTzBGQlEwWTdRVXMzWkZrN1JVRkRTU3hsUVVGQk8wRk1LMlJvUWp0QlN6VmtVVHRGUVdKS08wbEJZMUVzYTBKQlFVRTdSVXdyWkZZN1FVRkRSanRCU3pka1NUdEZRVU5KTEcxQ1FVRkJPMEZNSzJSU08wRkxPV1JSTzBWQlEwa3NaMEpCUVVFN1JVWjRSMVlzWlVGQlFUdEJTSGxyUWtZN1FVZDRhMEpGTzBWRmMwZE5PMGxHY2tkTUxHMUVRVUZCTzBWSU1tdENSRHRCUVVOR08wRkxibVZSTzBWQlEwa3NaMEpCUVVFN1FVeHhaVm83TzBGTGFHVkJPMFZCUTBrc1lVRkJRVHRGUVVOQkxHTkJRVUU3UlVGRFFTeDVRa0ZCUVR0TlFVRkJMSE5DUVVGQk8xVkJRVUVzYlVKQlFVRTdSVUZEUVN3clEwRkJRVHRCVEcxbFNqdEJTMnhsU1R0RlJuUklSaXhsUVVGQk8wRklNbXhDUmp0QlJ6RnNRa1U3UlVWeFNFVTdTVVp3U0VRc2JVUkJRVUU3UlVnMmJFSkVPMEZCUTBZN1FVdDJaVWs3UlVGRFNTeHJRa0ZCUVR0RlFVTkJMRmxCUVVFN1JVRkRRU3hYUVVGQk8wVkJRMEVzYlVKS2VrZEpPMFZKTUVkS0xHOUNRVUZCTzBWQlFVRXNiMEpCUVVFN1JVRkJRU3hoUVVGQk8wVkJRMEVzZVVKQlFVRTdUVUZCUVN4elFrRkJRVHRWUVVGQkxHMUNRVUZCTzBWQlEwRXNhMEpCUVVFN1JVRkRRU3hsUVVGQk8wRk1lV1ZTTzBGTGVHVlJPMFZCUTBrc1owSkJRVUU3UlVGRFFTeFhRVUZCTzBWQlEwRXNhMEpCUVVFN1JVRkRRU3hWUVVGQk8wVkdkRWxXTEdWQlFVRTdRVWhwYmtKR08wRkhhRzVDUlR0RlJXbEpUVHRKUm1oSlRDeHZSRUZCUVR0RlNHMXVRa1E3UVVGRFJqdEJTemRsVVR0RlFVTkpMRmRCUVVFN1JVRkRRU3hqUVVGQk8wVkJRMEVzYTBKQlFVRTdSVUZEUVN4VlFVRkJPMFZCUTBFc1QwRkJRVHRGUVVOQkxFMUJRVUU3UlVGRFFTeFRRVUZCTzBWQlEwRXNiVUpLTDBoRE8wVkpaMGxFTEd0Q1FVRkJPMFZCUTBFc1ZVRkJRVHRCVEN0bFdqdEJTekZsV1R0RlFVTkpMRlZCUVVFN1JVRkRRU3h0UWtwMlNVZzdRVVJ0YmtKaU8wRkxkR1ZaTzBWQlEwa3NWVUZCUVR0QlRIZGxhRUk3UVV0c1pWazdSVUZEU1N4VlFVRkJPMEZNYjJWb1FqdEJTMmhsU1R0RlFVTkpMR2RDUVVGQk8wVkdOMHRPTEdWQlFVRTdSVVVyUzAwc1pVRkJRVHRCVEd0bFVqdEJSMmh3UWtVN1JVVXlTMFU3U1VZeFMwUXNiVVJCUVVFN1JVaHRjRUpFTzBGQlEwWTdRVXQwWlZFN1JVRktTanRKUVV0UkxHZENRVUZCTzBsQlEwRXNhMEpCUVVFN1JVeDVaVlk3UVVGRFJqdEJTM1psU1R0RlFYQkZTanRKUVhGRlVTeG5RMEZCUVR0RlREQmxUanRCUVVOR08wRkxlbVZKTzBWQmRrVktPMGxCZDBWUkxEWkNRVUZCTzBsQlEwRXNNRUpCUVVFN1NVRkRRU3hoUVVGQk8wVk1OR1ZPTzBGQlEwWTdPMEZOZUhKQ1FUdEZRVU5KTEcxQ1RHbERVenRCUkRCd1FtSTdRVTB4Y2tKSk8wVkJRMGtzYjBKQlFVRTdSVUZCUVN4dlFrRkJRVHRGUVVGQkxHRkJRVUU3UVU0MGNrSlNPMEZOTTNKQ1VUdEZRVVpLTzBsQlIxRXNZMEZCUVR0RlRqaHlRbFk3UVVGRFJqdEJUVFZ5UWtrN1JVRkRTU3haUVVGQk8wRk9PSEpDVWp0QlRUZHlRbEU3UlVGRFNTeHRRa0ZCUVR0TlFVRkJMR2xDUVVGQk8xVkJRVUVzWVVGQlFUdEZTREJDVml4clFrRkJRVHRCU0hOeFFrWTdRVWR5Y1VKRk8wVkhOVUpOTzBsSU5rSk1MSE5FUVVGQk8wVklkM0ZDUkR0QlFVTkdPMEZOYm5OQ1dUdEZRVWhLTzBsQlNWRXNiVUpCUVVFN1VVRkJRU3hyUWtGQlFUdFpRVUZCTEdOQlFVRTdTVWgxUW1Rc2IwSkJRVUU3UlVobmNrSkJPMEZCUTBZN1FVZG9ja0pGTzBWSE5VSk5PMGxJTmtKTUxIbEVRVUZCTzBWSWJYSkNSRHRCUVVOR08wRk5lbk5DVVR0RlFVTkpMRzFDUVVGQk8wMUJRVUVzYVVKQlFVRTdWVUZCUVN4aFFVRkJPMEZPTW5OQ1dqdEJUVEZ6UWxrN1JVRkdTanRKUVVkUkxHRkJRVUU3UlU0MmMwSmtPMEZCUTBZN1FVMHhjMEpKTzBWQlEwa3NhMEpCUVVFN1JVRkRRU3haUVVGQk8wVkJRMEVzYVVKQlFVRTdRVTQwYzBKU08wRk5NWE5DU1R0RlFVTkpMRmRCUVVFN1JVRkRRU3huUWtGQlFUdEZRVU5CTEd0Q1FVRkJPMFZJU1U0c2JVSkJRVUU3UlVGeVFrRXNaVUZCUVR0QlNDdDBRa1k3UVVkNmMwSkZPMFZIVWtVN1NVaFRSQ3gzUkVGQlFUdEZTRFJ6UWtRN1FVRkRSanRCUjI1MVFrVTdSVWRoUlR0SlNGcEVMRzlFUVVGQk8wVkljM1ZDUkR0QlFVTkdPMEZOY25SQ1VUdEZRVTVLTzBsQlQxRXNhMEpCUVVFN1JVNTNkRUpXTzBGQlEwWTdRVTEwZEVKSk8wVkllRUpHTEdWQlFVRTdSVWN3UWswc1YwRkJRVHRGUVVOQkxHMUNRVUZCTzBWQlEwRXNhMEpCUVVFN1FVNTNkRUpTTzBGSGJuWkNSVHRGUjNWQ1JUdEpTSFJDUkN4dFJFRkJRVHRGU0hOMlFrUTdRVUZEUmp0QlRUVjBRbEU3UlVGRFNTeG5Ra0ZCUVR0QlRqaDBRbG83UVUwMWRFSlJPMFZCVWtvN1NVRlRVU3hyUWtGQlFUdEZUaXQwUWxZN1FVRkRSanM3UVU5cWVFSkJPMFZLY1VORkxHdENRVUZCTzBWQlFVRXNjVUpCUVVFN1JVbHFRMFVzYlVKT0swSlRPMEZFYjNaQ1lqdEJSMnAyUWtVN1JVbDBRMFk3U1VwMVEwY3NjMFJCUVVFN1JVaHZka0pFTzBGQlEwWTdRVWQwZGtKRk8wVkpkRU5HTzBsS2RVTkhMSGxFUVVGQk8wVkllWFpDUkR0QlFVTkdPMEZQTlhoQ1VUdEZTbGRPTEdWQlFVRTdSVWxVVlN4WFFVRkJPMFZCUTBFc1owSkJRVUU3UlVGRFFTeHRRa0ZCUVR0QlVEaDRRbG83UVVkMGVFSkZPMFZKV2swN1NVcGhUQ3h2UkVGQlFUdEZTSGw0UWtRN1FVRkRSanRCVDJ4NVFsazdSVUZNU2p0SlFVMVJMR3RDUVVGQk8wVlFjWGxDWkR0QlFVTkdPMEZQYm5sQ1VUdEZTa1ZPTEdWQlFVRTdSVWxCVlN4WFFVRkJPMFZCUTBFc2EwSkJRVUU3UlVGRFFTeG5Ra0ZCUVR0RlFVTkJMR05CUVVFN1JVcHJRbFlzYlVKQlFVRTdRVWh2ZUVKR08wRkhlSGxDUlR0RlNVaE5PMGxLU1V3c2JVUkJRVUU3UlVneWVVSkVPMEZCUTBZN1FVZDRlRUpGTzBWSmVFSk5PMGxLZVVKTUxIZEVRVUZCTzBWSU1uaENSRHRCUVVOR08wRlBPWGxDV1R0RlFWQktPMGxCVVZFc2EwSkJRVUU3UlZCcGVrSmtPMEZCUTBZN1FVOHZlVUpSTzBWQlEwa3NZVUZCUVR0RlFVTkJMR2xFUVVGQk8wVkJRMEVzWTBGQlFUdEZRVU5CTEhsQ1FVRkJPMDFCUVVFc2MwSkJRVUU3VlVGQlFTeDNRa0ZCUVR0QlVHbDZRbG83UVU5b2VrSlpPMFZCVEVvN1NVRk5VU3hyUTBGQlFUdEZVRzE2UW1RN1FVRkRSanRCVDJ4NlFsazdSVUZTU2p0SlFWTlJMREJDUVVGQk8wbEJRMEVzYlVKQlFVRTdTVUZEUVN4M1FrRkJRVHRSUVVGQkxIRkNRVUZCTzFsQlFVRXNkVUpCUVVFN1JWQnhla0prTzBGQlEwWTdRVTlzZWtKWk8wVkJRMGtzYVVKQlFVRTdRVkJ2ZWtKb1FqdEJUMjU2UW1kQ08wVkJSa283U1VGSFVTeHZRa0ZCUVR0RlVITjZRbXhDTzBGQlEwWTdRVTl3ZWtKWk8wVkJVRW83U1VGUlVTeHZRa0ZCUVR0RlVIVjZRbVE3UVVGRFJqdEJUM0o2UWxFN1JVRkRTU3hyUWtGQlFUdEZRVU5CTEZOQlFVRTdSVUZEUVN3clIwRkJRVHRWUVVGQkxIVkhRVUZCTzBGUWRYcENXanRCVDNSNlFsazdSVUZEU1N4bFFVRkJPMEZRZDNwQ2FFSTdRVTkwZWtKWk8wVkJVRW83U1VGUlVTeFZRVUZCTzBsQlEwRXNXVUZCUVR0SlFVTkJMRlZCUVVFN1JWQjVla0prTzBGQlEwWTdPMEZQY25wQ1FUdEZRVU5KTEd0Q1FVRkJPMFZCUTBFc2IwSkJRVUU3UlVGQlFTeHZRa0ZCUVR0RlFVRkJMR0ZCUVVFN1FWQjNla0pLTzBGUGRucENTVHRGU25CRVJpeG5Ra0ZCUVR0RlNYTkVUU3hYUVVGQk8wVkJRMEVzWjBKQlFVRTdSVUZEUVN4blFrRkJRVHRCVUhsNlFsSTdRVWRvTTBKRk8wVkpiVVJGTzBsS2JFUkVMRzlFUVVGQk8wVkliVE5DUkR0QlFVTkdPMEZQTjNwQ1VUdEZTbnBFVGl4bFFVRkJPMEZJZVROQ1JqdEJSM2d6UWtVN1JVbDNSRTA3U1VwMlJFd3NiMFJCUVVFN1JVZ3lNMEpFTzBGQlEwWTdRVTlzTUVKUk8wVkJVa283U1VGVFVTeHJRa0ZCUVR0RlVIRXdRbFk3UVVGRFJqdEJUMjR3UWtrN1JVRkRTU3hyUWtGQlFUdEZRVU5CTEZOQlFVRTdSVUZEUVN4WFFVRkJPMFZCUTBFc2FVSkJRVUU3UlVwd1JVNHNaVUZCUVR0QlNEQTBRa1k3UVVkNk5FSkZPMFZKSzBSRk8wbEtPVVJFTEcxRVFVRkJPMFZJTkRSQ1JEdEJRVU5HTzBGUGVqQkNVVHRGUVU1S08wbEJUMUVzYTBKQlFVRTdTVUZEUVN4bFFVRkJPMGxCUTBFc2EwSkJRVUU3U1VGRFFTeE5RVUZCTzBWUU5EQkNWanRCUVVOR08wRlBNVEJDU1R0RlFVTkpMRzlEUVVGQk8wMUJRVUVzWjBOQlFVRTdWVUZCUVN3MFFrRkJRVHRGUVVOQkxGZEJRVUU3UlVGRFFTeFhRVUZCTzBWQlEwRXNiVUpCUVVFN1JVRkRRU3huUWtGQlFUdEZRVU5CTEdkQ1FVRkJPMFZLYmtaT0xHVkJRVUU3UVVobk5rSkdPMEZITHpWQ1JUdEZTVFJGUlR0SlNqTkZSQ3h0UkVGQlFUdEZTR3MyUWtRN1FVRkRSanRCVHk4d1FrazdSVUZ5UTBvN1NVRnpRMUVzTkVKQlFVRTdTVUZCUVN3MlFrRkJRVHRSUVVGQkxEQkNRVUZCTzFsQlFVRXNjMEpCUVVFN1JWQnJNVUpPTzBGQlEwWTdPMEZSTVRkQ1FUdEZRVU5KTEcxQ1VHOURZVHRCUkhrMVFtcENPMEZSTlRkQ1NUdEZRVU5KTEZkQlFVRTdSVUZEUVN4WFFVRkJPMFZCUTBFc1dVRkJRVHRGUVVOQkxHbENRVUZCTzBWQlEwRXNiVUpRT0VKVE8wRkVaelpDYWtJN08wRlRjamhDUVR0RlFVTkpMRzFDVW1sRFV6dEZSVWRZTEdsQ1FVRkJPMFZCUVVFc2IwSkJRVUU3UVVoek5rSkdPMEZIY2paQ1JUdEZUWFJEUmp0SlRuVkRSeXh6UkVGQlFUdEZTSGMyUWtRN1FVRkRSanRCUnpFMlFrVTdSVTEwUTBZN1NVNTFRMGNzZVVSQlFVRTdSVWcyTmtKRU8wRkJRMFk3UVZOb09VSlJPMFZCUkVvN1NVRkZVU3h0UWtGQlFUdEZWRzA1UWxZN1FVRkRSanRCVTJnNVFsRTdSVUZEU1N4dlFrRkJRVHRGUVVGQkxHOUNRVUZCTzBWQlFVRXNZVUZCUVR0RlFVTkJMSGxDUVVGQk8wMUJRVUVzYzBKQlFVRTdWVUZCUVN4dFFrRkJRVHRGUVVOQkxIbENRVUZCTzAxQlFVRXNjMEpCUVVFN1ZVRkJRU3c0UWtGQlFUdEZRVU5CTEZkQlFVRTdRVlJyT1VKYU8wRlRhamxDV1R0RlFVeEtPMGxCVFZFc05FSkJRVUU3U1VGQlFTdzJRa0ZCUVR0UlFVRkJMREJDUVVGQk8xbEJRVUVzYzBKQlFVRTdSVlJ2T1VKa08wRkJRMFk3UVZOc09VSlJPMFZPYTBKT0xHZENRVUZCTzBGSWJUaENSanRCUjJ3NFFrVTdSVTF1UWswN1NVNXZRa3dzY1VSQlFVRTdSVWh4T0VKRU8wRkJRMFk3UVZOeU9VSlJPMFZCUTBrc1kwRkJRVHRGUVVOQkxHbENRVUZCTzBGVWRUbENXanRCVTNRNVFsazdSVUZJU2p0SlFVbFJMR3RDUVVGQk8wVlVlVGxDWkR0QlFVTkdPMEZUZERsQ1NUdEZRVU5KTEZkQlFVRTdSVUZEUVN4clFrRkJRVHRGUVVOQkxEUkNRVUZCTzBWQlFVRXNkVUpCUVVFN1JVRkJRU3h2UWtGQlFUdEZRVU5CTEdkQ1FVRkJPMFZPY0VKT0xHVkJRVUU3UVVnMkswSkdPMEZITlN0Q1JUdEZUV1ZGTzBsT1pFUXNiVVJCUVVFN1JVZ3JLMEpFTzBGQlEwWTdRVk14T1VKUk8wVkJRMGtzWTFKVVN6dEJSSEVyUW1wQ08wRlRlamxDU1R0RlFVTkpMRzFDUVVGQk8wRlVNamxDVWp0QlV6RTVRbEU3UlVGRFNTeG5Ra0ZCUVR0QlZEUTVRbG83UVZNeE9VSlJPMFZCVEVvN1NVRk5VU3hyUWtGQlFUdEZWRFk1UWxZN1FVRkRSanRCVXpVNVFsRTdSVUZEU1N4cFJFRkJRVHRCVkRnNVFsbzdPMEZET1RaQ1FUdEZRVU5ETEcxQ1FVRkJPMDFCUVVFc2EwSkJRVUU3VlVGQlFTeGpRVUZCTzBGRWFUZENSRHRCUVVOQk8wRkJRMEVzVFVGQlRTeHZSVUZCYjBVN1FVRkRNVVU3TzBOQlJVTTdPMEZCUlVRN08wRkJSVUU3TzBGQlJVRTdPME5CUlVNN08wRkJSVVE3TzBGQlJVRTdPMEZCUlVFN08wTkJSVU03TzBGQlJVUTdPMEZCUlVFN08wRkJSVUU3TzBOQlJVTTdPMEZCUlVRN08wRkJSVUU3TzBGQlJVRTdPME5CUlVNN08wRkJSVVE3TzBGQlJVRTdPMEZCUlVFN08wTkJSVU03TzBGQlJVUTdPMEZCUlVFN08wRkJSVUVpTENKbWFXeGxJam9pYldGcGJpNWpjM01pTENKemIzVnlZMlZ6UTI5dWRHVnVkQ0k2V3lJcUlIdGNjbHh1WEhSd1lXUmthVzVuT2lBd2NIZzdYSEpjYmx4MGJXRnlaMmx1T2lBd2NIZzdYSEpjYmx4MFltOXlaR1Z5T2lBd2NIZzdYSEpjYm4xY2NseHVLaXhjY2x4dUtqcGlaV1p2Y21Vc1hISmNiaW82WVdaMFpYSWdlMXh5WEc1Y2RDMXRiM290WW05NExYTnBlbWx1WnpvZ1ltOXlaR1Z5TFdKdmVEdGNjbHh1WEhRdGQyVmlhMmwwTFdKdmVDMXphWHBwYm1jNklHSnZjbVJsY2kxaWIzZzdYSEpjYmx4MFltOTRMWE5wZW1sdVp6b2dZbTl5WkdWeUxXSnZlRHRjY2x4dWZWeHlYRzQ2Wm05amRYTXNYSEpjYmpwaFkzUnBkbVVnZTF4eVhHNWNkQzh2SUc5MWRHeHBibVU2SUc1dmJtVTdYSEpjYm4xY2NseHVZVHBtYjJOMWN5eGNjbHh1WVRwaFkzUnBkbVVnZTF4eVhHNWNkQzh2SUc5MWRHeHBibVU2SUc1dmJtVTdYSEpjYm4xY2NseHVZWE5wWkdVc1hISmNibTVoZGl4Y2NseHVabTl2ZEdWeUxGeHlYRzVvWldGa1pYSXNYSEpjYm5ObFkzUnBiMjRnZTF4eVhHNWNkR1JwYzNCc1lYazZJR0pzYjJOck8xeHlYRzU5WEhKY2JtaDBiV3dnZTF4eVhHNWNkR1p2Ym5RdGMybDZaVG9nSTNza1ptOXVkRk5wZW1VZ0t5QndlSDA3WEhKY2JuMWNjbHh1YUhSdGJDeGNjbHh1WW05a2VTQjdYSEpjYmx4MGFHVnBaMmgwT2lBeE1EQWxPMXh5WEc1Y2RHMXBiaTEzYVdSMGFEb2dKRzFwYmxkcFpIUm9PMXh5WEc1OVhISmNibUp2WkhrZ2UxeHlYRzVjZEd4cGJtVXRhR1ZwWjJoME9pQXhPMXh5WEc1Y2RHWnZiblF0Wm1GdGFXeDVPaUFrWm05dWRFWmhiV2xzZVR0Y2NseHVYSFF2TDNSbGVIUXRjbVZ1WkdWeWFXNW5PaUJ2Y0hScGJXbDZaVXhsWjJsaWFXeHBkSGs3WEhKY2JseDBMVzF6TFhSbGVIUXRjMmw2WlMxaFpHcDFjM1E2SURFd01DVTdYSEpjYmx4MExXMXZlaTEwWlhoMExYTnBlbVV0WVdScWRYTjBPaUF4TURBbE8xeHlYRzVjZEMxM1pXSnJhWFF0ZEdWNGRDMXphWHBsTFdGa2FuVnpkRG9nTVRBd0pUdGNjbHh1ZlZ4eVhHNXBibkIxZEN4Y2NseHVZblYwZEc5dUxGeHlYRzUwWlhoMFlYSmxZU0I3WEhKY2JseDBabTl1ZEMxbVlXMXBiSGs2SUNSbWIyNTBSbUZ0YVd4NU8xeHlYRzVjZEdadmJuUXRjMmw2WlRvZ2FXNW9aWEpwZER0Y2NseHVmVnh5WEc1cGJuQjFkRG82TFcxekxXTnNaV0Z5SUh0Y2NseHVYSFJrYVhOd2JHRjVPaUJ1YjI1bE8xeHlYRzU5WEhKY2JtSjFkSFJ2YmlCN1hISmNibHgwWTNWeWMyOXlPaUJ3YjJsdWRHVnlPMXh5WEc1Y2RHSmhZMnRuY205MWJtUXRZMjlzYjNJNklHbHVhR1Z5YVhRN1hISmNibjFjY2x4dVluVjBkRzl1T2pvdGJXOTZMV1p2WTNWekxXbHVibVZ5SUh0Y2NseHVYSFJ3WVdSa2FXNW5PaUF3TzF4eVhHNWNkR0p2Y21SbGNqb2dNRHRjY2x4dWZWeHlYRzVoTEZ4eVhHNWhPblpwYzJsMFpXUWdlMXh5WEc1Y2RIUmxlSFF0WkdWamIzSmhkR2x2YmpvZ2JtOXVaVHRjY2x4dWZWeHlYRzVoT21odmRtVnlJSHRjY2x4dVhIUjBaWGgwTFdSbFkyOXlZWFJwYjI0NklHNXZibVU3WEhKY2JuMWNjbHh1ZFd3Z2JHa2dlMXh5WEc1Y2RHeHBjM1F0YzNSNWJHVTZJRzV2Ym1VN1hISmNibjFjY2x4dWFXMW5JSHRjY2x4dVhIUjJaWEowYVdOaGJDMWhiR2xuYmpvZ2RHOXdPMXh5WEc1OVhISmNibWd4TEZ4eVhHNW9NaXhjY2x4dWFETXNYSEpjYm1nMExGeHlYRzVvTlN4Y2NseHVhRFlnZTF4eVhHNWNkR1p2Ym5RdGQyVnBaMmgwT2lCcGJtaGxjbWwwTzF4eVhHNWNkR1p2Ym5RdGMybDZaVG9nYVc1b1pYSnBkRHRjY2x4dWZWeHlYRzR2THkxM1pXSnJhWFF0YjNabGNtWnNiM2N0YzJOeWIyeHNhVzVuT2lCMGIzVmphRHRjY2x4dUx5OWhibWx0WVhScGIyNHRjR3hoZVMxemRHRjBaVG9nY0dGMWMyVmtJQ0ZwYlhCdmNuUmhiblE3WEhKY2JpSXNJaW9nZTF4dUlDQndZV1JrYVc1bk9pQXdjSGc3WEc0Z0lHMWhjbWRwYmpvZ01IQjRPMXh1SUNCaWIzSmtaWEk2SURCd2VEdGNibjFjYmx4dUtpeGNiaW82WW1WbWIzSmxMRnh1S2pwaFpuUmxjaUI3WEc0Z0lDMXRiM290WW05NExYTnBlbWx1WnpvZ1ltOXlaR1Z5TFdKdmVEdGNiaUFnTFhkbFltdHBkQzFpYjNndGMybDZhVzVuT2lCaWIzSmtaWEl0WW05NE8xeHVJQ0JpYjNndGMybDZhVzVuT2lCaWIzSmtaWEl0WW05NE8xeHVmVnh1WEc1aGMybGtaU3hjYm01aGRpeGNibVp2YjNSbGNpeGNibWhsWVdSbGNpeGNibk5sWTNScGIyNGdlMXh1SUNCa2FYTndiR0Y1T2lCaWJHOWphenRjYm4xY2JseHVhSFJ0YkNCN1hHNGdJR1p2Ym5RdGMybDZaVG9nTVRad2VEdGNibjFjYmx4dWFIUnRiQ3hjYm1KdlpIa2dlMXh1SUNCb1pXbG5hSFE2SURFd01DVTdYRzRnSUcxcGJpMTNhV1IwYURvZ016SXdjSGc3WEc1OVhHNWNibUp2WkhrZ2UxeHVJQ0JzYVc1bExXaGxhV2RvZERvZ01UdGNiaUFnWm05dWRDMW1ZVzFwYkhrNklGd2lVbTlpYjNSdlhDSTdYRzRnSUMxdGN5MTBaWGgwTFhOcGVtVXRZV1JxZFhOME9pQXhNREFsTzF4dUlDQXRiVzk2TFhSbGVIUXRjMmw2WlMxaFpHcDFjM1E2SURFd01DVTdYRzRnSUMxM1pXSnJhWFF0ZEdWNGRDMXphWHBsTFdGa2FuVnpkRG9nTVRBd0pUdGNibjFjYmx4dWFXNXdkWFFzWEc1aWRYUjBiMjRzWEc1MFpYaDBZWEpsWVNCN1hHNGdJR1p2Ym5RdFptRnRhV3g1T2lCY0lsSnZZbTkwYjF3aU8xeHVJQ0JtYjI1MExYTnBlbVU2SUdsdWFHVnlhWFE3WEc1OVhHNWNibWx1Y0hWME9qb3RiWE10WTJ4bFlYSWdlMXh1SUNCa2FYTndiR0Y1T2lCdWIyNWxPMXh1ZlZ4dVhHNWlkWFIwYjI0Z2UxeHVJQ0JqZFhKemIzSTZJSEJ2YVc1MFpYSTdYRzRnSUdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUdsdWFHVnlhWFE3WEc1OVhHNWNibUoxZEhSdmJqbzZMVzF2ZWkxbWIyTjFjeTFwYm01bGNpQjdYRzRnSUhCaFpHUnBibWM2SURBN1hHNGdJR0p2Y21SbGNqb2dNRHRjYm4xY2JseHVZU3hjYm1FNmRtbHphWFJsWkNCN1hHNGdJSFJsZUhRdFpHVmpiM0poZEdsdmJqb2dibTl1WlR0Y2JuMWNibHh1WVRwb2IzWmxjaUI3WEc0Z0lIUmxlSFF0WkdWamIzSmhkR2x2YmpvZ2JtOXVaVHRjYm4xY2JseHVkV3dnYkdrZ2UxeHVJQ0JzYVhOMExYTjBlV3hsT2lCdWIyNWxPMXh1ZlZ4dVhHNXBiV2NnZTF4dUlDQjJaWEowYVdOaGJDMWhiR2xuYmpvZ2RHOXdPMXh1ZlZ4dVhHNW9NU3hjYm1neUxGeHVhRE1zWEc1b05DeGNibWcxTEZ4dWFEWWdlMXh1SUNCbWIyNTBMWGRsYVdkb2REb2dhVzVvWlhKcGREdGNiaUFnWm05dWRDMXphWHBsT2lCcGJtaGxjbWwwTzF4dWZWeHVYRzVpYjJSNUlIdGNiaUFnWTI5c2IzSTZJQ013TURKRk5rTTdYRzU5WEc1aWIyUjVMbDlzYjJOcklIdGNiaUFnYjNabGNtWnNiM2M2SUdocFpHUmxianRjYm4xY2JseHVMbmR5WVhCd1pYSWdlMXh1SUNCM2FXUjBhRG9nTVRBd0pUdGNiaUFnYldsdUxXaGxhV2RvZERvZ01UQXdKVHRjYmlBZ2IzWmxjbVpzYjNjNklHaHBaR1JsYmp0Y2JpQWdaR2x6Y0d4aGVUb2dabXhsZUR0Y2JpQWdabXhsZUMxa2FYSmxZM1JwYjI0NklHTnZiSFZ0Ymp0Y2JuMWNiaTVmWTI5dWRHRnBibVZ5SUh0Y2JpQWdiV0Y0TFhkcFpIUm9PaUF4TVRJd2NIZzdYRzRnSUcxaGNtZHBiam9nTUNCaGRYUnZPMXh1ZlZ4dVFHMWxaR2xoSUNodFlYZ3RkMmxrZEdnNklERXhNekp3ZUNrZ2UxeHVJQ0F1WDJOdmJuUmhhVzVsY2lCN1hHNGdJQ0FnYldGNExYZHBaSFJvT2lBNU56QndlRHRjYmlBZ2ZWeHVmVnh1UUcxbFpHbGhJQ2h0WVhndGQybGtkR2c2SURrNU1TNDVPSEI0S1NCN1hHNGdJQzVmWTI5dWRHRnBibVZ5SUh0Y2JpQWdJQ0J0WVhndGQybGtkR2c2SURjMU1IQjRPMXh1SUNCOVhHNTlYRzVBYldWa2FXRWdLRzFoZUMxM2FXUjBhRG9nTnpZM0xqazRjSGdwSUh0Y2JpQWdMbDlqYjI1MFlXbHVaWElnZTF4dUlDQWdJRzFoZUMxM2FXUjBhRG9nYm05dVpUdGNiaUFnSUNCd1lXUmthVzVuT2lBd0lERXdjSGc3WEc0Z0lIMWNibjFjYmx4dUx5cGNiaTh2UW5WeVoyVnlYRzR1YVdOdmJpMXRaVzUxSUh0Y2JseDBaR2x6Y0d4aGVUb2dibTl1WlR0Y2JseDBRRzFsWkdsaElDaHRZWGd0ZDJsa2RHZzZJQ1J0WkRNcmNIZ3BJSHRjYmx4MFhIUmthWE53YkdGNU9pQmliRzlqYXp0Y2JseDBYSFJ3YjNOcGRHbHZiam9nWVdKemIyeDFkR1U3WEc1Y2RGeDBkRzl3T2lBeE9IQjRPMXh1WEhSY2RISnBaMmgwT2lBeE1IQjRPMXh1WEhSY2RIZHBaSFJvT2lBek1IQjRPMXh1WEhSY2RHaGxhV2RvZERvZ01UaHdlRHRjYmx4MFhIUmpkWEp6YjNJNklIQnZhVzUwWlhJN1hHNWNkRngwZWkxcGJtUmxlRG9nTlR0Y2JseDBYSFJ6Y0dGdUlIdGNibHgwWEhSY2RIUnlZVzV6YVhScGIyNDZJR0ZzYkNBd0xqTnpJR1ZoYzJVZ01ITTdYRzVjZEZ4MFhIUjBiM0E2SUdOaGJHTW9OVEFsSUMwZ01YQjRLVHRjYmx4MFhIUmNkR3hsWm5RNklEQndlRHRjYmx4MFhIUmNkSEJ2YzJsMGFXOXVPaUJoWW5OdmJIVjBaVHRjYmx4MFhIUmNkSGRwWkhSb09pQXhNREFsTzF4dVhIUmNkRngwYUdWcFoyaDBPaUF5Y0hnN1hHNWNkRngwWEhSaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lBak1EQXdPMXh1WEhSY2RGeDBKanBtYVhKemRDMWphR2xzWkNCN1hHNWNkRngwWEhSY2RIUnZjRG9nTUhCNE8xeHVYSFJjZEZ4MGZWeHVYSFJjZEZ4MEpqcHNZWE4wTFdOb2FXeGtJSHRjYmx4MFhIUmNkRngwZEc5d09pQmhkWFJ2TzF4dVhIUmNkRngwWEhSaWIzUjBiMjA2SURCd2VEdGNibHgwWEhSY2RIMWNibHgwWEhSOVhHNWNkRngwSmk1ZllXTjBhWFpsSUh0Y2JseDBYSFJjZEhOd1lXNGdlMXh1WEhSY2RGeDBYSFIwY21GdWMyWnZjbTA2SUhOallXeGxLREFwTzF4dVhIUmNkRngwWEhRbU9tWnBjbk4wTFdOb2FXeGtJSHRjYmx4MFhIUmNkRngwWEhSMGNtRnVjMlp2Y20wNklISnZkR0YwWlNndE5EVmtaV2NwTzF4dVhIUmNkRngwWEhSY2RIUnZjRG9nWTJGc1l5ZzFNQ1VnTFNBeGNIZ3BPMXh1WEhSY2RGeDBYSFI5WEc1Y2RGeDBYSFJjZENZNmJHRnpkQzFqYUdsc1pDQjdYRzVjZEZ4MFhIUmNkRngwZEhKaGJuTm1iM0p0T2lCeWIzUmhkR1VvTkRWa1pXY3BPMXh1WEhSY2RGeDBYSFJjZEdKdmRIUnZiVG9nWTJGc1l5ZzFNQ1VnTFNBeGNIZ3BPMXh1WEhSY2RGeDBYSFI5WEc1Y2RGeDBYSFI5WEc1Y2RGeDBmVnh1WEhSOVhHNTlYRzRxTDF4dUxtaGxZV1JsY2lCN1hHNGdJR0poWTJ0bmNtOTFibVE2SUNObVptWTdYRzRnSUhCaFpHUnBibWN0ZEc5d09pQXpNSEI0TzF4dUlDQndZV1JrYVc1bkxXSnZkSFJ2YlRvZ016QndlRHRjYm4xY2JrQnRaV1JwWVNBb2JXRjRMWGRwWkhSb09pQXhNVEl3Y0hncElIdGNiaUFnTG1obFlXUmxjaUI3WEc0Z0lDQWdjR0ZrWkdsdVp5MTBiM0E2SUdOaGJHTW9NVFZ3ZUNBcklERTFJQ29nS0NneE1EQjJkeUF0SURNeU1IQjRLU0F2SURnd01Da3BPMXh1SUNCOVhHNTlYRzVBYldWa2FXRWdLRzFoZUMxM2FXUjBhRG9nTVRFeU1IQjRLU0I3WEc0Z0lDNW9aV0ZrWlhJZ2UxeHVJQ0FnSUhCaFpHUnBibWN0WW05MGRHOXRPaUJqWVd4aktERTFjSGdnS3lBeE5TQXFJQ2dvTVRBd2RuY2dMU0F6TWpCd2VDa2dMeUE0TURBcEtUdGNiaUFnZlZ4dWZWeHVMbWhsWVdSbGNsOWZkM0poY0NCN1hHNGdJR1JwYzNCc1lYazZJR1pzWlhnN1hHNGdJR0ZzYVdkdUxXbDBaVzF6T2lCalpXNTBaWEk3WEc0Z0lHcDFjM1JwWm5rdFkyOXVkR1Z1ZERvZ2MzQmhZMlV0WW1WMGQyVmxianRjYm4xY2JrQnRaV1JwWVNBb2JXRjRMWGRwWkhSb09pQXhNVE15Y0hncElIdGNiaUFnTG1obFlXUmxjbDlmZDNKaGNDQjdYRzRnSUNBZ1pteGxlQzFrYVhKbFkzUnBiMjQ2SUdOdmJIVnRianRjYmlBZ2ZWeHVmVnh1UUcxbFpHbGhJQ2h0WVhndGQybGtkR2c2SURjMk55NDVPSEI0S1NCN1hHNGdJQzVvWldGa1pYSmZYM2R5WVhBZ2UxeHVJQ0FnSUdac1pYZ3RaR2x5WldOMGFXOXVPaUJ5YjNjN1hHNGdJSDFjYm4xY2JpNW9aV0ZrWlhKZlgyMWxiblVnZTF4dUlDQndiM05wZEdsdmJqb2djbVZzWVhScGRtVTdYRzU5WEc0dWFHVmhaR1Z5WDE5aWRYSm5aWElnZTF4dUlDQmthWE53YkdGNU9pQnViMjVsTzF4dWZWeHVRRzFsWkdsaElDaHRZWGd0ZDJsa2RHZzZJRGMyTnk0NU9IQjRLU0I3WEc0Z0lDNW9aV0ZrWlhKZlgySjFjbWRsY2lCN1hHNGdJQ0FnWkdsemNHeGhlVG9nWW14dlkyczdYRzRnSUNBZ2NHOXphWFJwYjI0NklISmxiR0YwYVhabE8xeHVJQ0FnSUhkcFpIUm9PaUEwTUhCNE8xeHVJQ0FnSUdobGFXZG9kRG9nTkRCd2VEdGNiaUFnSUNCamRYSnpiM0k2SUhCdmFXNTBaWEk3WEc0Z0lDQWdlaTFwYm1SbGVEb2dOVHRjYmlBZ2ZWeHVJQ0F1YUdWaFpHVnlYMTlpZFhKblpYSWdjM0JoYmlCN1hHNGdJQ0FnZEhKaGJuTnBkR2x2YmpvZ1lXeHNJREF1TTNNZ1pXRnpaU0F3Y3p0Y2JpQWdJQ0IwYjNBNklHTmhiR01vTlRBbElDMGdNWEI0S1R0Y2JpQWdJQ0JzWldaME9pQmpZV3hqS0RVd0pTQXRJREUxY0hncE8xeHVJQ0FnSUhkcFpIUm9PaUF6TUhCNE8xeHVJQ0FnSUhCdmMybDBhVzl1T2lCaFluTnZiSFYwWlR0Y2JpQWdJQ0JvWldsbmFIUTZJREp3ZUR0Y2JpQWdJQ0JpWVdOclozSnZkVzVrTFdOdmJHOXlPaUFqTURBeVJUWkRPMXh1SUNBZ0lHSnZjbVJsY2kxeVlXUnBkWE02SURKd2VEdGNiaUFnZlZ4dUlDQXVhR1ZoWkdWeVgxOWlkWEpuWlhJZ2MzQmhianBtYVhKemRDMWphR2xzWkNCN1hHNGdJQ0FnZEc5d09pQXhNSEI0TzF4dUlDQjlYRzRnSUM1b1pXRmtaWEpmWDJKMWNtZGxjaUJ6Y0dGdU9teGhjM1F0WTJocGJHUWdlMXh1SUNBZ0lIUnZjRG9nWVhWMGJ6dGNiaUFnSUNCaWIzUjBiMjA2SURFd2NIZzdYRzRnSUgxY2JpQWdMbWhsWVdSbGNsOWZZblZ5WjJWeUxsOWhZM1JwZG1VZ2UxeHVJQ0FnSUdKdmNtUmxjaTFpYjNSMGIyMHRiR1ZtZEMxeVlXUnBkWE02SURBN1hHNGdJQ0FnWW05eVpHVnlMV0p2ZEhSdmJTMXlhV2RvZEMxeVlXUnBkWE02SURBN1hHNGdJSDFjYmlBZ0xtaGxZV1JsY2w5ZlluVnlaMlZ5TGw5aFkzUnBkbVVnYzNCaGJpQjdYRzRnSUNBZ2RISmhibk5tYjNKdE9pQnpZMkZzWlNnd0tUdGNiaUFnZlZ4dUlDQXVhR1ZoWkdWeVgxOWlkWEpuWlhJdVgyRmpkR2wyWlNCemNHRnVPbVpwY25OMExXTm9hV3hrSUh0Y2JpQWdJQ0IwY21GdWMyWnZjbTA2SUhKdmRHRjBaU2d0TkRWa1pXY3BPMXh1SUNBZ0lIUnZjRG9nWTJGc1l5ZzFNQ1VnTFNBeGNIZ3BPMXh1SUNCOVhHNGdJQzVvWldGa1pYSmZYMkoxY21kbGNpNWZZV04wYVhabElITndZVzQ2YkdGemRDMWphR2xzWkNCN1hHNGdJQ0FnZEhKaGJuTm1iM0p0T2lCeWIzUmhkR1VvTkRWa1pXY3BPMXh1SUNBZ0lHSnZkSFJ2YlRvZ1kyRnNZeWcxTUNVZ0xTQXhjSGdwTzF4dUlDQjlYRzU5WEc0dWFHVmhaR1Z5WDE5c2IyZHZJR2x0WnlCN1hHNGdJRzFoZUMxM2FXUjBhRG9nTVRBd0pUdGNiaUFnYUdWcFoyaDBPaUJoZFhSdk8xeHVmVnh1UUcxbFpHbGhJQ2h0WVhndGQybGtkR2c2SURRM09TNDVPSEI0S1NCN1hHNGdJQzVvWldGa1pYSmZYMnh2WjI4Z2UxeHVJQ0FnSUcxaGVDMTNhV1IwYURvZ056QjJkenRjYmlBZ2ZWeHVmVnh1WEc0dWJXVnVkUzEwYjNBZ2UxeHVJQ0IwY21GdWMybDBhVzl1T2lCaGJHd2dNQzR5Y3p0Y2JuMWNiaTV0Wlc1MUxYUnZjRjlmYkdsemRDQjdYRzRnSUdScGMzQnNZWGs2SUdac1pYZzdYRzRnSUdGc2FXZHVMV2wwWlcxek9pQmpaVzUwWlhJN1hHNTlYRzVBYldWa2FXRWdLRzFoZUMxM2FXUjBhRG9nTnpZM0xqazRjSGdwSUh0Y2JpQWdMbTFsYm5VdGRHOXdYMTlzYVhOMElIdGNiaUFnSUNCbWJHVjRMV1JwY21WamRHbHZiam9nWTI5c2RXMXVPMXh1SUNBZ0lHSmhZMnRuY205MWJtUTZJQ05HTWtZeFJqRTdYRzRnSUNBZ2NHRmtaR2x1WnpvZ01qQndlRHRjYmlBZ0lDQmhiR2xuYmkxcGRHVnRjem9nYzNSaGNuUTdYRzRnSUgxY2JuMWNiaTV0Wlc1MUxYUnZjRjlmYVhSbGJTQjdYRzRnSUcxaGNtZHBiaTF5YVdkb2REb2dNelZ3ZUR0Y2JuMWNiaTV0Wlc1MUxYUnZjRjlmYVhSbGJUcHNZWE4wTFdOb2FXeGtJSHRjYmlBZ2JXRnlaMmx1TFhKcFoyaDBPaUF3TzF4dWZWeHVMbTFsYm5VdGRHOXdYMTlwZEdWdE9teGhjM1F0WTJocGJHUWdMbTFsYm5VdGRHOXdYMTlzYVc1cklIdGNiaUFnWkdsemNHeGhlVG9nYVc1c2FXNWxMV1pzWlhnN1hHNGdJR0ZzYVdkdUxXbDBaVzF6T2lCalpXNTBaWEk3WEc0Z0lHcDFjM1JwWm5rdFkyOXVkR1Z1ZERvZ1kyVnVkR1Z5TzF4dUlDQmpiMnh2Y2pvZ0kyWm1aanRjYmlBZ1ltRmphMmR5YjNWdVpEb2dJekF3TjBGR1JqdGNiaUFnWW05eVpHVnlMWEpoWkdsMWN6b2dPSEI0TzF4dUlDQm1iMjUwTFhkbGFXZG9kRG9nTlRBd08xeHVJQ0JvWldsbmFIUTZJRFE0Y0hnN1hHNGdJSGRwWkhSb09pQXlNREJ3ZUR0Y2JuMWNiaTV0Wlc1MUxYUnZjRjlmYVhSbGJUcHNZWE4wTFdOb2FXeGtJQzV0Wlc1MUxYUnZjRjlmYkdsdWF6cG9iM1psY2lCN1hHNGdJR052Ykc5eU9pQWpabVptTzF4dUlDQmlZV05yWjNKdmRXNWtPaUFqTVRVM09FVXdPMXh1ZlZ4dVFHMWxaR2xoSUNodFlYZ3RkMmxrZEdnNklEYzJOeTQ1T0hCNEtTQjdYRzRnSUM1dFpXNTFMWFJ2Y0Y5ZmFYUmxiVHBzWVhOMExXTm9hV3hrSUh0Y2JpQWdJQ0J0WVhKbmFXNHRjbWxuYUhRNklEQTdYRzRnSUNBZ2JXRnlaMmx1TFdKdmRIUnZiVG9nTUR0Y2JpQWdmVnh1ZlZ4dVFHMWxaR2xoSUNodFlYZ3RkMmxrZEdnNklEYzJOeTQ1T0hCNEtTQjdYRzRnSUM1dFpXNTFMWFJ2Y0Y5ZmFYUmxiU0I3WEc0Z0lDQWdiV0Z5WjJsdUxYSnBaMmgwT2lBd08xeHVJQ0FnSUcxaGNtZHBiaTFpYjNSMGIyMDZJREl3Y0hnN1hHNGdJSDFjYm4xY2JpNXRaVzUxTFhSdmNGOWZiR2x1YXlCN1hHNGdJR052Ykc5eU9pQWpNREF5UlRaRE8xeHVJQ0IwY21GdWMybDBhVzl1T2lCaGJHd2dNQzR6Y3p0Y2JuMWNiaTV0Wlc1MUxYUnZjRjlmYkdsdWF6cG9iM1psY2lCN1hHNGdJR052Ykc5eU9pQWpNVFUzT0VVd08xeHVmVnh1UUcxbFpHbGhJQ2h0WVhndGQybGtkR2c2SURFeE16SndlQ2tnZTF4dUlDQXViV1Z1ZFMxMGIzQWdlMXh1SUNBZ0lHMWhjbWRwYmkxMGIzQTZJREl3Y0hnN1hHNGdJSDFjYm4xY2JrQnRaV1JwWVNBb2JXRjRMWGRwWkhSb09pQTNOamN1T1Rod2VDa2dlMXh1SUNBdWJXVnVkUzEwYjNBZ2UxeHVJQ0FnSUc5MlpYSm1iRzkzT2lCb2FXUmtaVzQ3WEc0Z0lDQWdjRzl6YVhScGIyNDZJR0ZpYzI5c2RYUmxPMXh1SUNBZ0lIUnZjRG9nT0Rad2VEdGNiaUFnSUNCeWFXZG9kRG9nTFRFd2NIZzdYRzRnSUNBZ2QybGtkR2c2SURNek1IQjRPMXh1SUNBZ0lHMWhlQzFvWldsbmFIUTZJREE3WEc0Z0lDQWdiV0Z5WjJsdUxYUnZjRG9nTUR0Y2JpQWdmVnh1ZlZ4dVFHMWxaR2xoSUNodFlYZ3RkMmxrZEdnNklEYzJOeTQ1T0hCNEtTQmhibVFnS0cxaGVDMTNhV1IwYURvZ01URXlNSEI0S1NCN1hHNGdJQzV0Wlc1MUxYUnZjQ0I3WEc0Z0lDQWdkRzl3T2lCallXeGpLRFU0Y0hnZ0t5QXlPQ0FxSUNnb01UQXdkbmNnTFNBek1qQndlQ2tnTHlBNE1EQXBLVHRjYmlBZ2ZWeHVmVnh1TG0xbGJuVXRkRzl3TGw5aFkzUnBkbVVnZTF4dUlDQnRZWGd0YUdWcFoyaDBPaUExTURCd2VEdGNibjFjYmx4dUxtaGxjbThnZTF4dUlDQmlZV05yWjNKdmRXNWtPaUIxY213b0xpNHZhVzFuTDJobFlXUmxjaTFpWnk1cWNHY3BJQ013TURKRk5rTWdibTh0Y21Wd1pXRjBJR05sYm5SbGNpQnlhV2RvZER0Y2JpQWdZbUZqYTJkeWIzVnVaQzF6YVhwbE9pQmpiM1psY2p0Y2JpQWdiV2x1TFdobGFXZG9kRG9nTmpVd2NIZzdYRzU5WEc1QWJXVmthV0VnS0cxaGVDMTNhV1IwYURvZ01URXlNSEI0S1NCN1hHNGdJQzVvWlhKdklIdGNiaUFnSUNCdGFXNHRhR1ZwWjJoME9pQmpZV3hqS0RJMU1IQjRJQ3NnTkRBd0lDb2dLQ2d4TURCMmR5QXRJRE15TUhCNEtTQXZJRGd3TUNrcE8xeHVJQ0I5WEc1OVhHNHVhR1Z5YjE5ZmQzSmhjQ0I3WEc0Z0lHUnBjM0JzWVhrNklHWnNaWGc3WEc1OVhHNHVhR1Z5YjE5ZmFYUmxiU0I3WEc0Z0lHWnNaWGc2SURBZ01TQTJNQ1U3WEc0Z0lHRnNhV2R1TFdsMFpXMXpPaUJqWlc1MFpYSTdYRzRnSUhCaFpHUnBibWN0ZEc5d09pQXhNakJ3ZUR0Y2JpQWdjR0ZrWkdsdVp5MWliM1IwYjIwNklERXlNSEI0TzF4dWZWeHVRRzFsWkdsaElDaHRZWGd0ZDJsa2RHZzZJREV4TWpCd2VDa2dlMXh1SUNBdWFHVnliMTlmYVhSbGJTQjdYRzRnSUNBZ2NHRmtaR2x1WnkxMGIzQTZJR05oYkdNb05EQndlQ0FySURnd0lDb2dLQ2d4TURCMmR5QXRJRE15TUhCNEtTQXZJRGd3TUNrcE8xeHVJQ0I5WEc1OVhHNUFiV1ZrYVdFZ0tHMWhlQzEzYVdSMGFEb2dNVEV5TUhCNEtTQjdYRzRnSUM1b1pYSnZYMTlwZEdWdElIdGNiaUFnSUNCd1lXUmthVzVuTFdKdmRIUnZiVG9nWTJGc1l5ZzBNSEI0SUNzZ09EQWdLaUFvS0RFd01IWjNJQzBnTXpJd2NIZ3BJQzhnT0RBd0tTazdYRzRnSUgxY2JuMWNia0J0WldScFlTQW9iV0Y0TFhkcFpIUm9PaUF4TVRNeWNIZ3BJSHRjYmlBZ0xtaGxjbTlmWDJsMFpXMGdlMXh1SUNBZ0lHWnNaWGc2SURBZ01TQTRNQ1U3WEc0Z0lIMWNibjFjYmtCdFpXUnBZU0FvYldGNExYZHBaSFJvT2lBNU9URXVPVGh3ZUNrZ2UxeHVJQ0F1YUdWeWIxOWZhWFJsYlNCN1hHNGdJQ0FnWm14bGVEb2dNQ0F4SURFd01DVTdYRzRnSUgxY2JuMWNia0J0WldScFlTQW9iV0Y0TFhkcFpIUm9PaUEwTnprdU9UaHdlQ2tnZTF4dUlDQXVhR1Z5YjE5ZmFYUmxiU0I3WEc0Z0lDQWdkR1Y0ZEMxaGJHbG5iam9nWTJWdWRHVnlPMXh1SUNCOVhHNTlYRzR1YUdWeWIxOWZkR2wwYkdVZ2UxeHVJQ0JqYjJ4dmNqb2dJMlptWmp0Y2JpQWdabTl1ZEMxM1pXbG5hSFE2SURjd01EdGNiaUFnYldGeVoybHVMV0p2ZEhSdmJUb2dNelZ3ZUR0Y2JpQWdabTl1ZEMxemFYcGxPaUE1TW5CNE8xeHVmVnh1UUcxbFpHbGhJQ2h0WVhndGQybGtkR2c2SURFeE1qQndlQ2tnZTF4dUlDQXVhR1Z5YjE5ZmRHbDBiR1VnZTF4dUlDQWdJR1p2Ym5RdGMybDZaVG9nWTJGc1l5ZzBNSEI0SUNzZ05USWdLaUFvS0RFd01IWjNJQzBnTXpJd2NIZ3BJQzhnT0RBd0tTazdYRzRnSUgxY2JuMWNiaTVvWlhKdlgxOXpkV0owYVhSc1pTQjdYRzRnSUdOdmJHOXlPaUFqWm1abU8xeHVJQ0JtYjI1MExYZGxhV2RvZERvZ05UQXdPMXh1SUNCbWIyNTBMWE5wZW1VNklETTJjSGc3WEc0Z0lHeHBibVV0YUdWcFoyaDBPaUF4TGpObGJUdGNiaUFnWkdsemNHeGhlVG9nYVc1c2FXNWxMV0pzYjJOck8xeHVmVnh1UUcxbFpHbGhJQ2h0WVhndGQybGtkR2c2SURFeE1qQndlQ2tnZTF4dUlDQXVhR1Z5YjE5ZmMzVmlkR2wwYkdVZ2UxeHVJQ0FnSUdadmJuUXRjMmw2WlRvZ1kyRnNZeWd5TUhCNElDc2dNVFlnS2lBb0tERXdNSFozSUMwZ016SXdjSGdwSUM4Z09EQXdLU2s3WEc0Z0lIMWNibjFjYmtCdFpXUnBZU0FvYldGNExYZHBaSFJvT2lBM05qY3VPVGh3ZUNrZ2UxeHVJQ0F1YUdWeWJ5QjdYRzRnSUNBZ1ltRmphMmR5YjNWdVpDMXdiM05wZEdsdmJqb2dZMlZ1ZEdWeUlHTmxiblJsY2p0Y2JpQWdmVnh1ZlZ4dVhHNHVZMkZ6YUNCN1hHNGdJR0poWTJ0bmNtOTFibVE2SUNObVptWTdYRzRnSUhCaFpHUnBibWN0ZEc5d09pQXhNakJ3ZUR0Y2JpQWdjR0ZrWkdsdVp5MWliM1IwYjIwNklERXlNSEI0TzF4dWZWeHVRRzFsWkdsaElDaHRZWGd0ZDJsa2RHZzZJREV4TWpCd2VDa2dlMXh1SUNBdVkyRnphQ0I3WEc0Z0lDQWdjR0ZrWkdsdVp5MTBiM0E2SUdOaGJHTW9OREJ3ZUNBcklEZ3dJQ29nS0NneE1EQjJkeUF0SURNeU1IQjRLU0F2SURnd01Da3BPMXh1SUNCOVhHNTlYRzVBYldWa2FXRWdLRzFoZUMxM2FXUjBhRG9nTVRFeU1IQjRLU0I3WEc0Z0lDNWpZWE5vSUh0Y2JpQWdJQ0J3WVdSa2FXNW5MV0p2ZEhSdmJUb2dZMkZzWXlnME1IQjRJQ3NnT0RBZ0tpQW9LREV3TUhaM0lDMGdNekl3Y0hncElDOGdPREF3S1NrN1hHNGdJSDFjYm4xY2JpNWpZWE5vWDE5cGJtWnZJSHRjYmlBZ2JXRnlaMmx1TFhSdmNEb2dOakJ3ZUR0Y2JuMWNia0J0WldScFlTQW9iV0Y0TFhkcFpIUm9PaUF4TVRJd2NIZ3BJSHRjYmlBZ0xtTmhjMmhmWDJsdVptOGdlMXh1SUNBZ0lHMWhjbWRwYmkxMGIzQTZJR05oYkdNb016QndlQ0FySURNd0lDb2dLQ2d4TURCMmR5QXRJRE15TUhCNEtTQXZJRGd3TUNrcE8xeHVJQ0I5WEc1OVhHNHVZMkZ6YUY5ZmRHbDBiR1VnZTF4dUlDQm1iMjUwTFhkbGFXZG9kRG9nTlRBd08xeHVJQ0J0WVhKbmFXNHRZbTkwZEc5dE9pQXhOWEI0TzF4dUlDQm1iMjUwTFhOcGVtVTZJRFl5Y0hnN1hHNTlYRzVBYldWa2FXRWdLRzFoZUMxM2FXUjBhRG9nTVRFeU1IQjRLU0I3WEc0Z0lDNWpZWE5vWDE5MGFYUnNaU0I3WEc0Z0lDQWdabTl1ZEMxemFYcGxPaUJqWVd4aktETTFjSGdnS3lBeU55QXFJQ2dvTVRBd2RuY2dMU0F6TWpCd2VDa2dMeUE0TURBcEtUdGNiaUFnZlZ4dWZWeHVRRzFsWkdsaElDaHRZWGd0ZDJsa2RHZzZJRFEzT1M0NU9IQjRLU0I3WEc0Z0lDNWpZWE5vWDE5MGFYUnNaU0I3WEc0Z0lDQWdkR1Y0ZEMxaGJHbG5iam9nWTJWdWRHVnlPMXh1SUNCOVhHNTlYRzR1WTJGemFGOWZjM1ZpZEdsMGJHVWdlMXh1SUNCc2FXNWxMV2hsYVdkb2REb2dNUzQwWlcwN1hHNGdJR1JwYzNCc1lYazZJR2x1YkdsdVpTMWliRzlqYXp0Y2JpQWdabTl1ZEMxM1pXbG5hSFE2SURVd01EdGNiaUFnWm05dWRDMXphWHBsT2lBeU1IQjRPMXh1ZlZ4dVFHMWxaR2xoSUNodFlYZ3RkMmxrZEdnNklERXhNakJ3ZUNrZ2UxeHVJQ0F1WTJGemFGOWZjM1ZpZEdsMGJHVWdlMXh1SUNBZ0lHWnZiblF0YzJsNlpUb2dZMkZzWXlneE5IQjRJQ3NnTmlBcUlDZ29NVEF3ZG5jZ0xTQXpNakJ3ZUNrZ0x5QTRNREFwS1R0Y2JpQWdmVnh1ZlZ4dVFHMWxaR2xoSUNodFlYZ3RkMmxrZEdnNklEUTNPUzQ1T0hCNEtTQjdYRzRnSUM1allYTm9YMTl6ZFdKMGFYUnNaU0I3WEc0Z0lDQWdkR1Y0ZEMxaGJHbG5iam9nWTJWdWRHVnlPMXh1SUNCOVhHNTlYRzVjYmk1cGJtWnZMV05oYzJnZ2UxeHVJQ0JpWVdOclozSnZkVzVrT2lBalJqSkdNVVl4TzF4dUlDQndZV1JrYVc1bkxYUnZjRG9nTkRCd2VEdGNiaUFnY0dGa1pHbHVaeTFpYjNSMGIyMDZJRFF3Y0hnN1hHNGdJSEJoWkdScGJtY3RiR1ZtZERvZ056QndlRHRjYmlBZ2NHRmtaR2x1WnkxeWFXZG9kRG9nTnpCd2VEdGNibjFjYmtCdFpXUnBZU0FvYldGNExYZHBaSFJvT2lBeE1USXdjSGdwSUh0Y2JpQWdMbWx1Wm04dFkyRnphQ0I3WEc0Z0lDQWdjR0ZrWkdsdVp5MXNaV1owT2lCallXeGpLREl3Y0hnZ0t5QTFNQ0FxSUNnb01UQXdkbmNnTFNBek1qQndlQ2tnTHlBNE1EQXBLVHRjYmlBZ2ZWeHVmVnh1UUcxbFpHbGhJQ2h0WVhndGQybGtkR2c2SURFeE1qQndlQ2tnZTF4dUlDQXVhVzVtYnkxallYTm9JSHRjYmlBZ0lDQndZV1JrYVc1bkxYSnBaMmgwT2lCallXeGpLREl3Y0hnZ0t5QTFNQ0FxSUNnb01UQXdkbmNnTFNBek1qQndlQ2tnTHlBNE1EQXBLVHRjYmlBZ2ZWeHVmVnh1TG1sdVptOHRZMkZ6YUY5ZmRHbDBiR1VnZTF4dUlDQm1iMjUwTFhkbGFXZG9kRG9nTnpBd08xeHVJQ0IwWlhoMExXRnNhV2R1T2lCalpXNTBaWEk3WEc0Z0lHMWhjbWRwYmpvZ01DQmhkWFJ2SURZd2NIZzdYRzRnSUdScGMzQnNZWGs2SUdKc2IyTnJPMXh1SUNCc2FXNWxMV2hsYVdkb2REb2dNUzR5WlcwN1hHNGdJSFJsZUhRdGRISmhibk5tYjNKdE9pQjFjSEJsY21OaGMyVTdYRzRnSUdadmJuUXRjMmw2WlRvZ016QndlRHRjYm4xY2JrQnRaV1JwWVNBb2JXRjRMWGRwWkhSb09pQXhNVEl3Y0hncElIdGNiaUFnTG1sdVptOHRZMkZ6YUY5ZmRHbDBiR1VnZTF4dUlDQWdJR1p2Ym5RdGMybDZaVG9nWTJGc1l5Z3hPSEI0SUNzZ01USWdLaUFvS0RFd01IWjNJQzBnTXpJd2NIZ3BJQzhnT0RBd0tTazdYRzRnSUgxY2JuMWNiaTVwYm1adkxXTmhjMmhmWDNkeVlYQWdlMXh1SUNCa2FYTndiR0Y1T2lCbmNtbGtPMXh1SUNCbmNtbGtMV2RoY0RvZ016QndlRHRjYmlBZ1ozSnBaQzEwWlcxd2JHRjBaUzFqYjJ4MWJXNXpPaUF4TkRCd2VDQXhabkk3WEc1OVhHNUFiV1ZrYVdFZ0tHMWhlQzEzYVdSMGFEb2dNVEV6TW5CNEtTQjdYRzRnSUM1cGJtWnZMV05oYzJoZlgzZHlZWEFnZTF4dUlDQWdJR2R5YVdRdGRHVnRjR3hoZEdVdFkyOXNkVzF1Y3pvZ01XWnlPMXh1SUNCOVhHNTlYRzR1YVc1bWJ5MWpZWE5vWDE5cGJXY2dlMXh1SUNCM2FXUjBhRG9nTVRRd2NIZzdYRzRnSUdobGFXZG9kRG9nTVRRd2NIZzdYRzRnSUdKdmNtUmxjaTF5WVdScGRYTTZJRFV3SlR0Y2JpQWdiM1psY21ac2IzYzZJR2hwWkdSbGJqdGNibjFjYmk1cGJtWnZMV05oYzJoZlgybHRaeUJwYldjZ2UxeHVJQ0IzYVdSMGFEb2dNVEF3SlR0Y2JpQWdhR1ZwWjJoME9pQXhNREFsTzF4dWZWeHVRRzFsWkdsaElDaHRZWGd0ZDJsa2RHZzZJRGs1TVM0NU9IQjRLU0I3WEc0Z0lDNXBibVp2TFdOaGMyaGZYMmx0WnlCN1hHNGdJQ0FnYldGeVoybHVPaUJoZFhSdk8xeHVJQ0I5WEc1OVhHNHVhVzVtYnkxallYTm9YMTl5YjNjZ2UxeHVJQ0JrYVhOd2JHRjVPaUJtYkdWNE8xeHVJQ0JoYkdsbmJpMXBkR1Z0Y3pvZ1pteGxlQzF6ZEdGeWREdGNiaUFnYW5WemRHbG1lUzFqYjI1MFpXNTBPaUJ6Y0dGalpTMWlaWFIzWldWdU8xeHVmVnh1TG1sdVptOHRZMkZ6YUY5ZmNtOTNPbVpwY25OMExXTm9hV3hrSUh0Y2JpQWdjR0ZrWkdsdVp5MWliM1IwYjIwNklETXdjSGc3WEc0Z0lHSnZjbVJsY2kxaWIzUjBiMjA2SUROd2VDQnpiMnhwWkNBak1EQXlSVFpETzF4dUlDQnRZWEpuYVc0dFltOTBkRzl0T2lBek1IQjRPMXh1ZlZ4dVFHMWxaR2xoSUNodFlYZ3RkMmxrZEdnNklEazVNUzQ1T0hCNEtTQjdYRzRnSUM1cGJtWnZMV05oYzJoZlgzSnZkeUI3WEc0Z0lDQWdabXhsZUMxa2FYSmxZM1JwYjI0NklHTnZiSFZ0Ymp0Y2JpQWdJQ0JoYkdsbmJpMXBkR1Z0Y3pvZ1kyVnVkR1Z5TzF4dUlDQjlYRzU5WEc1QWJXVmthV0VnS0cxaGVDMTNhV1IwYURvZ09Ua3hMams0Y0hncElIdGNiaUFnTG1sdVptOHRZMkZ6YUY5ZlkyOXNJSHRjYmlBZ0lDQnRZWEpuYVc0dFltOTBkRzl0T2lBeU1IQjRPMXh1SUNBZ0lIZHBaSFJvT2lBeE1EQWxPMXh1SUNCOVhHNTlYRzR1YVc1bWJ5MWpZWE5vWDE5amIydzZiR0Z6ZEMxamFHbHNaQ0I3WEc0Z0lHMWhjbWRwYmkxaWIzUjBiMjA2SURBN1hHNTlYRzR1YVc1bWJ5MWpZWE5vWDE5dVlXMWxJSHRjYmlBZ1ptOXVkQzF6YVhwbE9pQXlObkI0TzF4dUlDQm1iMjUwTFhkbGFXZG9kRG9nTlRBd08xeHVJQ0J0WVhKbmFXNHRZbTkwZEc5dE9pQXhNSEI0TzF4dWZWeHVRRzFsWkdsaElDaHRZWGd0ZDJsa2RHZzZJREV4TWpCd2VDa2dlMXh1SUNBdWFXNW1ieTFqWVhOb1gxOXVZVzFsSUh0Y2JpQWdJQ0JtYjI1MExYTnBlbVU2SUdOaGJHTW9NakJ3ZUNBcklEWWdLaUFvS0RFd01IWjNJQzBnTXpJd2NIZ3BJQzhnT0RBd0tTazdYRzRnSUgxY2JuMWNia0J0WldScFlTQW9iV0Y0TFhkcFpIUm9PaUE1T1RFdU9UaHdlQ2tnZTF4dUlDQXVhVzVtYnkxallYTm9YMTl1WVcxbElIdGNiaUFnSUNCMFpYaDBMV0ZzYVdkdU9pQmpaVzUwWlhJN1hHNGdJSDFjYm4xY2JpNXBibVp2TFdOaGMyaGZYM1JsWVcwZ2UxeHVJQ0JtYjI1MExYTnBlbVU2SURJd2NIZzdYRzU5WEc1QWJXVmthV0VnS0cxaGVDMTNhV1IwYURvZ01URXlNSEI0S1NCN1hHNGdJQzVwYm1adkxXTmhjMmhmWDNSbFlXMGdlMXh1SUNBZ0lHWnZiblF0YzJsNlpUb2dZMkZzWXlneE5uQjRJQ3NnTkNBcUlDZ29NVEF3ZG5jZ0xTQXpNakJ3ZUNrZ0x5QTRNREFwS1R0Y2JpQWdmVnh1ZlZ4dVFHMWxaR2xoSUNodFlYZ3RkMmxrZEdnNklEazVNUzQ1T0hCNEtTQjdYRzRnSUM1cGJtWnZMV05oYzJoZlgzUmxZVzBnZTF4dUlDQWdJSFJsZUhRdFlXeHBaMjQ2SUdObGJuUmxjanRjYmlBZ2ZWeHVmVnh1TG1sdVptOHRZMkZ6YUY5ZlltOXVkWE1nYzNCaGJpQjdYRzRnSUdadmJuUXRjMmw2WlRvZ01qWndlRHRjYmlBZ1ptOXVkQzEzWldsbmFIUTZJRFV3TUR0Y2JpQWdaR2x6Y0d4aGVUb2dZbXh2WTJzN1hHNTlYRzR1YVc1bWJ5MWpZWE5vWDE5aWIyNTFjeUJ6Y0dGdUxsOWlhV2NnZTF4dUlDQm1iMjUwTFhkbGFXZG9kRG9nTnpBd08xeHVJQ0JtYjI1MExYTnBlbVU2SURFeE5YQjRPMXh1ZlZ4dVFHMWxaR2xoSUNodFlYZ3RkMmxrZEdnNklERXhNakJ3ZUNrZ2UxeHVJQ0F1YVc1bWJ5MWpZWE5vWDE5aWIyNTFjeUJ6Y0dGdUxsOWlhV2NnZTF4dUlDQWdJR1p2Ym5RdGMybDZaVG9nWTJGc1l5ZzRNSEI0SUNzZ016VWdLaUFvS0RFd01IWjNJQzBnTXpJd2NIZ3BJQzhnT0RBd0tTazdYRzRnSUgxY2JuMWNiaTVwYm1adkxXTmhjMmhmWDJKdmJuVnpJSE53WVc0Z2MzVndJSHRjYmlBZ1ptOXVkQzF6YVhwbE9pQXhObkI0TzF4dWZWeHVRRzFsWkdsaElDaHRZWGd0ZDJsa2RHZzZJRGs1TVM0NU9IQjRLU0I3WEc0Z0lDNXBibVp2TFdOaGMyaGZYMkp2Ym5WeklIdGNiaUFnSUNCMFpYaDBMV0ZzYVdkdU9pQmpaVzUwWlhJN1hHNGdJSDFjYm4xY2JpNXBibVp2TFdOaGMyaGZYM04wWVhRZ2UxeHVJQ0J0WVhKbmFXNHRZbTkwZEc5dE9pQXhOWEI0TzF4dWZWeHVMbWx1Wm04dFkyRnphRjlmYzNSaGRGOTBhWFJzWlNCN1hHNGdJR1p2Ym5RdGQyVnBaMmgwT2lBMU1EQTdYRzRnSUdadmJuUXRjMmw2WlRvZ01qQndlRHRjYm4xY2JrQnRaV1JwWVNBb2JXRjRMWGRwWkhSb09pQXhNVEl3Y0hncElIdGNiaUFnTG1sdVptOHRZMkZ6YUY5ZmMzUmhkRjkwYVhSc1pTQjdYRzRnSUNBZ1ptOXVkQzF6YVhwbE9pQmpZV3hqS0RFMmNIZ2dLeUEwSUNvZ0tDZ3hNREIyZHlBdElETXlNSEI0S1NBdklEZ3dNQ2twTzF4dUlDQjlYRzU5WEc0dWFXNW1ieTFqWVhOb1gxOXpkR0YwT214aGMzUXRZMmhwYkdRZ2UxeHVJQ0J0WVhKbmFXNHRZbTkwZEc5dE9pQXdPMXh1ZlZ4dVhHNHVjM1JoZEMxallYTm9JSHRjYmlBZ1pHbHpjR3hoZVRvZ1ozSnBaRHRjYmlBZ1ozSnBaQzFuWVhBNklERTFjSGc3WEc0Z0lHRnNhV2R1TFdsMFpXMXpPaUJqWlc1MFpYSTdYRzRnSUdkeWFXUXRkR1Z0Y0d4aGRHVXRZMjlzZFcxdWN6b2dNVFF3Y0hnZ2JXbHViV0Y0S0RNeE5YQjRMQ0F4Wm5JcE8xeHVmVnh1TG5OMFlYUXRZMkZ6YUY5ZmJtRnRaU0I3WEc0Z0lHWnZiblF0YzJsNlpUb2dNakJ3ZUR0Y2JuMWNia0J0WldScFlTQW9iV0Y0TFhkcFpIUm9PaUF4TVRJd2NIZ3BJSHRjYmlBZ0xuTjBZWFF0WTJGemFGOWZibUZ0WlNCN1hHNGdJQ0FnWm05dWRDMXphWHBsT2lCallXeGpLREUyY0hnZ0t5QTBJQ29nS0NneE1EQjJkeUF0SURNeU1IQjRLU0F2SURnd01Da3BPMXh1SUNCOVhHNTlYRzR1YzNSaGRDMWpZWE5vWDE5eWIzY2dlMXh1SUNCaWIzSmtaWEl0Y21Ga2FYVnpPaUEwY0hnN1hHNGdJR2hsYVdkb2REb2dNekp3ZUR0Y2JpQWdkMmxrZEdnNklERXdNQ1U3WEc0Z0lHSmhZMnRuY205MWJtUTZJQ05FUlVSRlJFVTdYRzRnSUdScGMzQnNZWGs2SUdac1pYZzdYRzRnSUdGc2FXZHVMV2wwWlcxek9pQmpaVzUwWlhJN1hHNGdJSEJ2YzJsMGFXOXVPaUJ5Wld4aGRHbDJaVHRjYmlBZ2NHRmtaR2x1WnpvZ01DQXhNSEI0TzF4dWZWeHVMbk4wWVhRdFkyRnphRjlmY205M0lITndZVzRnZTF4dUlDQm1iMjUwTFhkbGFXZG9kRG9nTnpBd08xeHVJQ0JqYjJ4dmNqb2dJMlptWmp0Y2JpQWdjRzl6YVhScGIyNDZJSEpsYkdGMGFYWmxPMXh1SUNCNkxXbHVaR1Y0T2lBeU8xeHVJQ0JtYjI1MExYTnBlbVU2SURJNGNIZzdYRzU5WEc1QWJXVmthV0VnS0cxaGVDMTNhV1IwYURvZ01URXlNSEI0S1NCN1hHNGdJQzV6ZEdGMExXTmhjMmhmWDNKdmR5QnpjR0Z1SUh0Y2JpQWdJQ0JtYjI1MExYTnBlbVU2SUdOaGJHTW9NVGh3ZUNBcklERXdJQ29nS0NneE1EQjJkeUF0SURNeU1IQjRLU0F2SURnd01Da3BPMXh1SUNCOVhHNTlYRzR1YzNSaGRDMWpZWE5vWDE5eWIzYzZPbUZtZEdWeUlIdGNiaUFnWTI5dWRHVnVkRG9nWENKY0lqdGNiaUFnWkdsemNHeGhlVG9nWW14dlkyczdYRzRnSUhCdmMybDBhVzl1T2lCaFluTnZiSFYwWlR0Y2JpQWdlaTFwYm1SbGVEb2dNVHRjYmlBZ2JHVm1kRG9nTUR0Y2JpQWdkRzl3T2lBd08xeHVJQ0JpYjNSMGIyMDZJREE3WEc0Z0lHSmhZMnRuY205MWJtUTZJQ013TURKRk5rTTdYRzRnSUdKdmNtUmxjaTF5WVdScGRYTTZJRFJ3ZUR0Y2JpQWdkMmxrZEdnNklERXlKVHRjYm4xY2JpNXpkR0YwTFdOaGMyZzZiblJvTFdOb2FXeGtLREVwSUM1emRHRjBMV05oYzJoZlgzSnZkem82WVdaMFpYSWdlMXh1SUNCM2FXUjBhRG9nTnpVbE8xeHVJQ0JpWVdOclozSnZkVzVrT2lBak56UkJRVFZETzF4dWZWeHVMbk4wWVhRdFkyRnphRHB1ZEdndFkyaHBiR1FvTWlrZ0xuTjBZWFF0WTJGemFGOWZjbTkzT2pwaFpuUmxjaUI3WEc0Z0lIZHBaSFJvT2lBMk1DVTdYRzU5WEc0dWMzUmhkQzFqWVhOb09tNTBhQzFqYUdsc1pDZ3pLU0F1YzNSaGRDMWpZWE5vWDE5eWIzYzZPbUZtZEdWeUlIdGNiaUFnZDJsa2RHZzZJRFV3SlR0Y2JuMWNiaTV6ZEdGMExXTmhjMmhmWDJGdWJtOTBZWFJwYjI0Z2UxeHVJQ0JuY21sa0xXTnZiSFZ0YmpvZ01pOHpPMXh1SUNCbWIyNTBMWE5wZW1VNklESXdjSGc3WEc0Z0lIQmhaR1JwYm1jNklERXdjSGdnTUR0Y2JuMWNia0J0WldScFlTQW9iV0Y0TFhkcFpIUm9PaUF4TVRJd2NIZ3BJSHRjYmlBZ0xuTjBZWFF0WTJGemFGOWZZVzV1YjNSaGRHbHZiaUI3WEc0Z0lDQWdabTl1ZEMxemFYcGxPaUJqWVd4aktERTJjSGdnS3lBMElDb2dLQ2d4TURCMmR5QXRJRE15TUhCNEtTQXZJRGd3TUNrcE8xeHVJQ0I5WEc1OVhHNUFiV1ZrYVdFZ0tHMWhlQzEzYVdSMGFEb2dPVGt4TGprNGNIZ3BJSHRjYmlBZ0xuTjBZWFF0WTJGemFGOWZZVzV1YjNSaGRHbHZiaUI3WEc0Z0lDQWdaM0pwWkMxamIyeDFiVzQ2SURFdk16dGNiaUFnSUNCMFpYaDBMV0ZzYVdkdU9pQmpaVzUwWlhJN1hHNGdJSDFjYm4xY2JrQnRaV1JwWVNBb2JXRjRMWGRwWkhSb09pQTNOamN1T1Rod2VDa2dlMXh1SUNBdWMzUmhkQzFqWVhOb0lIdGNiaUFnSUNCbmNtbGtMWFJsYlhCc1lYUmxMV052YkhWdGJuTTZJREUwTUhCNElERm1janRjYmlBZ2ZWeHVmVnh1UUcxbFpHbGhJQ2h0WVhndGQybGtkR2c2SURRM09TNDVPSEI0S1NCN1hHNGdJQzV6ZEdGMExXTmhjMmdnZTF4dUlDQWdJR2R5YVdRdGRHVnRjR3hoZEdVdGNtOTNjem9nWVhWMGJ5QmhkWFJ2TzF4dUlDQWdJR2R5YVdRdGRHVnRjR3hoZEdVdFkyOXNkVzF1Y3pvZ01XWnlPMXh1SUNBZ0lHZHlhV1F0WjJGd09pQTFjSGc3WEc0Z0lIMWNibjFjYmx4dUxtSmxiR0Y1SUh0Y2JpQWdZbUZqYTJkeWIzVnVaRG9nSXpBd01rVTJRenRjYm4xY2JpNWlaV3hoZVY5ZmQzSmhjQ0I3WEc0Z0lHUnBjM0JzWVhrNklHWnNaWGc3WEc1OVhHNUFiV1ZrYVdFZ0tHMWhlQzEzYVdSMGFEb2dOelkzTGprNGNIZ3BJSHRjYmlBZ0xtSmxiR0Y1WDE5M2NtRndJSHRjYmlBZ0lDQmthWE53YkdGNU9pQmliRzlqYXp0Y2JpQWdmVnh1ZlZ4dUxtSmxiR0Y1WDE5cGRHVnRJSHRjYmlBZ2FHVnBaMmgwT2lBeE1EQWxPMXh1ZlZ4dUxtSmxiR0Y1WDE5cGRHVnRPbVpwY25OMExXTm9hV3hrSUh0Y2JpQWdabXhsZURvZ01DQXhJRE00SlR0Y2JpQWdjR0ZrWkdsdVp5MTBiM0E2SURFeE1IQjRPMXh1ZlZ4dVFHMWxaR2xoSUNodFlYZ3RkMmxrZEdnNklERXhNakJ3ZUNrZ2UxeHVJQ0F1WW1Wc1lYbGZYMmwwWlcwNlptbHljM1F0WTJocGJHUWdlMXh1SUNBZ0lIQmhaR1JwYm1jdGRHOXdPaUJqWVd4aktEUXdjSGdnS3lBM01DQXFJQ2dvTVRBd2RuY2dMU0F6TWpCd2VDa2dMeUE0TURBcEtUdGNiaUFnZlZ4dWZWeHVRRzFsWkdsaElDaHRZWGd0ZDJsa2RHZzZJRGMyTnk0NU9IQjRLU0I3WEc0Z0lDNWlaV3hoZVY5ZmFYUmxiVHBtYVhKemRDMWphR2xzWkNCN1hHNGdJQ0FnWm14bGVEb2dNQ0F4SURFd01DVTdYRzRnSUNBZ2NHRmtaR2x1WnkxaWIzUjBiMjA2SURnd2NIZzdYRzRnSUgxY2JuMWNia0J0WldScFlTQW9iV0Y0TFhkcFpIUm9PaUEzTmpjdU9UaHdlQ2tnWVc1a0lDaHRZWGd0ZDJsa2RHZzZJREV4TWpCd2VDa2dlMXh1SUNBdVltVnNZWGxmWDJsMFpXMDZabWx5YzNRdFkyaHBiR1FnZTF4dUlDQWdJSEJoWkdScGJtY3RZbTkwZEc5dE9pQmpZV3hqS0RRd2NIZ2dLeUEwTUNBcUlDZ29NVEF3ZG5jZ0xTQXpNakJ3ZUNrZ0x5QTRNREFwS1R0Y2JpQWdmVnh1ZlZ4dUxtSmxiR0Y1WDE5cGRHVnRPbXhoYzNRdFkyaHBiR1FnZTF4dUlDQm1iR1Y0T2lBd0lERWdOaklsTzF4dWZWeHVRRzFsWkdsaElDaHRZWGd0ZDJsa2RHZzZJRGMyTnk0NU9IQjRLU0I3WEc0Z0lDNWlaV3hoZVY5ZmFYUmxiVHBzWVhOMExXTm9hV3hrSUh0Y2JpQWdJQ0JrYVhOd2JHRjVPaUJ1YjI1bE8xeHVJQ0I5WEc1OVhHNHVZbVZzWVhsZlgybHRaeUI3WEc0Z0lIQnZjMmwwYVc5dU9pQnlaV3hoZEdsMlpUdGNiaUFnY21sbmFIUTZJQzA1TUhCNE8xeHVJQ0IwWlhoMExXRnNhV2R1T2lCeWFXZG9kRHRjYm4xY2JpNWlaV3hoZVY5ZmRHbDBiR1VnZTF4dUlDQmpiMnh2Y2pvZ0kyWm1aanRjYmlBZ1ptOXVkQzEzWldsbmFIUTZJRFV3TUR0Y2JpQWdiR2x1WlMxb1pXbG5hSFE2SURFdU1tVnRPMXh1SUNCdFlYSm5hVzR0WW05MGRHOXRPaUExTUhCNE8xeHVJQ0JtYjI1MExYTnBlbVU2SURZeWNIZzdYRzU5WEc1QWJXVmthV0VnS0cxaGVDMTNhV1IwYURvZ01URXlNSEI0S1NCN1hHNGdJQzVpWld4aGVWOWZkR2wwYkdVZ2UxeHVJQ0FnSUcxaGNtZHBiaTFpYjNSMGIyMDZJR05oYkdNb01qQndlQ0FySURNd0lDb2dLQ2d4TURCMmR5QXRJRE15TUhCNEtTQXZJRGd3TUNrcE8xeHVJQ0I5WEc1OVhHNUFiV1ZrYVdFZ0tHMWhlQzEzYVdSMGFEb2dNVEV5TUhCNEtTQjdYRzRnSUM1aVpXeGhlVjlmZEdsMGJHVWdlMXh1SUNBZ0lHWnZiblF0YzJsNlpUb2dZMkZzWXlnek1IQjRJQ3NnTXpJZ0tpQW9LREV3TUhaM0lDMGdNekl3Y0hncElDOGdPREF3S1NrN1hHNGdJSDFjYm4xY2JrQnRaV1JwWVNBb2JXRjRMWGRwWkhSb09pQTBOemt1T1Rod2VDa2dlMXh1SUNBdVltVnNZWGxmWDNScGRHeGxJSHRjYmlBZ0lDQjBaWGgwTFdGc2FXZHVPaUJqWlc1MFpYSTdYRzRnSUgxY2JuMWNiaTVpWld4aGVTQndJSHRjYmlBZ1ptOXVkQzF6YVhwbE9pQXlNSEI0TzF4dUlDQmpiMnh2Y2pvZ0kyWm1aanRjYmlBZ2JXRnlaMmx1TFdKdmRIUnZiVG9nTWpCd2VEdGNiaUFnYkdsdVpTMW9aV2xuYUhRNklERXVOR1Z0TzF4dWZWeHVRRzFsWkdsaElDaHRZWGd0ZDJsa2RHZzZJREV4TWpCd2VDa2dlMXh1SUNBdVltVnNZWGtnY0NCN1hHNGdJQ0FnWm05dWRDMXphWHBsT2lCallXeGpLREUyY0hnZ0t5QTBJQ29nS0NneE1EQjJkeUF0SURNeU1IQjRLU0F2SURnd01Da3BPMXh1SUNCOVhHNTlYRzR1WW1Wc1lYa2djRHBzWVhOMExXTm9hV3hrSUh0Y2JpQWdiV0Z5WjJsdUxXSnZkSFJ2YlRvZ01EdGNibjFjYmtCdFpXUnBZU0FvYldGNExYZHBaSFJvT2lBME56a3VPVGh3ZUNrZ2UxeHVJQ0F1WW1Wc1lYa2djQ0I3WEc0Z0lDQWdkR1Y0ZEMxaGJHbG5iam9nWTJWdWRHVnlPMXh1SUNCOVhHNTlYRzVjYmk1cGJtTnZiV1VnZTF4dUlDQndZV1JrYVc1bkxYUnZjRG9nTVRFd2NIZzdYRzRnSUhCaFpHUnBibWN0WW05MGRHOXRPaUF4TVRCd2VEdGNiaUFnWW1GamEyZHliM1Z1WkRvZ0l6YzBRVUUxUXp0Y2JuMWNia0J0WldScFlTQW9iV0Y0TFhkcFpIUm9PaUF4TVRJd2NIZ3BJSHRjYmlBZ0xtbHVZMjl0WlNCN1hHNGdJQ0FnY0dGa1pHbHVaeTEwYjNBNklHTmhiR01vTkRCd2VDQXJJRGN3SUNvZ0tDZ3hNREIyZHlBdElETXlNSEI0S1NBdklEZ3dNQ2twTzF4dUlDQjlYRzU5WEc1QWJXVmthV0VnS0cxaGVDMTNhV1IwYURvZ01URXlNSEI0S1NCN1hHNGdJQzVwYm1OdmJXVWdlMXh1SUNBZ0lIQmhaR1JwYm1jdFltOTBkRzl0T2lCallXeGpLRFF3Y0hnZ0t5QTNNQ0FxSUNnb01UQXdkbmNnTFNBek1qQndlQ2tnTHlBNE1EQXBLVHRjYmlBZ2ZWeHVmVnh1TG1sdVkyOXRaVjlmZEdsMGJHVWdlMXh1SUNCbWIyNTBMWE5wZW1VNklEWXljSGc3WEc0Z0lHTnZiRzl5T2lBalptWm1PMXh1SUNCbWIyNTBMWGRsYVdkb2REb2dOVEF3TzF4dUlDQnRZWEpuYVc0dFltOTBkRzl0T2lBeE5YQjRPMXh1ZlZ4dVFHMWxaR2xoSUNodFlYZ3RkMmxrZEdnNklERXhNakJ3ZUNrZ2UxeHVJQ0F1YVc1amIyMWxYMTkwYVhSc1pTQjdYRzRnSUNBZ1ptOXVkQzF6YVhwbE9pQmpZV3hqS0RNd2NIZ2dLeUF6TWlBcUlDZ29NVEF3ZG5jZ0xTQXpNakJ3ZUNrZ0x5QTRNREFwS1R0Y2JpQWdmVnh1ZlZ4dVFHMWxaR2xoSUNodFlYZ3RkMmxrZEdnNklEUTNPUzQ1T0hCNEtTQjdYRzRnSUM1cGJtTnZiV1ZmWDNScGRHeGxJSHRjYmlBZ0lDQjBaWGgwTFdGc2FXZHVPaUJqWlc1MFpYSTdYRzRnSUgxY2JuMWNiaTVwYm1OdmJXVmZYM04xWW5ScGRHeGxJSHRjYmlBZ1ptOXVkQzF6YVhwbE9pQXlNSEI0TzF4dUlDQmpiMnh2Y2pvZ0kyWm1aanRjYmlBZ2JHbHVaUzFvWldsbmFIUTZJREV1TW1WdE8xeHVJQ0JtYjI1MExYZGxhV2RvZERvZ05UQXdPMXh1SUNCa2FYTndiR0Y1T2lCaWJHOWphenRjYmlBZ2JXRnlaMmx1TFdKdmRIUnZiVG9nT1RCd2VEdGNibjFjYmtCdFpXUnBZU0FvYldGNExYZHBaSFJvT2lBeE1USXdjSGdwSUh0Y2JpQWdMbWx1WTI5dFpWOWZjM1ZpZEdsMGJHVWdlMXh1SUNBZ0lHWnZiblF0YzJsNlpUb2dZMkZzWXlneE5uQjRJQ3NnTkNBcUlDZ29NVEF3ZG5jZ0xTQXpNakJ3ZUNrZ0x5QTRNREFwS1R0Y2JpQWdmVnh1ZlZ4dVFHMWxaR2xoSUNodFlYZ3RkMmxrZEdnNklERXhNakJ3ZUNrZ2UxeHVJQ0F1YVc1amIyMWxYMTl6ZFdKMGFYUnNaU0I3WEc0Z0lDQWdiV0Z5WjJsdUxXSnZkSFJ2YlRvZ1kyRnNZeWd5TUhCNElDc2dOekFnS2lBb0tERXdNSFozSUMwZ016SXdjSGdwSUM4Z09EQXdLU2s3WEc0Z0lIMWNibjFjYmtCdFpXUnBZU0FvYldGNExYZHBaSFJvT2lBME56a3VPVGh3ZUNrZ2UxeHVJQ0F1YVc1amIyMWxYMTl6ZFdKMGFYUnNaU0I3WEc0Z0lDQWdkR1Y0ZEMxaGJHbG5iam9nWTJWdWRHVnlPMXh1SUNCOVhHNTlYRzR1YVc1amIyMWxYMTkzY21Gd0lIdGNiaUFnWkdsemNHeGhlVG9nWjNKcFpEdGNiaUFnWjNKcFpDMTBaVzF3YkdGMFpTMWpiMngxYlc1ek9pQXhabklnYldsdWJXRjRLRFEzTUhCNExDQXhabklwSURGbWNqdGNiaUFnWjNKcFpDMW5ZWEE2SURNd2NIZzdYRzRnSUdwMWMzUnBabmt0WTI5dWRHVnVkRG9nYzNSeVpYUmphRHRjYm4xY2JrQnRaV1JwWVNBb2JXRjRMWGRwWkhSb09pQXhNVE15Y0hncElIdGNiaUFnTG1sdVkyOXRaVjlmZDNKaGNDQjdYRzRnSUNBZ1ozSnBaQzEwWlcxd2JHRjBaUzFqYjJ4MWJXNXpPaUF4Wm5JZ01XWnlJREZtY2p0Y2JpQWdmVnh1ZlZ4dVFHMWxaR2xoSUNodFlYZ3RkMmxrZEdnNklEYzJOeTQ1T0hCNEtTQjdYRzRnSUM1cGJtTnZiV1ZmWDNkeVlYQWdlMXh1SUNBZ0lHZHlhV1F0ZEdWdGNHeGhkR1V0WTI5c2RXMXVjem9nTVdaeU8xeHVJQ0FnSUdkeWFXUXRZWFYwYnkxbWJHOTNPaUJ5YjNjN1hHNGdJQ0FnYW5WemRHbG1lUzFqYjI1MFpXNTBPaUJqWlc1MFpYSTdYRzRnSUgxY2JuMWNiaTVwYm1OdmJXVmZYMmwwWlcwNmJHRnpkQzFqYUdsc1pDQjdYRzRnSUdwMWMzUnBabmt0YzJWc1pqb2daVzVrTzF4dWZWeHVRRzFsWkdsaElDaHRZWGd0ZDJsa2RHZzZJRGMyTnk0NU9IQjRLU0I3WEc0Z0lDNXBibU52YldWZlgybDBaVzA2YkdGemRDMWphR2xzWkNCN1hHNGdJQ0FnYW5WemRHbG1lUzF6Wld4bU9pQmpaVzUwWlhJN1hHNGdJSDFjYm4xY2JrQnRaV1JwWVNBb2JXRjRMWGRwWkhSb09pQTNOamN1T1Rod2VDa2dlMXh1SUNBdWFXNWpiMjFsWDE5cGRHVnRJSHRjYmlBZ0lDQnFkWE4wYVdaNUxYTmxiR1k2SUdObGJuUmxjanRjYmlBZ2ZWeHVmVnh1TG1sdVkyOXRaVjlmYVcxbklIdGNiaUFnY0c5emFYUnBiMjQ2SUhKbGJHRjBhWFpsTzF4dUlDQjBiM0E2SURJd2NIZzdYRzRnSUdacGJIUmxjam9nWkhKdmNDMXphR0ZrYjNjb01UWndlQ0F5TW5CNElEVXdjSGdnY21kaVlTZ3dMQ0F3TENBd0xDQXdMak00S1NrZ1pISnZjQzF6YUdGa2IzY29NVEJ3ZUNBeE1IQjRJREl5Y0hnZ2NtZGlZU2d3TENBd0xDQXdMQ0F3TGpFM0tTazdYRzU5WEc0dWFXNWpiMjFsWDE5cGJXY2dhVzFuSUh0Y2JpQWdiV0Y0TFhkcFpIUm9PaUF4TURBbE8xeHVmVnh1UUcxbFpHbGhJQ2h0WVhndGQybGtkR2c2SURjMk55NDVPSEI0S1NCN1hHNGdJQzVwYm1OdmJXVmZYMmx0WnlCN1hHNGdJQ0FnZDJsa2RHZzZJRFV3SlR0Y2JpQWdJQ0J0WVhKbmFXNDZJR0YxZEc4N1hHNGdJQ0FnZEc5d09pQXRNVEJ3ZUR0Y2JpQWdmVnh1ZlZ4dVhHNHVhVzVqYjIxbExXbHVabThnZTF4dUlDQndiM05wZEdsdmJqb2djbVZzWVhScGRtVTdYRzRnSUdScGMzQnNZWGs2SUdac1pYZzdYRzU5WEc0dWFXNWpiMjFsTFdsdVptOWZYMjUxYlNCN1hHNGdJR1p2Ym5RdGMybDZaVG9nTVRZNGNIZzdYRzRnSUdOdmJHOXlPaUFqWm1abU8xeHVJQ0JtYjI1MExYZGxhV2RvZERvZ056QXdPMXh1SUNCc2FXNWxMV2hsYVdkb2REb2dNV1Z0TzF4dWZWeHVRRzFsWkdsaElDaHRZWGd0ZDJsa2RHZzZJREV4TWpCd2VDa2dlMXh1SUNBdWFXNWpiMjFsTFdsdVptOWZYMjUxYlNCN1hHNGdJQ0FnWm05dWRDMXphWHBsT2lCallXeGpLRGd3Y0hnZ0t5QTRPQ0FxSUNnb01UQXdkbmNnTFNBek1qQndlQ2tnTHlBNE1EQXBLVHRjYmlBZ2ZWeHVmVnh1TG1sdVkyOXRaUzFwYm1adlgxOXVkVzBnYzNCaGJpQjdYRzRnSUdadmJuUXRjMmw2WlRvZ056ZHdlRHRjYm4xY2JrQnRaV1JwWVNBb2JXRjRMWGRwWkhSb09pQXhNVEl3Y0hncElIdGNiaUFnTG1sdVkyOXRaUzFwYm1adlgxOXVkVzBnYzNCaGJpQjdYRzRnSUNBZ1ptOXVkQzF6YVhwbE9pQmpZV3hqS0RNMWNIZ2dLeUEwTWlBcUlDZ29NVEF3ZG5jZ0xTQXpNakJ3ZUNrZ0x5QTRNREFwS1R0Y2JpQWdmVnh1ZlZ4dVFHMWxaR2xoSUNodFlYZ3RkMmxrZEdnNklEUTNPUzQ1T0hCNEtTQjdYRzRnSUM1cGJtTnZiV1V0YVc1bWIxOWZiblZ0SUh0Y2JpQWdJQ0IwWlhoMExXRnNhV2R1T2lCalpXNTBaWEk3WEc0Z0lIMWNibjFjYmk1cGJtTnZiV1V0YVc1bWIxOWZjSEpsZEdWNGRDQjdYRzRnSUhCdmMybDBhVzl1T2lCeVpXeGhkR2wyWlR0Y2JpQWdkRzl3T2lBek1IQjRPMXh1SUNCamIyeHZjam9nSTJabVpqdGNiaUFnYldGeVoybHVMWEpwWjJoME9pQTFjSGc3WEc0Z0lHWnZiblF0YzJsNlpUb2dNakJ3ZUR0Y2JuMWNia0J0WldScFlTQW9iV0Y0TFhkcFpIUm9PaUF4TVRJd2NIZ3BJSHRjYmlBZ0xtbHVZMjl0WlMxcGJtWnZYMTl3Y21WMFpYaDBJSHRjYmlBZ0lDQm1iMjUwTFhOcGVtVTZJR05oYkdNb01UaHdlQ0FySURJZ0tpQW9LREV3TUhaM0lDMGdNekl3Y0hncElDOGdPREF3S1NrN1hHNGdJSDFjYm4xY2JrQnRaV1JwWVNBb2JXRjRMWGRwWkhSb09pQTBOemt1T1Rod2VDa2dlMXh1SUNBdWFXNWpiMjFsTFdsdVptOWZYM0J5WlhSbGVIUWdlMXh1SUNBZ0lIUmxlSFF0WVd4cFoyNDZJR05sYm5SbGNqdGNiaUFnSUNCdFlYSm5hVzR0Y21sbmFIUTZJREE3WEc0Z0lDQWdiV0Z5WjJsdUxXSnZkSFJ2YlRvZ05YQjRPMXh1SUNBZ0lIUnZjRG9nTUR0Y2JpQWdmVnh1ZlZ4dUxtbHVZMjl0WlMxcGJtWnZYMTl3YjNOMGRHVjRkQ0I3WEc0Z0lIUnlZVzV6Wm05eWJUb2dkSEpoYm5Oc1lYUmxXU2d0TVRJd0pTazdYRzRnSUdOdmJHOXlPaUFqWm1abU8xeHVJQ0IzYVdSMGFEb2dNVEF3SlR0Y2JpQWdkMmhwZEdVdGMzQmhZMlU2SUc1dmQzSmhjRHRjYmlBZ1ptOXVkQzEzWldsbmFIUTZJRFF3TUR0Y2JpQWdiR2x1WlMxb1pXbG5hSFE2SURGbGJUdGNiaUFnWm05dWRDMXphWHBsT2lBeU5YQjRPMXh1ZlZ4dVFHMWxaR2xoSUNodFlYZ3RkMmxrZEdnNklERXhNakJ3ZUNrZ2UxeHVJQ0F1YVc1amIyMWxMV2x1Wm05ZlgzQnZjM1IwWlhoMElIdGNiaUFnSUNCbWIyNTBMWE5wZW1VNklHTmhiR01vTVRod2VDQXJJRGNnS2lBb0tERXdNSFozSUMwZ016SXdjSGdwSUM4Z09EQXdLU2s3WEc0Z0lIMWNibjFjYmtCdFpXUnBZU0FvYldGNExYZHBaSFJvT2lBME56a3VPVGh3ZUNrZ2UxeHVJQ0F1YVc1amIyMWxMV2x1Wm04Z2UxeHVJQ0FnSUdac1pYZ3RaR2x5WldOMGFXOXVPaUJqYjJ4MWJXNDdYRzRnSUgxY2JuMWNibHh1TG1Gd2NHeDVJSHRjYmlBZ1ltRmphMmR5YjNWdVpEb2dJMFl5UmpGR01UdGNibjFjYmk1aGNIQnNlU0JwWm5KaGJXVWdlMXh1SUNCbWJHOWhkRG9nYkdWbWREdGNiaUFnZDJsa2RHZzZJREV3TUNVN1hHNGdJR2hsYVdkb2REb2dZWFYwYnp0Y2JpQWdiV2x1TFdobGFXZG9kRG9nTmpFd2NIZzdYRzRnSUdKaFkydG5jbTkxYm1RNklDTkdNa1l4UmpFN1hHNTlYRzVjYmk1bWIyOTBaWElnZTF4dUlDQmlZV05yWjNKdmRXNWtPaUFqTURBeVJUWkRPMXh1SUNCd1lXUmthVzVuTFhSdmNEb2dOakJ3ZUR0Y2JpQWdjR0ZrWkdsdVp5MWliM1IwYjIwNklEWXdjSGc3WEc1OVhHNUFiV1ZrYVdFZ0tHMWhlQzEzYVdSMGFEb2dNVEV5TUhCNEtTQjdYRzRnSUM1bWIyOTBaWElnZTF4dUlDQWdJSEJoWkdScGJtY3RkRzl3T2lCallXeGpLRE13Y0hnZ0t5QXpNQ0FxSUNnb01UQXdkbmNnTFNBek1qQndlQ2tnTHlBNE1EQXBLVHRjYmlBZ2ZWeHVmVnh1UUcxbFpHbGhJQ2h0WVhndGQybGtkR2c2SURFeE1qQndlQ2tnZTF4dUlDQXVabTl2ZEdWeUlIdGNiaUFnSUNCd1lXUmthVzVuTFdKdmRIUnZiVG9nWTJGc1l5Z3pNSEI0SUNzZ016QWdLaUFvS0RFd01IWjNJQzBnTXpJd2NIZ3BJQzhnT0RBd0tTazdYRzRnSUgxY2JuMWNia0J0WldScFlTQW9iV0Y0TFhkcFpIUm9PaUEwTnprdU9UaHdlQ2tnZTF4dUlDQXVabTl2ZEdWeVgxOXNiMmR2SUh0Y2JpQWdJQ0J0WVhKbmFXNHRZbTkwZEc5dE9pQXlNSEI0TzF4dUlDQjlYRzU5WEc0dVptOXZkR1Z5WDE5cGRHVnRYMlpzWlhnZ2UxeHVJQ0JrYVhOd2JHRjVPaUJtYkdWNE8xeHVJQ0JoYkdsbmJpMXBkR1Z0Y3pvZ1kyVnVkR1Z5TzF4dUlDQnFkWE4wYVdaNUxXTnZiblJsYm5RNklITndZV05sTFdKbGRIZGxaVzQ3WEc0Z0lIZHBaSFJvT2lBeE1EQWxPMXh1ZlZ4dVFHMWxaR2xoSUNodFlYZ3RkMmxrZEdnNklEUTNPUzQ1T0hCNEtTQjdYRzRnSUM1bWIyOTBaWEpmWDJsMFpXMWZabXhsZUNCN1hHNGdJQ0FnWm14bGVDMWthWEpsWTNScGIyNDZJR052YkhWdGJqdGNiaUFnZlZ4dWZWeHVMbVp2YjNSbGNsOWZhWFJsYlRwc1lYTjBMV05vYVd4a0lIdGNiaUFnYldGeVoybHVMWFJ2Y0RvZ056VndlRHRjYm4xY2JrQnRaV1JwWVNBb2JXRjRMWGRwWkhSb09pQXhNVEl3Y0hncElIdGNiaUFnTG1admIzUmxjbDlmYVhSbGJUcHNZWE4wTFdOb2FXeGtJSHRjYmlBZ0lDQnRZWEpuYVc0dGRHOXdPaUJqWVd4aktETXdjSGdnS3lBME5TQXFJQ2dvTVRBd2RuY2dMU0F6TWpCd2VDa2dMeUE0TURBcEtUdGNiaUFnZlZ4dWZWeHVMbVp2YjNSbGNsOWZZMjl1ZEdGamRDQmhJSHRjYmlBZ1pHbHpjR3hoZVRvZ1lteHZZMnM3WEc0Z0lIUmxlSFF0WVd4cFoyNDZJSEpwWjJoME8xeHVmVnh1UUcxbFpHbGhJQ2h0WVhndGQybGtkR2c2SURRM09TNDVPSEI0S1NCN1hHNGdJQzVtYjI5MFpYSmZYMk52Ym5SaFkzUWdZU0I3WEc0Z0lDQWdkR1Y0ZEMxaGJHbG5iam9nWTJWdWRHVnlPMXh1SUNCOVhHNTlYRzR1Wm05dmRHVnlJR0VzSUM1bWIyOTBaWElnY0NCN1hHNGdJR052Ykc5eU9pQWpabVptTzF4dUlDQnNhVzVsTFdobGFXZG9kRG9nTVM0MFpXMDdYRzRnSUhSeVlXNXphWFJwYjI0NklHRnNiQ0F3TGpKek8xeHVJQ0JtYjI1MExYZGxhV2RvZERvZ05EQXdPMXh1SUNCbWIyNTBMWE5wZW1VNklESXdjSGc3WEc1OVhHNUFiV1ZrYVdFZ0tHMWhlQzEzYVdSMGFEb2dNVEV5TUhCNEtTQjdYRzRnSUM1bWIyOTBaWElnWVN3Z0xtWnZiM1JsY2lCd0lIdGNiaUFnSUNCbWIyNTBMWE5wZW1VNklHTmhiR01vTVRad2VDQXJJRFFnS2lBb0tERXdNSFozSUMwZ016SXdjSGdwSUM4Z09EQXdLU2s3WEc0Z0lIMWNibjFjYmk1bWIyOTBaWElnWVRwb2IzWmxjaUI3WEc0Z0lHTnZiRzl5T2lBak1UVTNPRVV3TzF4dWZWeHVMbVp2YjNSbGNpQndJSHRjYmlBZ2JXRnlaMmx1TFdKdmRIUnZiVG9nTVRCd2VEdGNibjFjYmk1bWIyOTBaWElnY0Rwc1lYTjBMV05vYVd4a0lIdGNiaUFnYldGeVoybHVMV0p2ZEhSdmJUb2dNRHRjYm4xY2JrQnRaV1JwWVNBb2JXRjRMWGRwWkhSb09pQTBOemt1T1Rod2VDa2dlMXh1SUNBdVptOXZkR1Z5SUhBZ2UxeHVJQ0FnSUhSbGVIUXRZV3hwWjI0NklHTmxiblJsY2p0Y2JpQWdmVnh1ZlZ4dUxtWnZiM1JsY2lCd0lHRWdlMXh1SUNCaWIzSmtaWEl0WW05MGRHOXRPaUF4Y0hnZ2MyOXNhV1FnY21kaVlTZ3lOVFVzSURJMU5Td2dNalUxTENBd0xqVXBPMXh1ZlZ4dVhHNHVjR0ZuWlNCN1hHNGdJR1pzWlhnNklERWdNU0JoZFhSdk8xeHVmVnh1UUhOMWNIQnZjblJ6SUNndGQyVmlhMmwwTFdGd2NHVmhjbUZ1WTJVNmJtOXVaU2w3WEc0dWFHVnliM3RpWVdOclozSnZkVzVrT25WeWJDZ3VMaTlwYldjdmFHVmhaR1Z5TFdKbkxuZGxZbkFwSUNNd01ESkZOa01nYm04dGNtVndaV0YwSUdObGJuUmxjaUJ5YVdkb2RIMWNibjFjYmx4dUlFQnRaV1JwWVNBb2JXRjRMWGRwWkhSb09pQXhNVE15Y0hncGUxeHVYRzVBYzNWd2NHOXlkSE1nS0MxM1pXSnJhWFF0WVhCd1pXRnlZVzVqWlRwdWIyNWxLWHRjYmx4dWZWeHVYRzU5WEc1Y2JpQkFiV1ZrYVdFZ0tHMWhlQzEzYVdSMGFEb2dPVGt4TGprNGNIZ3BlMXh1WEc1QWMzVndjRzl5ZEhNZ0tDMTNaV0pyYVhRdFlYQndaV0Z5WVc1alpUcHViMjVsS1h0Y2JseHVmVnh1WEc1OVhHNWNiaUJBYldWa2FXRWdLRzFoZUMxM2FXUjBhRG9nTnpZM0xqazRjSGdwZTF4dVhHNUFjM1Z3Y0c5eWRITWdLQzEzWldKcmFYUXRZWEJ3WldGeVlXNWpaVHB1YjI1bEtYdGNibHh1ZlZ4dVhHNTlYRzVjYmlCQWJXVmthV0VnS0cxaGVDMTNhV1IwYURvZ01URXlNSEI0S1h0Y2JseHVRSE4xY0hCdmNuUnpJQ2d0ZDJWaWEybDBMV0Z3Y0dWaGNtRnVZMlU2Ym05dVpTbDdYRzVjYm4xY2JseHVmVnh1WEc0Z1FHMWxaR2xoSUNodFlYZ3RkMmxrZEdnNklEUTNPUzQ1T0hCNEtYdGNibHh1UUhOMWNIQnZjblJ6SUNndGQyVmlhMmwwTFdGd2NHVmhjbUZ1WTJVNmJtOXVaU2w3WEc1Y2JuMWNibHh1ZlZ4dVhHNGdRRzFsWkdsaElDaHRZWGd0ZDJsa2RHZzZJRGMyTnk0NU9IQjRLU0JoYm1RZ0tHMWhlQzEzYVdSMGFEb2dNVEV5TUhCNEtYdGNibHh1UUhOMWNIQnZjblJ6SUNndGQyVmlhMmwwTFdGd2NHVmhjbUZ1WTJVNmJtOXVaU2w3WEc1Y2JuMWNibHh1ZlZ4dUlpd2lMeTg4MEp6UW1OQ2EwS0hRbU5DZDBLcytQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQxY2NseHVRR2x0Y0c5eWRDQmNJbkJ5WlhObGRITXZiV2w0YVc1elhDSTdYSEpjYmk4dlBDL1FuTkNZMEpyUW9kQ1kwSjNRcXo0OVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVnh5WEc1Y2NseHVMeTg4MEtqUW9OQ1kwS1RRb3RDclBqMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5WEhKY2JseHlYRzR2THp6UW45QyswTFRRdXRDNzBZN1JoOUN3MExYUXZDRFJpTkdBMExqUmhOR0MwWXMrUFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlYSEpjYmk4dkptUnBjM0JzWVhrOWMzZGhjQ1p6ZFdKelpYUTlZM2x5YVd4c2FXTXRaWGgwWEhKY2JrQnBiWEJ2Y25RZ1hDSndjbVZ6WlhSekwyWnZiblJ6WENJN1hISmNiaTh2UEMvUW45QyswTFRRdXRDNzBZN1JoOUN3MExYUXZDRFJpTkdBMExqUmhOR0MwWXMrUFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlYSEpjYmx4eVhHNHZMenpRbU5DNjBMN1F2ZEMrMFlmUXZkR0wwTFVnMFlqUmdOQzQwWVRSZ3RHTFBqMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBWeHlYRzR2TDBCcGJYQnZjblFnWENKcFkyOXVjMXdpTzF4eVhHNHZMend2MEpqUXV0QyswTDNRdnRHSDBMM1JpOUMxSU5HSTBZRFF1TkdFMFlMUml6NDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMWNjbHh1WEhKY2JpOHZQTkNvMFlEUXVOR0UwWUlnMEwvUXZpRFJnOUM4MEw3UXU5R0gwTERRdmRDNDBZNCtQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlYSEpjYmlSbWIyNTBSbUZ0YVd4NU9pQmNJbEp2WW05MGIxd2lPMXh5WEc0a1ptOXVkRk5wZW1VNklERTJPMXh5WEc0dkx6d3YwS2pSZ05DNDBZVFJnaURRdjlDK0lOR0QwTHpRdnRDNzBZZlFzTkM5MExqUmpqNDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMWNjbHh1WEhKY2JpOHZQQy9RcU5DZzBKalFwTkNpMEtzK1BUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVnh5WEc1Y2NseHVMeTg4MEovUWxkQ2cwSlhRbk5DVjBKM1FuZENyMEpVK1BUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQxY2NseHVKRzFwYmxkcFpIUm9PaUF6TWpCd2VEdGNjbHh1SkcxaGVGZHBaSFJvT2lBeE9USXdPMXh5WEc0a2JXRjRWMmxrZEdoRGIyNTBZV2x1WlhJNklERXhNakE3WEhKY2JpUnRaREU2SUNSdFlYaFhhV1IwYUVOdmJuUmhhVzVsY2lBcklERXlPMXh5WEc0a2JXUXlPaUE1T1RFdU9UZzdYSEpjYmlSdFpETTZJRGMyTnk0NU9EdGNjbHh1Skcxa05Eb2dORGM1TGprNE8xeHlYRzVjY2x4dUpHMWhhVzVEYjJ4dmNqb2dJekF3TjBGR1JqdGNjbHh1SkcxaGFXNUliM1psY2tOdmJHOXlPaUFqTVRVM09FVXdPMXh5WEc0a2JXRnBia0ZqZEdsMlpVTnZiRzl5T2lBak1EQTFORUZHTzF4eVhHNGtZbkpoYm1SRGIyeHZjam9nSXpBd01rVTJRenRjY2x4dUpHZHlaV1Z1UTI5c2IzSTZJQ00zTkVGQk5VTTdYSEpjYmlSbmNtVjVRMjlzYjNJNklDTkVSVVJGUkVVN1hISmNiaVJzYVdkb2RFZHlaWGxEYjJ4dmNqb2dJMFl5UmpGR01UdGNjbHh1WEhKY2JpOHZQQy9RbjlDVjBLRFFsZENjMEpYUW5kQ2QwS3ZRbFQ0OVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFZ4eVhHNWNjbHh1THk4ODBKN1FrZENkMEtQUW05Q1YwSjNRbU5DVkxDRFFudENSMEtuUW1OQ1ZJTkNmMEpEUW9OQ1EwSnpRbGRDaTBLRFFxejQ5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBWeHlYRzVBYVcxd2IzSjBJRndpY0hKbGMyVjBjeTl1ZFd4c1hDSTdYSEpjYm1KdlpIa2dlMXh5WEc1Y2RHTnZiRzl5T2lBa1luSmhibVJEYjJ4dmNqdGNjbHh1WEhRbUxsOXNiMk5ySUh0Y2NseHVYSFJjZEc5MlpYSm1iRzkzT2lCb2FXUmtaVzQ3WEhKY2JseDBmVnh5WEc1OVhISmNiaTh2UEMvUW50Q1IwSjNRbzlDYjBKWFFuZENZMEpVc0lOQ2UwSkhRcWRDWTBKVWcwSi9Ra05DZzBKRFFuTkNWMEtMUW9OQ3JQajA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVhISmNibHh5WEc0dkx6elFudENSMEo3UW05Q2UwS2ZRbXRDUVBqMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVhISmNiaTUzY21Gd2NHVnlJSHRjY2x4dVhIUjNhV1IwYURvZ01UQXdKVHRjY2x4dVhIUnRhVzR0YUdWcFoyaDBPaUF4TURBbE8xeHlYRzVjZEc5MlpYSm1iRzkzT2lCb2FXUmtaVzQ3WEhKY2JseDBaR2x6Y0d4aGVUb2dabXhsZUR0Y2NseHVYSFJtYkdWNExXUnBjbVZqZEdsdmJqb2dZMjlzZFcxdU8xeHlYRzVjZENZdVgyeHZZV1JsWkNCN1hISmNibHgwZlZ4eVhHNTlYSEpjYmk4dlBDL1FudENSMEo3UW05Q2UwS2ZRbXRDUVBqMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVhISmNibHh5WEc0dkx6elFudENoMEozUW50Q1MwSjNRa05DdklOQ2gwSlhRb3RDYTBKQStQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMWNjbHh1TGw5amIyNTBZV2x1WlhJZ2UxeHlYRzVjZEcxaGVDMTNhV1IwYURvZ0pHMWhlRmRwWkhSb1EyOXVkR0ZwYm1WeUlDc2djSGc3WEhKY2JseDBiV0Z5WjJsdU9pQXdJR0YxZEc4N1hISmNibHgwUUcxbFpHbGhJQ2h0WVhndGQybGtkR2c2SUNSdFpERXJjSGdwSUh0Y2NseHVYSFJjZEcxaGVDMTNhV1IwYURvZ09UY3djSGc3WEhKY2JseDBmVnh5WEc1Y2RFQnRaV1JwWVNBb2JXRjRMWGRwWkhSb09pQWtiV1F5SzNCNEtTQjdYSEpjYmx4MFhIUnRZWGd0ZDJsa2RHZzZJRGMxTUhCNE8xeHlYRzVjZEgxY2NseHVYSFJBYldWa2FXRWdLRzFoZUMxM2FXUjBhRG9nSkcxa015dHdlQ2tnZTF4eVhHNWNkRngwYldGNExYZHBaSFJvT2lCdWIyNWxPMXh5WEc1Y2RGeDBjR0ZrWkdsdVp6b2dNQ0F4TUhCNE8xeHlYRzVjZEgxY2NseHVmVnh5WEc0dkx6d3YwSjdRb2RDZDBKN1FrdENkMEpEUXJ5RFFvZENWMEtMUW10Q1FQajA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlYSEpjYmx4eVhHNHZMenpRbjlDZTBKVFFtdENiMEs3UXA5Q1YwSjNRbU5DVklOQ2swSkRRbWRDYjBKN1FraUJWU1NEUW9kQ2kwSmpRbTlDVjBKa3NJTkNrMEo3UW9OQ2NJTkNZSU5DVDBKN1FvdENlMEpMUXE5Q2xJTkNhMEp2UWtOQ2gwS0hRbnRDU1BqMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMWNjbHh1THk5QWFXMXdiM0owSUZ3aWNISmxjMlYwY3k5bWIzSnRjMXdpTzF4eVhHNHZMMEJwYlhCdmNuUWdYQ0p3Y21WelpYUnpMM1ZwWENJN1hISmNiaTh2UEMvUW45Q2UwSlRRbXRDYjBLN1FwOUNWMEozUW1OQ1ZJTkNrMEpEUW1kQ2IwSjdRa2lCVlNTRFFvZENpMEpqUW05Q1YwSmtzSU5DazBKN1FvTkNjSU5DWUlOQ1QwSjdRb3RDZTBKTFFxOUNsSU5DYTBKdlFrTkNoMEtIUW50Q1NQajA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDFjY2x4dVhISmNiaTh2UE5DZjBKN1FsTkNhMEp2UXJ0Q24wSlhRbmRDWTBKVWcwS1RRa05DWjBKdlFudENTSU5DaDBLTFFtTkNiMEpYUW1TRFFvZENpMEtEUWtOQ2QwSmpRcGlEUW1DRFFyZENiMEpYUW5OQ1YwSjNRb3RDZTBKSStQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVnh5WEc0dkwwQnBiWEJ2Y25RZ1hDSmtZWFJsY0dsamEyVnlYQ0k3WEhKY2JpOHZRR2x0Y0c5eWRDQmNJbXhwWjJoMFoyRnNiR1Z5ZVZ3aU8xeHlYRzR2TDBCcGJYQnZjblFnWENKd1lXZG5hVzVuWENJN1hISmNiaTh2UUdsdGNHOXlkQ0JjSW1Kc2IyTnJjeTl3YjNCMWNGd2lPMXh5WEc1QWFXMXdiM0owSUZ3aVlteHZZMnR6TDJobFlXUmxjbHdpTzF4eVhHNUFhVzF3YjNKMElGd2lZbXh2WTJ0ekwzUnZjRk5sWTNScGIyNWNJanRjY2x4dVFHbHRjRzl5ZENCY0ltSnNiMk5yY3k5allYTm9VMlZqZEdsdmJsd2lPMXh5WEc1QWFXMXdiM0owSUZ3aVlteHZZMnR6TDJKbGJHRjVVMlZqZEdsdmJsd2lPMXh5WEc1QWFXMXdiM0owSUZ3aVlteHZZMnR6TDJsdVkyOXRaVk5sWTNScGIyNWNJanRjY2x4dVFHbHRjRzl5ZENCY0ltSnNiMk5yY3k5aGNIQnNlVk5sWTNScGIyNWNJanRjY2x4dVFHbHRjRzl5ZENCY0ltSnNiMk5yY3k5bWIyOTBaWEpjSWp0Y2NseHVMeTlBYVcxd2IzSjBJRndpWW14dlkydHpMMmh2YldWY0lqdGNjbHh1THk4OEw5Q2YwSjdRbE5DYTBKdlFydENuMEpYUW5kQ1kwSlVnMEtUUWtOQ1owSnZRbnRDU0lOQ2gwS0xRbU5DYjBKWFFtU0RRb2RDaTBLRFFrTkNkMEpqUXBpRFFtQ0RRcmRDYjBKWFFuTkNWMEozUW90Q2UwSkkrUFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFZ4eVhHNWNjbHh1THk4ODBKN1FvZENkMEo3UWt0Q2QwSjdRbVNEUWtkQ2IwSjdRbWo0OVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVhISmNiaTV3WVdkbElIdGNjbHh1WEhSbWJHVjRPaUF4SURFZ1lYVjBienRjY2x4dWZWeHlYRzR2THowOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlYSEpjYmx4eVhHNHZMend2MEo3UW9kQ2QwSjdRa3RDZDBKN1FtU0RRa2RDYjBKN1FtajQ5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5WEhKY2JpSXNJaTh2UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFZ4eVhHNWNjbHh1THk4OVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVhISmNibHh5WEc0dktseHlYRzR2TDBKMWNtZGxjbHh5WEc0dWFXTnZiaTF0Wlc1MUlIdGNjbHh1WEhSa2FYTndiR0Y1T2lCdWIyNWxPMXh5WEc1Y2RFQnRaV1JwWVNBb2JXRjRMWGRwWkhSb09pQWtiV1F6SzNCNEtTQjdYSEpjYmx4MFhIUmthWE53YkdGNU9pQmliRzlqYXp0Y2NseHVYSFJjZEhCdmMybDBhVzl1T2lCaFluTnZiSFYwWlR0Y2NseHVYSFJjZEhSdmNEb2dNVGh3ZUR0Y2NseHVYSFJjZEhKcFoyaDBPaUF4TUhCNE8xeHlYRzVjZEZ4MGQybGtkR2c2SURNd2NIZzdYSEpjYmx4MFhIUm9aV2xuYUhRNklERTRjSGc3WEhKY2JseDBYSFJqZFhKemIzSTZJSEJ2YVc1MFpYSTdYSEpjYmx4MFhIUjZMV2x1WkdWNE9pQTFPMXh5WEc1Y2RGeDBjM0JoYmlCN1hISmNibHgwWEhSY2RIUnlZVzV6YVhScGIyNDZJR0ZzYkNBd0xqTnpJR1ZoYzJVZ01ITTdYSEpjYmx4MFhIUmNkSFJ2Y0RvZ1kyRnNZeWcxTUNVZ0xTQXhjSGdwTzF4eVhHNWNkRngwWEhSc1pXWjBPaUF3Y0hnN1hISmNibHgwWEhSY2RIQnZjMmwwYVc5dU9pQmhZbk52YkhWMFpUdGNjbHh1WEhSY2RGeDBkMmxrZEdnNklERXdNQ1U3WEhKY2JseDBYSFJjZEdobGFXZG9kRG9nTW5CNE8xeHlYRzVjZEZ4MFhIUmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQWpNREF3TzF4eVhHNWNkRngwWEhRbU9tWnBjbk4wTFdOb2FXeGtJSHRjY2x4dVhIUmNkRngwWEhSMGIzQTZJREJ3ZUR0Y2NseHVYSFJjZEZ4MGZWeHlYRzVjZEZ4MFhIUW1PbXhoYzNRdFkyaHBiR1FnZTF4eVhHNWNkRngwWEhSY2RIUnZjRG9nWVhWMGJ6dGNjbHh1WEhSY2RGeDBYSFJpYjNSMGIyMDZJREJ3ZUR0Y2NseHVYSFJjZEZ4MGZWeHlYRzVjZEZ4MGZWeHlYRzVjZEZ4MEppNWZZV04wYVhabElIdGNjbHh1WEhSY2RGeDBjM0JoYmlCN1hISmNibHgwWEhSY2RGeDBkSEpoYm5ObWIzSnRPaUJ6WTJGc1pTZ3dLVHRjY2x4dVhIUmNkRngwWEhRbU9tWnBjbk4wTFdOb2FXeGtJSHRjY2x4dVhIUmNkRngwWEhSY2RIUnlZVzV6Wm05eWJUb2djbTkwWVhSbEtDMDBOV1JsWnlrN1hISmNibHgwWEhSY2RGeDBYSFIwYjNBNklHTmhiR01vTlRBbElDMGdNWEI0S1R0Y2NseHVYSFJjZEZ4MFhIUjlYSEpjYmx4MFhIUmNkRngwSmpwc1lYTjBMV05vYVd4a0lIdGNjbHh1WEhSY2RGeDBYSFJjZEhSeVlXNXpabTl5YlRvZ2NtOTBZWFJsS0RRMVpHVm5LVHRjY2x4dVhIUmNkRngwWEhSY2RHSnZkSFJ2YlRvZ1kyRnNZeWcxTUNVZ0xTQXhjSGdwTzF4eVhHNWNkRngwWEhSY2RIMWNjbHh1WEhSY2RGeDBmVnh5WEc1Y2RGeDBmVnh5WEc1Y2RIMWNjbHh1ZlZ4eVhHNHFMMXh5WEc1Y2NseHVMbWhsWVdSbGNpQjdYSEpjYmx4MFltRmphMmR5YjNWdVpEb2dJMlptWmp0Y2NseHVYSFJBYVc1amJIVmtaU0JoWkdGd2RHbDJMWFpoYkhWbEtIQmhaR1JwYm1jdGRHOXdMQ0F6TUN3Z01UVXNJREVwTzF4eVhHNGdJQ0FnUUdsdVkyeDFaR1VnWVdSaGNIUnBkaTEyWVd4MVpTaHdZV1JrYVc1bkxXSnZkSFJ2YlN3Z016QXNJREUxTENBeEtUdGNjbHh1WEhRbVgxOTNjbUZ3SUh0Y2NseHVYSFJjZEdScGMzQnNZWGs2SUdac1pYZzdYSEpjYmx4MFhIUmhiR2xuYmkxcGRHVnRjem9nWTJWdWRHVnlPMXh5WEc1Y2RGeDBhblZ6ZEdsbWVTMWpiMjUwWlc1ME9pQnpjR0ZqWlMxaVpYUjNaV1Z1TzF4eVhHNWNkRngwUUcxbFpHbGhJQ2h0WVhndGQybGtkR2c2SUNSdFpERWdLeUJjSW5CNFhDSXBJSHRjY2x4dVhIUmNkRngwWm14bGVDMWthWEpsWTNScGIyNDZJR052YkhWdGJqdGNjbHh1WEhSY2RIMWNjbHh1WEhSY2RFQnRaV1JwWVNBb2JXRjRMWGRwWkhSb09pQWtiV1F6SUNzZ1hDSndlRndpS1NCN1hISmNibHgwWEhSY2RHWnNaWGd0WkdseVpXTjBhVzl1T2lCeWIzYzdYSEpjYmx4MFhIUjlYSEpjYmx4MGZWeHlYRzVjZENaZlgyMWxiblVnZTF4eVhHNWNkRngwY0c5emFYUnBiMjQ2SUhKbGJHRjBhWFpsTzF4eVhHNWNkSDFjY2x4dVhIUW1YMTlpZFhKblpYSWdlMXh5WEc1Y2RGeDBaR2x6Y0d4aGVUb2dibTl1WlR0Y2NseHVYSFJjZEVCdFpXUnBZU0FvYldGNExYZHBaSFJvT2lBa2JXUXpJQ3NnWENKd2VGd2lLU0I3WEhKY2JseDBYSFJjZEdScGMzQnNZWGs2SUdKc2IyTnJPMXh5WEc1Y2RGeDBYSFJ3YjNOcGRHbHZiam9nY21Wc1lYUnBkbVU3WEhKY2JseDBYSFJjZEhkcFpIUm9PaUEwTUhCNE8xeHlYRzVjZEZ4MFhIUm9aV2xuYUhRNklEUXdjSGc3WEhKY2JseDBYSFJjZEdOMWNuTnZjam9nY0c5cGJuUmxjanRjY2x4dVhIUmNkRngwZWkxcGJtUmxlRG9nTlR0Y2NseHVYSFJjZEZ4MGMzQmhiaUI3WEhKY2JseDBYSFJjZEZ4MGRISmhibk5wZEdsdmJqb2dZV3hzSURBdU0zTWdaV0Z6WlNBd2N6dGNjbHh1WEhSY2RGeDBYSFIwYjNBNklHTmhiR01vTlRBbElDMGdNWEI0S1R0Y2NseHVYSFJjZEZ4MFhIUnNaV1owT2lCallXeGpLRFV3SlNBdElERTFjSGdwTzF4eVhHNWNkRngwWEhSY2RIZHBaSFJvT2lBek1IQjRPMXh5WEc1Y2RGeDBYSFJjZEhCdmMybDBhVzl1T2lCaFluTnZiSFYwWlR0Y2NseHVYSFJjZEZ4MFhIUm9aV2xuYUhRNklESndlRHRjY2x4dVhIUmNkRngwWEhSaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lBa1luSmhibVJEYjJ4dmNqdGNjbHh1WEhSY2RGeDBYSFJpYjNKa1pYSXRjbUZrYVhWek9pQXljSGc3WEhKY2JseDBYSFJjZEZ4MEpqcG1hWEp6ZEMxamFHbHNaQ0I3WEhKY2JseDBYSFJjZEZ4MFhIUjBiM0E2SURFd2NIZzdYSEpjYmx4MFhIUmNkRngwZlZ4eVhHNWNkRngwWEhSY2RDWTZiR0Z6ZEMxamFHbHNaQ0I3WEhKY2JseDBYSFJjZEZ4MFhIUjBiM0E2SUdGMWRHODdYSEpjYmx4MFhIUmNkRngwWEhSaWIzUjBiMjA2SURFd2NIZzdYSEpjYmx4MFhIUmNkRngwZlZ4eVhHNWNkRngwWEhSOVhISmNibHgwWEhSY2RDWXVYMkZqZEdsMlpTQjdYSEpjYmx4MFhIUmNkRngwWW05eVpHVnlMV0p2ZEhSdmJTMXNaV1owTFhKaFpHbDFjem9nTUR0Y2NseHVYSFJjZEZ4MFhIUmliM0prWlhJdFltOTBkRzl0TFhKcFoyaDBMWEpoWkdsMWN6b2dNRHRjY2x4dVhIUmNkRngwWEhSemNHRnVJSHRjY2x4dVhIUmNkRngwWEhSY2RIUnlZVzV6Wm05eWJUb2djMk5oYkdVb01DazdYSEpjYmx4MFhIUmNkRngwWEhRbU9tWnBjbk4wTFdOb2FXeGtJSHRjY2x4dVhIUmNkRngwWEhSY2RGeDBkSEpoYm5ObWIzSnRPaUJ5YjNSaGRHVW9MVFExWkdWbktUdGNjbHh1WEhSY2RGeDBYSFJjZEZ4MGRHOXdPaUJqWVd4aktEVXdKU0F0SURGd2VDazdYSEpjYmx4MFhIUmNkRngwWEhSOVhISmNibHgwWEhSY2RGeDBYSFFtT214aGMzUXRZMmhwYkdRZ2UxeHlYRzVjZEZ4MFhIUmNkRngwWEhSMGNtRnVjMlp2Y20wNklISnZkR0YwWlNnME5XUmxaeWs3WEhKY2JseDBYSFJjZEZ4MFhIUmNkR0p2ZEhSdmJUb2dZMkZzWXlnMU1DVWdMU0F4Y0hncE8xeHlYRzVjZEZ4MFhIUmNkRngwZlZ4eVhHNWNkRngwWEhSY2RIMWNjbHh1WEhSY2RGeDBmVnh5WEc1Y2RGeDBmVnh5WEc1Y2RIMWNjbHh1WEhRbVgxOXNiMmR2SUh0Y2NseHVYSFJjZEdsdFp5QjdYSEpjYmx4MFhIUmNkRzFoZUMxM2FXUjBhRG9nTVRBd0pUdGNjbHh1WEhSY2RGeDBhR1ZwWjJoME9pQmhkWFJ2TzF4eVhHNWNkRngwZlZ4eVhHNWNkRngwUUcxbFpHbGhJQ2h0WVhndGQybGtkR2c2SUNSdFpEUWdLeUJjSW5CNFhDSXBJSHRjY2x4dVhIUmNkRngwYldGNExYZHBaSFJvT2lBM01IWjNPMXh5WEc1Y2RGeDBmVnh5WEc1Y2RIMWNjbHh1ZlZ4eVhHNWNjbHh1TG0xbGJuVXRkRzl3SUh0Y2NseHVYSFIwY21GdWMybDBhVzl1T2lCaGJHd2dMakp6TzF4eVhHNWNkQ1pmWDJ4cGMzUWdlMXh5WEc1Y2RGeDBaR2x6Y0d4aGVUb2dabXhsZUR0Y2NseHVYSFJjZEdGc2FXZHVMV2wwWlcxek9pQmpaVzUwWlhJN1hISmNibHgwWEhSQWJXVmthV0VnS0cxaGVDMTNhV1IwYURvZ0pHMWtNeUFySUZ3aWNIaGNJaWtnZTF4eVhHNWNkRngwWEhSbWJHVjRMV1JwY21WamRHbHZiam9nWTI5c2RXMXVPMXh5WEc1Y2RGeDBYSFJpWVdOclozSnZkVzVrT2lBa2JHbG5hSFJIY21WNVEyOXNiM0k3WEhKY2JseDBYSFJjZEhCaFpHUnBibWM2SURJd2NIZzdYSEpjYmx4MFhIUmNkR0ZzYVdkdUxXbDBaVzF6T2lCemRHRnlkRHRjY2x4dVhISmNibHgwWEhSOVhISmNibHgwZlZ4eVhHNWNkQ1pmWDJsMFpXMGdlMXh5WEc1Y2RGeDBiV0Z5WjJsdUxYSnBaMmgwT2lBek5YQjRPMXh5WEc1Y2RGeDBKanBzWVhOMExXTm9hV3hrSUh0Y2NseHVYSFJjZEZ4MGJXRnlaMmx1TFhKcFoyaDBPaUF3TzF4eVhHNWNkRngwWEhRdWJXVnVkUzEwYjNCZlgyeHBibXNnZTF4eVhHNWNkRngwWEhSY2RHUnBjM0JzWVhrNklHbHViR2x1WlMxbWJHVjRPMXh5WEc1Y2RGeDBYSFJjZEdGc2FXZHVMV2wwWlcxek9pQmpaVzUwWlhJN1hISmNibHgwWEhSY2RGeDBhblZ6ZEdsbWVTMWpiMjUwWlc1ME9pQmpaVzUwWlhJN1hISmNibHgwWEhSY2RGeDBZMjlzYjNJNklDTm1abVk3WEhKY2JseDBYSFJjZEZ4MFltRmphMmR5YjNWdVpEb2dKRzFoYVc1RGIyeHZjanRjY2x4dVhIUmNkRngwWEhSaWIzSmtaWEl0Y21Ga2FYVnpPaUE0Y0hnN1hISmNibHgwWEhSY2RGeDBabTl1ZEMxM1pXbG5hSFE2SURVd01EdGNjbHh1WEhSY2RGeDBYSFJvWldsbmFIUTZJRFE0Y0hnN1hISmNibHgwWEhSY2RGeDBkMmxrZEdnNklESXdNSEI0TzF4eVhHNWNkRngwWEhSY2RDWTZhRzkyWlhJZ2UxeHlYRzVjZEZ4MFhIUmNkRngwWTI5c2IzSTZJQ05tWm1ZN1hISmNibHgwWEhSY2RGeDBYSFJpWVdOclozSnZkVzVrT2lBa2JXRnBia2h2ZG1WeVEyOXNiM0k3WEhKY2JseDBYSFJjZEZ4MGZWeHlYRzVjZEZ4MFhIUjlYSEpjYmx4MFhIUmNkRUJ0WldScFlTQW9iV0Y0TFhkcFpIUm9PaUFrYldReklDc2dYQ0p3ZUZ3aUtTQjdYSEpjYmx4MFhIUmNkRngwYldGeVoybHVMWEpwWjJoME9pQXdPMXh5WEc1Y2RGeDBYSFJjZEcxaGNtZHBiaTFpYjNSMGIyMDZJREE3WEhKY2JseDBYSFJjZEgxY2NseHVYSFJjZEgxY2NseHVYSFJjZEVCdFpXUnBZU0FvYldGNExYZHBaSFJvT2lBa2JXUXpJQ3NnWENKd2VGd2lLU0I3WEhKY2JseDBYSFJjZEcxaGNtZHBiaTF5YVdkb2REb2dNRHRjY2x4dVhIUmNkRngwYldGeVoybHVMV0p2ZEhSdmJUb2dNakJ3ZUR0Y2NseHVYSFJjZEgxY2NseHVYSFI5WEhKY2JseDBKbDlmYkdsdWF5QjdYSEpjYmx4MFhIUmpiMnh2Y2pvZ0pHSnlZVzVrUTI5c2IzSTdYSEpjYmx4MFhIUjBjbUZ1YzJsMGFXOXVPaUJoYkd3Z0xqTnpPMXh5WEc1Y2RGeDBKanBvYjNabGNpQjdYSEpjYmx4MFhIUmNkR052Ykc5eU9pQWtiV0ZwYmtodmRtVnlRMjlzYjNJN1hISmNibHgwWEhSOVhISmNibHgwZlZ4eVhHNWNkRUJ0WldScFlTQW9iV0Y0TFhkcFpIUm9PaUFrYldReElDc2dYQ0p3ZUZ3aUtTQjdYSEpjYmx4MFhIUnRZWEpuYVc0dGRHOXdPaUF5TUhCNE8xeHlYRzVjZEgxY2NseHVYSFJBYldWa2FXRWdLRzFoZUMxM2FXUjBhRG9nSkcxa015QXJJRndpY0hoY0lpa2dlMXh5WEc1Y2RGeDBiM1psY21ac2IzYzZJR2hwWkdSbGJqdGNjbHh1WEhSY2RIQnZjMmwwYVc5dU9pQmhZbk52YkhWMFpUdGNjbHh1WEhSY2RFQnBibU5zZFdSbElHRmtZWEIwYVhZdGRtRnNkV1VvZEc5d0xDQTROaXdnTlRnc0lERXBPMXh5WEc1Y2RGeDBjbWxuYUhRNklDMHhNSEI0TzF4eVhHNWNkRngwZDJsa2RHZzZJRE16TUhCNE8xeHlYRzVjZEZ4MGJXRjRMV2hsYVdkb2REb2dNRHRjY2x4dVhIUmNkRzFoY21kcGJpMTBiM0E2SURBN1hISmNibHgwZlZ4eVhHNWNkQ1l1WDJGamRHbDJaU0I3WEhKY2JseDBYSFJ0WVhndGFHVnBaMmgwT2lBMU1EQndlRHRjY2x4dVhIUjlYSEpjYm4waUxDSXZMOUNmMEw3UXROQzYwTHZSanRHSDBMWFF2ZEM0MExVZzBZalJnTkM0MFlUUmd0Q3dYSEpjYmtCdGFYaHBiaUJtYjI1MEtDUm1iMjUwWDI1aGJXVXNJQ1JtYVd4bFgyNWhiV1VzSUNSM1pXbG5hSFFzSUNSemRIbHNaU2tnZTF4eVhHNWNkRUJtYjI1MExXWmhZMlVnZTF4eVhHNWNkRngwWm05dWRDMW1ZVzFwYkhrNklDUm1iMjUwWDI1aGJXVTdYSEpjYmx4MFhIUm1iMjUwTFdScGMzQnNZWGs2SUhOM1lYQTdYSEpjYmx4MFhIUnpjbU02SUhWeWJDaGNJaTR1TDJadmJuUnpMeU43SkdacGJHVmZibUZ0WlgwdWQyOW1abHdpS1NCbWIzSnRZWFFvWENKM2IyWm1YQ0lwTENCMWNtd29YQ0l1TGk5bWIyNTBjeThqZXlSbWFXeGxYMjVoYldWOUxuZHZabVl5WENJcElHWnZjbTFoZENoY0luZHZabVl5WENJcE8xeHlYRzVjZEZ4MFptOXVkQzEzWldsbmFIUTZJQ043SkhkbGFXZG9kSDA3WEhKY2JseDBYSFJtYjI1MExYTjBlV3hsT2lBamV5UnpkSGxzWlgwN1hISmNibHgwZlZ4eVhHNTlYSEpjYmx4eVhHNHZMOUNRMExUUXNOQy8wWUxRdU5DeTBMM1JpOUM1SU5HSTBZRFF1TkdFMFlKY2NseHVRRzFwZUdsdUlHRmtZWEIwYVhZdFptOXVkQ2drY0dOVGFYcGxMQ0FrYlc5aVUybDZaU3dnSkcxaGVGTnBlbVVwSUh0Y2NseHVYSFFrWVdSa1UybDZaVG9nSkhCalUybDZaU0F0SUNSdGIySlRhWHBsTzF4eVhHNWNkRUJwWmlBa2JXRjRVMmw2WlQwOU1TQjdYSEpjYmx4MFhIUXZMOUNpMEw3UXU5R00wTHJRdmlEUXRkR0IwTHZRdUNEUXZOQzEwTDNSak5HSTBMVWcwTHJRdnRDOTBZTFF0ZEM1MEwzUXRkR0EwTEJjY2x4dVhIUmNkR1p2Ym5RdGMybDZaVG9nSkhCalUybDZaU0FySUhCNE8xeHlYRzVjZEZ4MFFHMWxaR2xoSUNodFlYZ3RkMmxrZEdnNklDTjdKRzFoZUZkcFpIUm9RMjl1ZEdGcGJtVnlJQ3NnY0hoOUtTQjdYSEpjYmx4MFhIUmNkR1p2Ym5RdGMybDZaVG9nWTJGc1l5Z2pleVJ0YjJKVGFYcGxJQ3NnY0hoOUlDc2dJM3NrWVdSa1UybDZaWDBnS2lBb0tERXdNSFozSUMwZ016SXdjSGdwSUM4Z0kzc2tiV0Y0VjJsa2RHaERiMjUwWVdsdVpYSWdMU0F6TWpCOUtTazdYSEpjYmx4MFhIUjlYSEpjYmx4MGZTQkFaV3h6WlNCcFppQWtiV0Y0VTJsNlpUMDlNaUI3WEhKY2JseDBYSFF2TDlDaTBMN1F1OUdNMExyUXZpRFF0ZEdCMEx2UXVDRFFzZEMrMEx2UmpOR0kwTFVnMExyUXZ0QzkwWUxRdGRDNTBMM1F0ZEdBMExCY2NseHVYSFJjZEdadmJuUXRjMmw2WlRvZ0pIQmpVMmw2WlNBcklIQjRPMXh5WEc1Y2RGeDBRRzFsWkdsaElDaHRhVzR0ZDJsa2RHZzZJQ043SkcxaGVGZHBaSFJvUTI5dWRHRnBibVZ5SUNzZ2NIaDlLU0I3WEhKY2JseDBYSFJjZEdadmJuUXRjMmw2WlRvZ1kyRnNZeWdqZXlSdGIySlRhWHBsSUNzZ2NIaDlJQ3NnSTNza1lXUmtVMmw2WlgwZ0tpQW9LREV3TUhaM0lDMGdNekl3Y0hncElDOGdJM3NrYldGNFYybGtkR2dnTFNBek1qQjlLU2s3WEhKY2JseDBYSFI5WEhKY2JseDBmU0JBWld4elpTQjdYSEpjYmx4MFhIUXZMOUNTMFlIUXRkQ3owTFRRc0Z4eVhHNWNkRngwWm05dWRDMXphWHBsT2lCallXeGpLQ043SkcxdllsTnBlbVVnS3lCd2VIMGdLeUFqZXlSaFpHUlRhWHBsZlNBcUlDZ29NVEF3ZG5jZ0xTQXpNakJ3ZUNrZ0x5QWpleVJ0WVhoWGFXUjBhQ0F0SURNeU1IMHBLVHRjY2x4dVhIUjlYSEpjYm4xY2NseHVYSEpjYmk4djBKRFF0TkN3MEwvUmd0QzQwTExRdmRDKzBMVWcwWUhRc3RDKzBMblJnZEdDMExMUXZseHlYRzVBYldsNGFXNGdZV1JoY0hScGRpMTJZV3gxWlNna2NISnZjR1Z5ZEhrc0lDUnpkR0Z5ZEZOcGVtVXNJQ1J0YVc1VGFYcGxMQ0FrZEhsd1pTa2dlMXh5WEc1Y2RDUmhaR1JUYVhwbE9pQWtjM1JoY25SVGFYcGxJQzBnSkcxcGJsTnBlbVU3WEhKY2JseDBRR2xtSUNSMGVYQmxQVDB4SUh0Y2NseHVYSFJjZEM4djBLTFF2dEM3MFl6UXV0QytJTkMxMFlIUXU5QzRJTkM4MExYUXZkR00wWWpRdFNEUXV0QyswTDNSZ3RDMTBMblF2ZEMxMFlEUXNGeHlYRzVjZEZ4MEkzc2tjSEp2Y0dWeWRIbDlPaUFrYzNSaGNuUlRhWHBsSUNzZ2NIZzdYSEpjYmx4MFhIUkFiV1ZrYVdFZ0tHMWhlQzEzYVdSMGFEb2dJM3NrYldGNFYybGtkR2hEYjI1MFlXbHVaWElnS3lCd2VIMHBJSHRjY2x4dVhIUmNkRngwSTNza2NISnZjR1Z5ZEhsOU9pQmpZV3hqS0NON0pHMXBibE5wZW1VZ0t5QndlSDBnS3lBamV5UmhaR1JUYVhwbGZTQXFJQ2dvTVRBd2RuY2dMU0F6TWpCd2VDa2dMeUFqZXlSdFlYaFhhV1IwYUVOdmJuUmhhVzVsY2lBdElETXlNSDBwS1R0Y2NseHVYSFJjZEgxY2NseHVYSFI5SUVCbGJITmxJR2xtSUNSMGVYQmxQVDB5SUh0Y2NseHVYSFJjZEM4djBLTFF2dEM3MFl6UXV0QytJTkMxMFlIUXU5QzRJTkN4MEw3UXU5R00wWWpRdFNEUXV0QyswTDNSZ3RDMTBMblF2ZEMxMFlEUXNGeHlYRzVjZEZ4MEkzc2tjSEp2Y0dWeWRIbDlPaUFrYzNSaGNuUlRhWHBsSUNzZ2NIZzdYSEpjYmx4MFhIUkFiV1ZrYVdFZ0tHMXBiaTEzYVdSMGFEb2dJM3NrYldGNFYybGtkR2hEYjI1MFlXbHVaWElnS3lCd2VIMHBJSHRjY2x4dVhIUmNkRngwSTNza2NISnZjR1Z5ZEhsOU9pQmpZV3hqS0NON0pHMXBibE5wZW1VZ0t5QndlSDBnS3lBamV5UmhaR1JUYVhwbGZTQXFJQ2dvTVRBd2RuY2dMU0F6TWpCd2VDa2dMeUFqZXlSdFlYaFhhV1IwYUNBdElETXlNSDBwS1R0Y2NseHVYSFJjZEgxY2NseHVYSFI5SUVCbGJITmxJSHRjY2x4dVhIUmNkQzh2MEpMUmdkQzEwTFBRdE5Dd1hISmNibHgwWEhRamV5UndjbTl3WlhKMGVYMDZJR05oYkdNb0kzc2tiV2x1VTJsNlpTQXJJSEI0ZlNBcklDTjdKR0ZrWkZOcGVtVjlJQ29nS0NneE1EQjJkeUF0SURNeU1IQjRLU0F2SUNON0pHMWhlRmRwWkhSb0lDMGdNekl3ZlNrcE8xeHlYRzVjZEgxY2NseHVmVnh5WEc0aUxDSXVhR1Z5YnlCN1hISmNiaUFnSUNCaVlXTnJaM0p2ZFc1a09pQjFjbXdvTGk0dmFXMW5MMmhsWVdSbGNpMWlaeTVxY0djcElDUmljbUZ1WkVOdmJHOXlJRzV2TFhKbGNHVmhkQ0JqWlc1MFpYSWdjbWxuYUhRN1hISmNiaUFnSUNCaVlXTnJaM0p2ZFc1a0xYTnBlbVU2SUdOdmRtVnlPMXh5WEc0Z0lDQWdRR2x1WTJ4MVpHVWdZV1JoY0hScGRpMTJZV3gxWlNodGFXNHRhR1ZwWjJoMExDQTJOVEFzSURJMU1Dd2dNU2s3WEhKY2JpQWdJQ0FtWDE5M2NtRndJSHRjY2x4dUlDQWdJQ0FnSUNCa2FYTndiR0Y1T2lCbWJHVjRPMXh5WEc0Z0lDQWdmVnh5WEc0Z0lDQWdKbDlmYVhSbGJTQjdYSEpjYmlBZ0lDQWdJQ0FnWm14bGVEb2dNQ0F4SURZd0pUdGNjbHh1SUNBZ0lDQWdJQ0JoYkdsbmJpMXBkR1Z0Y3pvZ1kyVnVkR1Z5TzF4eVhHNGdJQ0FnSUNBZ0lFQnBibU5zZFdSbElHRmtZWEIwYVhZdGRtRnNkV1VvY0dGa1pHbHVaeTEwYjNBc0lERXlNQ3dnTkRBc0lERXBPMXh5WEc0Z0lDQWdJQ0FnSUVCcGJtTnNkV1JsSUdGa1lYQjBhWFl0ZG1Gc2RXVW9jR0ZrWkdsdVp5MWliM1IwYjIwc0lERXlNQ3dnTkRBc0lERXBPMXh5WEc0Z0lDQWdJQ0FnSUVCdFpXUnBZU0FvYldGNExYZHBaSFJvT2lBa2JXUXhLM0I0S1NCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdac1pYZzZJREFnTVNBNE1DVTdYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lFQnRaV1JwWVNBb2JXRjRMWGRwWkhSb09pQWtiV1F5SzNCNEtTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHWnNaWGc2SURBZ01TQXhNREFsTzF4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0JBYldWa2FXRWdLRzFoZUMxM2FXUjBhRG9nSkcxa05DdHdlQ2tnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IwWlhoMExXRnNhV2R1T2lCalpXNTBaWEk3WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ2ZWeHlYRzRnSUNBZ0psOWZkR2wwYkdVZ2UxeHlYRzRnSUNBZ0lDQWdJR052Ykc5eU9pQWpabVptTzF4eVhHNGdJQ0FnSUNBZ0lHWnZiblF0ZDJWcFoyaDBPaUEzTURBN0lDQWdJRnh5WEc0Z0lDQWdJQ0FnSUcxaGNtZHBiaTFpYjNSMGIyMDZJRE0xY0hnN1hISmNiaUFnSUNBZ0lDQWdRR2x1WTJ4MVpHVWdZV1JoY0hScGRpMW1iMjUwS0RreUxDQTBNQ3dnTVNrN1hISmNiaUFnSUNCOVhISmNiaUFnSUNBbVgxOXpkV0owYVhSc1pTQjdYSEpjYmlBZ0lDQWdJQ0FnWTI5c2IzSTZJQ05tWm1ZN1hISmNiaUFnSUNBZ0lDQWdabTl1ZEMxM1pXbG5hSFE2SURVd01EdGNjbHh1SUNBZ0lDQWdJQ0JBYVc1amJIVmtaU0JoWkdGd2RHbDJMV1p2Ym5Rb016WXNJREl3TENBeEtUdGNjbHh1SUNBZ0lDQWdJQ0JzYVc1bExXaGxhV2RvZERvZ01TNHpaVzA3WEhKY2JpQWdJQ0FnSUNBZ1pHbHpjR3hoZVRvZ2FXNXNhVzVsTFdKc2IyTnJPMXh5WEc0Z0lDQWdmVnh5WEc0Z0lDQWdRRzFsWkdsaElDaHRZWGd0ZDJsa2RHZzZJQ1J0WkRNcmNIZ3BJSHRjY2x4dUlDQWdJQ0FnSUNCaVlXTnJaM0p2ZFc1a0xYQnZjMmwwYVc5dU9pQmpaVzUwWlhJZ1kyVnVkR1Z5TzF4eVhHNGdJQ0FnZlZ4eVhHNTlJaXdpTG1OaGMyZ2dlMXh5WEc0Z0lDQWdZbUZqYTJkeWIzVnVaRG9nSTJabVpqdGNjbHh1SUNBZ0lFQnBibU5zZFdSbElHRmtZWEIwYVhZdGRtRnNkV1VvY0dGa1pHbHVaeTEwYjNBc0lERXlNQ3dnTkRBc0lERXBPMXh5WEc0Z0lDQWdRR2x1WTJ4MVpHVWdZV1JoY0hScGRpMTJZV3gxWlNod1lXUmthVzVuTFdKdmRIUnZiU3dnTVRJd0xDQTBNQ3dnTVNrN1hISmNiaUFnSUNBbVgxOXBibVp2SUh0Y2NseHVJQ0FnSUNBZ0lDQkFhVzVqYkhWa1pTQmhaR0Z3ZEdsMkxYWmhiSFZsS0cxaGNtZHBiaTEwYjNBc0lEWXdMQ0F6TUN3Z01TazdYSEpjYmlBZ0lDQjlYSEpjYmlBZ0lDQW1YMTkwYVhSc1pTQjdYSEpjYmlBZ0lDQWdJQ0FnWm05dWRDMTNaV2xuYUhRNklEVXdNRHRjY2x4dUlDQWdJQ0FnSUNCdFlYSm5hVzR0WW05MGRHOXRPaUF4TlhCNE8xeHlYRzRnSUNBZ0lDQWdJRUJwYm1Oc2RXUmxJR0ZrWVhCMGFYWXRabTl1ZENnMk1pd2dNelVzSURFcE8xeHlYRzRnSUNBZ0lDQWdJRUJ0WldScFlTQW9iV0Y0TFhkcFpIUm9PaUFrYldRMEszQjRLU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFJsZUhRdFlXeHBaMjQ2SUdObGJuUmxjanRjY2x4dUlDQWdJQ0FnSUNCOVhISmNiaUFnSUNCOVhISmNiaUFnSUNBbVgxOXpkV0owYVhSc1pTQjdYSEpjYmlBZ0lDQWdJQ0FnYkdsdVpTMW9aV2xuYUhRNklERXVOR1Z0TzF4eVhHNGdJQ0FnSUNBZ0lHUnBjM0JzWVhrNklHbHViR2x1WlMxaWJHOWphenRjY2x4dUlDQWdJQ0FnSUNCbWIyNTBMWGRsYVdkb2REb2dOVEF3TzF4eVhHNGdJQ0FnSUNBZ0lFQnBibU5zZFdSbElHRmtZWEIwYVhZdFptOXVkQ2d5TUN3Z01UUXNJREVwTzF4eVhHNGdJQ0FnSUNBZ0lFQnRaV1JwWVNBb2JXRjRMWGRwWkhSb09pQWtiV1EwSzNCNEtTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIUmxlSFF0WVd4cFoyNDZJR05sYm5SbGNqdGNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0I5WEhKY2JuMWNjbHh1WEhKY2JpNXBibVp2TFdOaGMyZ2dlMXh5WEc0Z0lDQWdZbUZqYTJkeWIzVnVaRG9nSkd4cFoyaDBSM0psZVVOdmJHOXlPMXh5WEc0Z0lDQWdjR0ZrWkdsdVp5MTBiM0E2SURRd2NIZzdYSEpjYmlBZ0lDQndZV1JrYVc1bkxXSnZkSFJ2YlRvZ05EQndlRHRjY2x4dUlDQWdJRUJwYm1Oc2RXUmxJR0ZrWVhCMGFYWXRkbUZzZFdVb2NHRmtaR2x1Wnkxc1pXWjBMQ0EzTUN3Z01qQXNJREVwTzF4eVhHNGdJQ0FnUUdsdVkyeDFaR1VnWVdSaGNIUnBkaTEyWVd4MVpTaHdZV1JrYVc1bkxYSnBaMmgwTENBM01Dd2dNakFzSURFcE8xeHlYRzRnSUNBZ0psOWZkR2wwYkdVZ2UxeHlYRzRnSUNBZ0lDQWdJR1p2Ym5RdGQyVnBaMmgwT2lBM01EQTdYSEpjYmlBZ0lDQWdJQ0FnZEdWNGRDMWhiR2xuYmpvZ1kyVnVkR1Z5TzF4eVhHNGdJQ0FnSUNBZ0lHMWhjbWRwYmpvZ01DQmhkWFJ2SURZd2NIZzdYSEpjYmlBZ0lDQWdJQ0FnWkdsemNHeGhlVG9nWW14dlkyczdYSEpjYmlBZ0lDQWdJQ0FnYkdsdVpTMW9aV2xuYUhRNklERXVNbVZ0TzF4eVhHNGdJQ0FnSUNBZ0lIUmxlSFF0ZEhKaGJuTm1iM0p0T2lCMWNIQmxjbU5oYzJVN1hISmNiaUFnSUNBZ0lDQWdRR2x1WTJ4MVpHVWdZV1JoY0hScGRpMW1iMjUwS0RNd0xDQXhPQ3dnTVNrN1hISmNiaUFnSUNCOVhISmNiaUFnSUNBbVgxOTNjbUZ3SUh0Y2NseHVJQ0FnSUNBZ0lDQmthWE53YkdGNU9pQm5jbWxrTzF4eVhHNGdJQ0FnSUNBZ0lHZHlhV1F0WjJGd09pQXpNSEI0TzF4eVhHNGdJQ0FnSUNBZ0lHZHlhV1F0ZEdWdGNHeGhkR1V0WTI5c2RXMXVjem9nTVRRd2NIZ2dNV1p5TzF4eVhHNGdJQ0FnSUNBZ0lFQnRaV1JwWVNBb2JXRjRMWGRwWkhSb09pQWtiV1F4SzNCNEtTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHZHlhV1F0ZEdWdGNHeGhkR1V0WTI5c2RXMXVjem9nTVdaeU8xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJSDFjY2x4dUlDQWdJQ1pmWDJsdFp5QjdYSEpjYmlBZ0lDQWdJQ0FnZDJsa2RHZzZJREUwTUhCNE8xeHlYRzRnSUNBZ0lDQWdJR2hsYVdkb2REb2dNVFF3Y0hnN1hISmNiaUFnSUNBZ0lDQWdZbTl5WkdWeUxYSmhaR2wxY3pvZ05UQWxPMXh5WEc0Z0lDQWdJQ0FnSUc5MlpYSm1iRzkzT2lCb2FXUmtaVzQ3WEhKY2JpQWdJQ0FnSUNBZ2FXMW5JSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkMmxrZEdnNklERXdNQ1U3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR2hsYVdkb2REb2dNVEF3SlR0Y2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnUUcxbFpHbGhJQ2h0WVhndGQybGtkR2c2SUNSdFpESXJjSGdwSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYldGeVoybHVPaUJoZFhSdk8xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJSDFjY2x4dUlDQWdJQ1pmWDNKdmR5QjdYSEpjYmlBZ0lDQWdJQ0FnWkdsemNHeGhlVG9nWm14bGVEdGNjbHh1SUNBZ0lDQWdJQ0JoYkdsbmJpMXBkR1Z0Y3pvZ1pteGxlQzF6ZEdGeWREdGNjbHh1SUNBZ0lDQWdJQ0JxZFhOMGFXWjVMV052Ym5SbGJuUTZJSE53WVdObExXSmxkSGRsWlc0N1hISmNiaUFnSUNBZ0lDQWdKanBtYVhKemRDMWphR2xzWkNCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhCaFpHUnBibWN0WW05MGRHOXRPaUF6TUhCNE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCaWIzSmtaWEl0WW05MGRHOXRPaUF6Y0hnZ2MyOXNhV1FnSkdKeVlXNWtRMjlzYjNJN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUcxaGNtZHBiaTFpYjNSMGIyMDZJRE13Y0hnN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUZ4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0JBYldWa2FXRWdLRzFoZUMxM2FXUjBhRG9nSkcxa01pdHdlQ2tnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JtYkdWNExXUnBjbVZqZEdsdmJqb2dZMjlzZFcxdU8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCaGJHbG5iaTFwZEdWdGN6b2dZMlZ1ZEdWeU8xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJSDFjY2x4dUlDQWdJQ1pmWDJOdmJDQjdYSEpjYmlBZ0lDQWdJQ0FnUUcxbFpHbGhJQ2h0WVhndGQybGtkR2c2SUNSdFpESXJjSGdwSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYldGeVoybHVMV0p2ZEhSdmJUb2dNakJ3ZUR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZDJsa2RHZzZJREV3TUNVN1hISmNiaUFnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUNZNmJHRnpkQzFqYUdsc1pDQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHMWhjbWRwYmkxaWIzUjBiMjA2SURBN1hISmNiaUFnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdmVnh5WEc0Z0lDQWdKbDlmYm1GdFpTQjdYSEpjYmlBZ0lDQWdJQ0FnUUdsdVkyeDFaR1VnWVdSaGNIUnBkaTFtYjI1MEtESTJMQ0F5TUN3Z01TazdYSEpjYmlBZ0lDQWdJQ0FnWm05dWRDMTNaV2xuYUhRNklEVXdNRHRjY2x4dUlDQWdJQ0FnSUNCdFlYSm5hVzR0WW05MGRHOXRPaUF4TUhCNE8xeHlYRzRnSUNBZ0lDQWdJRUJ0WldScFlTQW9iV0Y0TFhkcFpIUm9PaUFrYldReUszQjRLU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFJsZUhRdFlXeHBaMjQ2SUdObGJuUmxjanRjY2x4dUlDQWdJQ0FnSUNCOVhISmNiaUFnSUNCOVhISmNiaUFnSUNBbVgxOTBaV0Z0SUh0Y2NseHVJQ0FnSUNBZ0lDQkFhVzVqYkhWa1pTQmhaR0Z3ZEdsMkxXWnZiblFvTWpBc0lERTJMQ0F4S1R0Y2NseHVJQ0FnSUNBZ0lDQkFiV1ZrYVdFZ0tHMWhlQzEzYVdSMGFEb2dKRzFrTWl0d2VDa2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBaWGgwTFdGc2FXZHVPaUJqWlc1MFpYSTdYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnZlZ4eVhHNGdJQ0FnSmw5ZlltOXVkWE1nZTF4eVhHNGdJQ0FnSUNBZ0lITndZVzRnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JtYjI1MExYTnBlbVU2SURJMmNIZzdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHWnZiblF0ZDJWcFoyaDBPaUExTURBN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdScGMzQnNZWGs2SUdKc2IyTnJPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQW1MbDlpYVdjZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabTl1ZEMxM1pXbG5hSFE2SURjd01EdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRUJwYm1Oc2RXUmxJR0ZrWVhCMGFYWXRabTl1ZENneE1UVXNJRGd3TENBeEtUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCemRYQWdlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm05dWRDMXphWHBsT2lBeE5uQjRPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lFQnRaV1JwWVNBb2JXRjRMWGRwWkhSb09pQWtiV1F5SzNCNEtTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIUmxlSFF0WVd4cFoyNDZJR05sYm5SbGNqdGNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0I5WEhKY2JpQWdJQ0FtWDE5emRHRjBJSHRjY2x4dUlDQWdJQ0FnSUNCdFlYSm5hVzR0WW05MGRHOXRPaUF4TlhCNE8xeHlYRzRnSUNBZ0lDQWdJQ1pmZEdsMGJHVWdlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQm1iMjUwTFhkbGFXZG9kRG9nTlRBd08xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCQWFXNWpiSFZrWlNCaFpHRndkR2wyTFdadmJuUW9NakFzSURFMkxDQXhLVHRjY2x4dUlDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdKanBzWVhOMExXTm9hV3hrSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYldGeVoybHVMV0p2ZEhSdmJUb2dNRHRjY2x4dUlDQWdJQ0FnSUNCOVhISmNiaUFnSUNCOVhISmNibjFjY2x4dVhISmNiaTV6ZEdGMExXTmhjMmdnZTF4eVhHNGdJQ0FnWkdsemNHeGhlVG9nWjNKcFpEdGNjbHh1SUNBZ0lHZHlhV1F0WjJGd09pQXhOWEI0TzF4eVhHNGdJQ0FnWVd4cFoyNHRhWFJsYlhNNklHTmxiblJsY2p0Y2NseHVJQ0FnSUdkeWFXUXRkR1Z0Y0d4aGRHVXRZMjlzZFcxdWN6b2dNVFF3Y0hnZ2JXbHViV0Y0S0RNeE5YQjRMQ0F4Wm5JcE8xeHlYRzRnSUNBZ0psOWZibUZ0WlNCN1hISmNiaUFnSUNBZ0lDQWdRR2x1WTJ4MVpHVWdZV1JoY0hScGRpMW1iMjUwS0RJd0xDQXhOaXdnTVNrN1hISmNiaUFnSUNCOVhISmNiaUFnSUNBbVgxOXliM2NnZTF4eVhHNGdJQ0FnSUNBZ0lHSnZjbVJsY2kxeVlXUnBkWE02SURSd2VEdGNjbHh1SUNBZ0lDQWdJQ0JvWldsbmFIUTZJRE15Y0hnN1hISmNiaUFnSUNBZ0lDQWdkMmxrZEdnNklERXdNQ1U3WEhKY2JpQWdJQ0FnSUNBZ1ltRmphMmR5YjNWdVpEb2dKR2R5WlhsRGIyeHZjanRjY2x4dUlDQWdJQ0FnSUNCa2FYTndiR0Y1T2lCbWJHVjRPMXh5WEc0Z0lDQWdJQ0FnSUdGc2FXZHVMV2wwWlcxek9pQmpaVzUwWlhJN1hISmNiaUFnSUNBZ0lDQWdjRzl6YVhScGIyNDZJSEpsYkdGMGFYWmxPMXh5WEc0Z0lDQWdJQ0FnSUhCaFpHUnBibWM2SURBZ01UQndlRHRjY2x4dUlDQWdJQ0FnSUNCemNHRnVJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdabTl1ZEMxM1pXbG5hSFE2SURjd01EdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1kyOXNiM0k2SUNObVptWTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIQnZjMmwwYVc5dU9pQnlaV3hoZEdsMlpUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2VpMXBibVJsZURvZ01qdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1FHbHVZMngxWkdVZ1lXUmhjSFJwZGkxbWIyNTBLREk0TENBeE9Dd2dNU2s3WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJQ1k2T21GbWRHVnlJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdZMjl1ZEdWdWREb2dYQ0pjSWp0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnWkdsemNHeGhlVG9nWW14dlkyczdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIQnZjMmwwYVc5dU9pQmhZbk52YkhWMFpUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2VpMXBibVJsZURvZ01UdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2JHVm1kRG9nTUR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZEc5d09pQXdPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQmliM1IwYjIwNklEQTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHSmhZMnRuY205MWJtUTZJQ1JpY21GdVpFTnZiRzl5TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JpYjNKa1pYSXRjbUZrYVhWek9pQTBjSGc3SUNCY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZDJsa2RHZzZJREV5SlRzZ0lDQWdJQ0FnSUNBZ1hISmNiaUFnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdmVnh5WEc0Z0lDQWdKanB1ZEdndFkyaHBiR1FvTVNrZ2V5QWdJQ0FnSUNBZ1hISmNiaUFnSUNBZ0lDQWdMbk4wWVhRdFkyRnphRjlmY205M0lIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0pqbzZZV1owWlhJZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkMmxrZEdnNklEYzFKVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKaFkydG5jbTkxYm1RNklDUm5jbVZsYmtOdmJHOXlPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnZlZ4eVhHNGdJQ0FnSmpwdWRHZ3RZMmhwYkdRb01pa2dleUFnSUNBZ0lDQWdYSEpjYmlBZ0lDQWdJQ0FnTG5OMFlYUXRZMkZ6YUY5ZmNtOTNJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdKam82WVdaMFpYSWdlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZDJsa2RHZzZJRFl3SlR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lIMWNjbHh1SUNBZ0lDWTZiblJvTFdOb2FXeGtLRE1wSUhzZ0lDQWdJQ0FnSUZ4eVhHNGdJQ0FnSUNBZ0lDNXpkR0YwTFdOaGMyaGZYM0p2ZHlCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNZNk9tRm1kR1Z5SUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIZHBaSFJvT2lBMU1DVTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0I5WEhKY2JpQWdJQ0FtWDE5aGJtNXZkR0YwYVc5dUlIdGNjbHh1SUNBZ0lDQWdJQ0JuY21sa0xXTnZiSFZ0YmpvZ01pOHpPMXh5WEc0Z0lDQWdJQ0FnSUVCcGJtTnNkV1JsSUdGa1lYQjBhWFl0Wm05dWRDZ3lNQ3dnTVRZc0lERXBPMXh5WEc0Z0lDQWdJQ0FnSUhCaFpHUnBibWM2SURFd2NIZ2dNRHRjY2x4dUlDQWdJQ0FnSUNCQWJXVmthV0VnS0cxaGVDMTNhV1IwYURvZ0pHMWtNaXR3ZUNrZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCbmNtbGtMV052YkhWdGJqb2dNUzh6TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IwWlhoMExXRnNhV2R1T2lCalpXNTBaWEk3WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ2ZWeHlYRzRnSUNBZ1FHMWxaR2xoSUNodFlYZ3RkMmxrZEdnNklDUnRaRE1yY0hncElIdGNjbHh1SUNBZ0lDQWdJQ0JuY21sa0xYUmxiWEJzWVhSbExXTnZiSFZ0Ym5NNklERTBNSEI0SURGbWNqdGNjbHh1SUNBZ0lIMWNjbHh1SUNBZ0lFQnRaV1JwWVNBb2JXRjRMWGRwWkhSb09pQWtiV1EwSzNCNEtTQjdYSEpjYmlBZ0lDQWdJQ0FnWjNKcFpDMTBaVzF3YkdGMFpTMXliM2R6T2lCaGRYUnZJR0YxZEc4N1hISmNiaUFnSUNBZ0lDQWdaM0pwWkMxMFpXMXdiR0YwWlMxamIyeDFiVzV6T2lBeFpuSTdYSEpjYmlBZ0lDQWdJQ0FnWjNKcFpDMW5ZWEE2SURWd2VEdGNjbHh1SUNBZ0lIMWNjbHh1ZlNJc0lpNWlaV3hoZVNCN1hISmNiaUFnSUNCaVlXTnJaM0p2ZFc1a09pQWtZbkpoYm1SRGIyeHZjanRjY2x4dUlDQWdJQ1pmWDNkeVlYQWdlMXh5WEc0Z0lDQWdJQ0FnSUdScGMzQnNZWGs2SUdac1pYZzdYSEpjYmlBZ0lDQWdJQ0FnUUcxbFpHbGhJQ2h0WVhndGQybGtkR2c2SUNSdFpETXJjSGdwSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnWkdsemNHeGhlVG9nWW14dlkyczdYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnZlZ4eVhHNGdJQ0FnSmw5ZmFYUmxiU0I3WEhKY2JpQWdJQ0FnSUNBZ2FHVnBaMmgwT2lBeE1EQWxPMXh5WEc0Z0lDQWdJQ0FnSUNZNlptbHljM1F0WTJocGJHUWdlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQm1iR1Y0T2lBd0lERWdNemdsTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JBYVc1amJIVmtaU0JoWkdGd2RHbDJMWFpoYkhWbEtIQmhaR1JwYm1jdGRHOXdMQ0F4TVRBc0lEUXdMQ0F4S1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnUUcxbFpHbGhJQ2h0WVhndGQybGtkR2c2SUNSdFpETXJjSGdwSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnNaWGc2SURBZ01TQXhNREFsTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1FHbHVZMngxWkdVZ1lXUmhjSFJwZGkxMllXeDFaU2h3WVdSa2FXNW5MV0p2ZEhSdmJTd2dPREFzSURRd0xDQXhLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQW1PbXhoYzNRdFkyaHBiR1FnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JtYkdWNE9pQXdJREVnTmpJbE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCQWJXVmthV0VnS0cxaGVDMTNhV1IwYURvZ0pHMWtNeXR3ZUNrZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaR2x6Y0d4aGVUb2dibTl1WlR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lIMWNjbHh1SUNBZ0lDWmZYMmx0WnlCN1hISmNiaUFnSUNBZ0lDQWdjRzl6YVhScGIyNDZJSEpsYkdGMGFYWmxPMXh5WEc0Z0lDQWdJQ0FnSUhKcFoyaDBPaUF0T1RCd2VEdGNjbHh1SUNBZ0lDQWdJQ0IwWlhoMExXRnNhV2R1T2lCeWFXZG9kRHRjY2x4dUlDQWdJSDFjY2x4dUlDQWdJQ1pmWDNScGRHeGxJSHRjY2x4dUlDQWdJQ0FnSUNCamIyeHZjam9nSTJabVpqdGNjbHh1SUNBZ0lDQWdJQ0JtYjI1MExYZGxhV2RvZERvZ05UQXdPMXh5WEc0Z0lDQWdJQ0FnSUd4cGJtVXRhR1ZwWjJoME9pQXhMakpsYlR0Y2NseHVJQ0FnSUNBZ0lDQkFhVzVqYkhWa1pTQmhaR0Z3ZEdsMkxYWmhiSFZsS0cxaGNtZHBiaTFpYjNSMGIyMHNJRFV3TENBeU1Dd2dNU2s3WEhKY2JpQWdJQ0FnSUNBZ1FHbHVZMngxWkdVZ1lXUmhjSFJwZGkxbWIyNTBLRFl5TENBek1Dd2dNU2s3WEhKY2JpQWdJQ0FnSUNBZ1FHMWxaR2xoSUNodFlYZ3RkMmxrZEdnNklDUnRaRFFyY0hncElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RHVjRkQzFoYkdsbmJqb2dZMlZ1ZEdWeU8xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJSDFjY2x4dUlDQWdJSEFnZTF4eVhHNGdJQ0FnSUNBZ0lFQnBibU5zZFdSbElHRmtZWEIwYVhZdFptOXVkQ2d5TUN3Z01UWXNJREVwTzF4eVhHNGdJQ0FnSUNBZ0lHTnZiRzl5T2lBalptWm1PMXh5WEc0Z0lDQWdJQ0FnSUcxaGNtZHBiaTFpYjNSMGIyMDZJREl3Y0hnN1hISmNiaUFnSUNBZ0lDQWdiR2x1WlMxb1pXbG5hSFE2SURFdU5HVnRPMXh5WEc0Z0lDQWdJQ0FnSUNZNmJHRnpkQzFqYUdsc1pDQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHMWhjbWRwYmkxaWIzUjBiMjA2SURBN1hISmNiaUFnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUVCdFpXUnBZU0FvYldGNExYZHBaSFJvT2lBa2JXUTBLM0I0S1NCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhSbGVIUXRZV3hwWjI0NklHTmxiblJsY2p0Y2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQjlYSEpjYm4waUxDSXVhVzVqYjIxbElIdGNjbHh1SUNBZ0lFQnBibU5zZFdSbElHRmtZWEIwYVhZdGRtRnNkV1VvY0dGa1pHbHVaeTEwYjNBc0lERXhNQ3dnTkRBc0lERXBPMXh5WEc0Z0lDQWdRR2x1WTJ4MVpHVWdZV1JoY0hScGRpMTJZV3gxWlNod1lXUmthVzVuTFdKdmRIUnZiU3dnTVRFd0xDQTBNQ3dnTVNrN1hISmNibHh5WEc0Z0lDQWdZbUZqYTJkeWIzVnVaRG9nSkdkeVpXVnVRMjlzYjNJN1hISmNiaUFnSUNBZ0lDQWdKbDlmZEdsMGJHVWdlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQkFhVzVqYkhWa1pTQmhaR0Z3ZEdsMkxXWnZiblFvTmpJc0lETXdMQ0F4S1RzZ1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdOdmJHOXlPaUFqWm1abU8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCbWIyNTBMWGRsYVdkb2REb2dOVEF3TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0J0WVhKbmFXNHRZbTkwZEc5dE9pQXhOWEI0TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JBYldWa2FXRWdLRzFoZUMxM2FXUjBhRG9nSkcxa05DdHdlQ2tnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHVjRkQzFoYkdsbmJqb2dZMlZ1ZEdWeU8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUNaZlgzTjFZblJwZEd4bElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1FHbHVZMngxWkdVZ1lXUmhjSFJwZGkxbWIyNTBLREl3TENBeE5pd2dNU2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR052Ykc5eU9pQWpabVptTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JzYVc1bExXaGxhV2RvZERvZ01TNHlaVzA3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR1p2Ym5RdGQyVnBaMmgwT2lBMU1EQTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHUnBjM0JzWVhrNklHSnNiMk5yTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JBYVc1amJIVmtaU0JoWkdGd2RHbDJMWFpoYkhWbEtHMWhjbWRwYmkxaWIzUjBiMjBzSURrd0xDQXlNQ3dnTVNrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUVCdFpXUnBZU0FvYldGNExYZHBaSFJvT2lBa2JXUTBLM0I0S1NCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBaWGgwTFdGc2FXZHVPaUJqWlc1MFpYSTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0psOWZkM0poY0NCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdScGMzQnNZWGs2SUdkeWFXUTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHZHlhV1F0ZEdWdGNHeGhkR1V0WTI5c2RXMXVjem9nTVdaeUlHMXBibTFoZUNnME56QndlQ3dnTVdaeUtTQXhabkk3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR2R5YVdRdFoyRndPaUF6TUhCNE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCcWRYTjBhV1o1TFdOdmJuUmxiblE2SUhOMGNtVjBZMmc3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJRUJ0WldScFlTQW9iV0Y0TFhkcFpIUm9PaUFrYldReEszQjRLU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbmNtbGtMWFJsYlhCc1lYUmxMV052YkhWdGJuTTZJREZtY2lBeFpuSWdNV1p5TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJRUJ0WldScFlTQW9iV0Y0TFhkcFpIUm9PaUFrYldRekszQjRLU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbmNtbGtMWFJsYlhCc1lYUmxMV052YkhWdGJuTTZJREZtY2p0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHZHlhV1F0WVhWMGJ5MW1iRzkzT2lCeWIzYzdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JxZFhOMGFXWjVMV052Ym5SbGJuUTZJR05sYm5SbGNqdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNBbVgxOXBkR1Z0SUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSmpwc1lYTjBMV05vYVd4a0lIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3AxYzNScFpua3RjMlZzWmpvZ1pXNWtPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnUUcxbFpHbGhJQ2h0WVhndGQybGtkR2c2SUNSdFpETXJjSGdwSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JxZFhOMGFXWjVMWE5sYkdZNklHTmxiblJsY2p0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCQWJXVmthV0VnS0cxaGVDMTNhV1IwYURvZ0pHMWtNeXR3ZUNrZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhblZ6ZEdsbWVTMXpaV3htT2lCalpXNTBaWEk3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdKbDlmYVcxbklIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2NHOXphWFJwYjI0NklISmxiR0YwYVhabE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMGIzQTZJREl3Y0hnN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdacGJIUmxjam9nWkhKdmNDMXphR0ZrYjNjb01UWndlQ0F5TW5CNElEVXdjSGdnY21kaVlTZ3dMQ0F3TENBd0xDQXdMak00S1NrZ1pISnZjQzF6YUdGa2IzY29NVEJ3ZUNBeE1IQjRJREl5Y0hnZ2NtZGlZU2d3TENBd0xDQXdMQ0F3TGpFM0tTazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHbHRaeUI3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdFlYZ3RkMmxrZEdnNklERXdNQ1U3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdRRzFsWkdsaElDaHRZWGd0ZDJsa2RHZzZJQ1J0WkRNcmNIZ3BJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhkcFpIUm9PaUExTUNVN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnRZWEpuYVc0NklHRjFkRzg3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGIzQTZJQzB4TUhCNE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdmVnh5WEc1OVhISmNibHh5WEc0dWFXNWpiMjFsTFdsdVptOGdlMXh5WEc0Z0lDQWdjRzl6YVhScGIyNDZJSEpsYkdGMGFYWmxPMXh5WEc0Z0lDQWdaR2x6Y0d4aGVUb2dabXhsZUR0Y2NseHVJQ0FnSUNaZlgyNTFiU0I3WEhKY2JpQWdJQ0FnSUNBZ1FHbHVZMngxWkdVZ1lXUmhjSFJwZGkxbWIyNTBLREUyT0N3Z09EQXNJREVwT3lCY2NseHVJQ0FnSUNBZ0lDQmpiMnh2Y2pvZ0kyWm1aanRjY2x4dUlDQWdJQ0FnSUNCbWIyNTBMWGRsYVdkb2REb2dOekF3TzF4eVhHNGdJQ0FnSUNBZ0lHeHBibVV0YUdWcFoyaDBPaUF4WlcwN1hISmNiaUFnSUNBZ0lDQWdjM0JoYmlCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUVCcGJtTnNkV1JsSUdGa1lYQjBhWFl0Wm05dWRDZzNOeXdnTXpVc0lERXBPeUJjY2x4dUlDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdRRzFsWkdsaElDaHRZWGd0ZDJsa2RHZzZJQ1J0WkRRcmNIZ3BJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkR1Y0ZEMxaGJHbG5iam9nWTJWdWRHVnlPMXh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUgxY2NseHVJQ0FnSUNaZlgzQnlaWFJsZUhRZ2UxeHlYRzRnSUNBZ0lDQWdJSEJ2YzJsMGFXOXVPaUJ5Wld4aGRHbDJaVHRjY2x4dUlDQWdJQ0FnSUNCMGIzQTZJRE13Y0hnN1hISmNiaUFnSUNBZ0lDQWdZMjlzYjNJNklDTm1abVk3WEhKY2JpQWdJQ0FnSUNBZ2JXRnlaMmx1TFhKcFoyaDBPaUExY0hnN1hISmNiaUFnSUNBZ0lDQWdRR2x1WTJ4MVpHVWdZV1JoY0hScGRpMW1iMjUwS0RJd0xDQXhPQ3dnTVNrN1hISmNiaUFnSUNBZ0lDQWdRRzFsWkdsaElDaHRZWGd0ZDJsa2RHZzZJQ1J0WkRRcmNIZ3BJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkR1Y0ZEMxaGJHbG5iam9nWTJWdWRHVnlPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnRZWEpuYVc0dGNtbG5hSFE2SURBN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUcxaGNtZHBiaTFpYjNSMGIyMDZJRFZ3ZUR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZEc5d09pQXdPMXh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUgxY2NseHVJQ0FnSUNaZlgzQnZjM1IwWlhoMElIdGNjbHh1SUNBZ0lDQWdJQ0IwY21GdWMyWnZjbTA2SUhSeVlXNXpiR0YwWlZrb0xURXlNQ1VwTzF4eVhHNGdJQ0FnSUNBZ0lHTnZiRzl5T2lBalptWm1PMXh5WEc0Z0lDQWdJQ0FnSUhkcFpIUm9PaUF4TURBbE8xeHlYRzRnSUNBZ0lDQWdJSGRvYVhSbExYTndZV05sT2lCdWIzZHlZWEE3WEhKY2JpQWdJQ0FnSUNBZ1ptOXVkQzEzWldsbmFIUTZJRFF3TUR0Y2NseHVJQ0FnSUNBZ0lDQnNhVzVsTFdobGFXZG9kRG9nTVdWdE8xeHlYRzRnSUNBZ0lDQWdJRUJwYm1Oc2RXUmxJR0ZrWVhCMGFYWXRabTl1ZENneU5Td2dNVGdzSURFcE8xeHlYRzRnSUNBZ2ZWeHlYRzRnSUNBZ1FHMWxaR2xoSUNodFlYZ3RkMmxrZEdnNklDUnRaRFFyY0hncElIdGNjbHh1SUNBZ0lDQWdJQ0JtYkdWNExXUnBjbVZqZEdsdmJqb2dZMjlzZFcxdU8xeHlYRzRnSUNBZ2ZWeHlYRzU5SWl3aUxtRndjR3g1SUh0Y2NseHVJQ0FnSUdKaFkydG5jbTkxYm1RNklDUnNhV2RvZEVkeVpYbERiMnh2Y2p0Y2NseHVJQ0FnSUdsbWNtRnRaU0I3WEhKY2JpQWdJQ0FnSUNBZ1pteHZZWFE2SUd4bFpuUTdYSEpjYmlBZ0lDQWdJQ0FnZDJsa2RHZzZJREV3TUNVN1hISmNiaUFnSUNBZ0lDQWdhR1ZwWjJoME9pQmhkWFJ2TzF4eVhHNGdJQ0FnSUNBZ0lHMXBiaTFvWldsbmFIUTZJRFl4TUhCNE8xeHlYRzRnSUNBZ0lDQWdJR0poWTJ0bmNtOTFibVE2SUNSc2FXZG9kRWR5WlhsRGIyeHZjanRjY2x4dUlDQWdJSDFjY2x4dWZTSXNJaTVtYjI5MFpYSWdlMXh5WEc0Z0lDQWdZbUZqYTJkeWIzVnVaRG9nSkdKeVlXNWtRMjlzYjNJN1hISmNiaUFnSUNCQWFXNWpiSFZrWlNCaFpHRndkR2wyTFhaaGJIVmxLSEJoWkdScGJtY3RkRzl3TENBMk1Dd2dNekFzSURFcE8xeHlYRzRnSUNBZ1FHbHVZMngxWkdVZ1lXUmhjSFJwZGkxMllXeDFaU2h3WVdSa2FXNW5MV0p2ZEhSdmJTd2dOakFzSURNd0xDQXhLVHRjY2x4dUlDQWdJQ1pmWDJ4dloyOGdlMXh5WEc0Z0lDQWdJQ0FnSUVCdFpXUnBZU0FvYldGNExYZHBaSFJvT2lBa2JXUTBLM0I0S1NCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUcxaGNtZHBiaTFpYjNSMGIyMDZJREl3Y0hnN1hISmNiaUFnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdmVnh5WEc0Z0lDQWdKbDlmYVhSbGJTQjdYSEpjYmlBZ0lDQWdJQ0FnSmw5bWJHVjRJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdaR2x6Y0d4aGVUb2dabXhsZUR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnWVd4cFoyNHRhWFJsYlhNNklHTmxiblJsY2p0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYW5WemRHbG1lUzFqYjI1MFpXNTBPaUJ6Y0dGalpTMWlaWFIzWldWdU8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCM2FXUjBhRG9nTVRBd0pUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1FHMWxaR2xoSUNodFlYZ3RkMmxrZEdnNklDUnRaRFFyY0hncElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1pzWlhndFpHbHlaV04wYVc5dU9pQmpiMngxYlc0N1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSmpwc1lYTjBMV05vYVd4a0lIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1FHbHVZMngxWkdVZ1lXUmhjSFJwZGkxMllXeDFaU2h0WVhKbmFXNHRkRzl3TENBM05Td2dNekFzSURFcE8xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJSDFjY2x4dUlDQWdJQ1pmWDJOdmJuUmhZM1FnZTF4eVhHNGdJQ0FnSUNBZ0lHRWdlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQmthWE53YkdGNU9pQmliRzlqYXpzZ0lDQWdJQ0FnSUNBZ0lDQmNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RHVjRkQzFoYkdsbmJqb2djbWxuYUhRN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUVCdFpXUnBZU0FvYldGNExYZHBaSFJvT2lBa2JXUTBLM0I0S1NCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBaWGgwTFdGc2FXZHVPaUJqWlc1MFpYSTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIMGdJQ0FnSUNBZ0lDQWdJQ0JjY2x4dUlDQWdJQ0FnSUNCOVhISmNiaUFnSUNCOVhISmNiaUFnSUNCaExDQndJSHRjY2x4dUlDQWdJQ0FnSUNCamIyeHZjam9nSTJabVpqdGNjbHh1SUNBZ0lDQWdJQ0JzYVc1bExXaGxhV2RvZERvZ01TNDBaVzA3WEhKY2JpQWdJQ0FnSUNBZ2RISmhibk5wZEdsdmJqb2dZV3hzSUM0eWN6dGNjbHh1SUNBZ0lDQWdJQ0JtYjI1MExYZGxhV2RvZERvZ05EQXdPMXh5WEc0Z0lDQWdJQ0FnSUVCcGJtTnNkV1JsSUdGa1lYQjBhWFl0Wm05dWRDZ3lNQ3dnTVRZc0lERXBPMXh5WEc0Z0lDQWdmVnh5WEc0Z0lDQWdZU0I3WEhKY2JpQWdJQ0FnSUNBZ0pqcG9iM1psY2lCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdOdmJHOXlPaUFrYldGcGJraHZkbVZ5UTI5c2IzSTdYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnZlZ4eVhHNGdJQ0FnY0NCN1hISmNiaUFnSUNBZ0lDQWdiV0Z5WjJsdUxXSnZkSFJ2YlRvZ01UQndlRHRjY2x4dUlDQWdJQ0FnSUNBbU9teGhjM1F0WTJocGJHUWdlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnRZWEpuYVc0dFltOTBkRzl0T2lBd08xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNCQWJXVmthV0VnS0cxaGVDMTNhV1IwYURvZ0pHMWtOQ3R3ZUNrZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMFpYaDBMV0ZzYVdkdU9pQmpaVzUwWlhJN1hISmNiaUFnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUdFZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCaWIzSmtaWEl0WW05MGRHOXRPaUF4Y0hnZ2MyOXNhV1FnY21kaVlTZ3lOVFVzTWpVMUxESTFOU3d1TlNrN1hISmNiaUFnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdmVnh5WEc1OVhISmNiaUpkZlE9PSAqLyIsIi8vPNCc0JjQmtCh0JjQndCrPj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbkBpbXBvcnQgXCJwcmVzZXRzL21peGluc1wiO1xyXG4vLzwv0JzQmNCa0KHQmNCd0Ks+PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuXHJcbi8vPNCo0KDQmNCk0KLQqz49PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG5cclxuLy880J/QvtC00LrQu9GO0YfQsNC10Lwg0YjRgNC40YTRgtGLPj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLyZkaXNwbGF5PXN3YXAmc3Vic2V0PWN5cmlsbGljLWV4dFxyXG5AaW1wb3J0IFwicHJlc2V0cy9mb250c1wiO1xyXG4vLzwv0J/QvtC00LrQu9GO0YfQsNC10Lwg0YjRgNC40YTRgtGLPj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG5cclxuLy880JjQutC+0L3QvtGH0L3Ri9C1INGI0YDQuNGE0YLRiz49PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuLy9AaW1wb3J0IFwiaWNvbnNcIjtcclxuLy88L9CY0LrQvtC90L7Rh9C90YvQtSDRiNGA0LjRhNGC0Ys+PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcblxyXG4vLzzQqNGA0LjRhNGCINC/0L4g0YPQvNC+0LvRh9Cw0L3QuNGOPj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4kZm9udEZhbWlseTogXCJSb2JvdG9cIjtcclxuJGZvbnRTaXplOiAxNjtcclxuLy88L9Co0YDQuNGE0YIg0L/QviDRg9C80L7Qu9GH0LDQvdC40Y4+PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcblxyXG4vLzwv0KjQoNCY0KTQotCrPj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuXHJcbi8vPNCf0JXQoNCV0JzQldCd0J3Qq9CVPj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiRtaW5XaWR0aDogMzIwcHg7XHJcbiRtYXhXaWR0aDogMTkyMDtcclxuJG1heFdpZHRoQ29udGFpbmVyOiAxMTIwO1xyXG4kbWQxOiAkbWF4V2lkdGhDb250YWluZXIgKyAxMjtcclxuJG1kMjogOTkxLjk4O1xyXG4kbWQzOiA3NjcuOTg7XHJcbiRtZDQ6IDQ3OS45ODtcclxuXHJcbiRtYWluQ29sb3I6ICMwMDdBRkY7XHJcbiRtYWluSG92ZXJDb2xvcjogIzE1NzhFMDtcclxuJG1haW5BY3RpdmVDb2xvcjogIzAwNTRBRjtcclxuJGJyYW5kQ29sb3I6ICMwMDJFNkM7XHJcbiRncmVlbkNvbG9yOiAjNzRBQTVDO1xyXG4kZ3JleUNvbG9yOiAjREVERURFO1xyXG4kbGlnaHRHcmV5Q29sb3I6ICNGMkYxRjE7XHJcblxyXG4vLzwv0J/QldCg0JXQnNCV0J3QndCr0JU+PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuXHJcbi8vPNCe0JHQndCj0JvQldCd0JjQlSwg0J7QkdCp0JjQlSDQn9CQ0KDQkNCc0JXQotCg0Ks+PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuQGltcG9ydCBcInByZXNldHMvbnVsbFwiO1xyXG5ib2R5IHtcclxuXHRjb2xvcjogJGJyYW5kQ29sb3I7XHJcblx0Ji5fbG9jayB7XHJcblx0XHRvdmVyZmxvdzogaGlkZGVuO1xyXG5cdH1cclxufVxyXG4vLzwv0J7QkdCd0KPQm9CV0J3QmNCVLCDQntCR0KnQmNCVINCf0JDQoNCQ0JzQldCi0KDQqz49PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG5cclxuLy880J7QkdCe0JvQntCn0JrQkD49PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4ud3JhcHBlciB7XHJcblx0d2lkdGg6IDEwMCU7XHJcblx0bWluLWhlaWdodDogMTAwJTtcclxuXHRvdmVyZmxvdzogaGlkZGVuO1xyXG5cdGRpc3BsYXk6IGZsZXg7XHJcblx0ZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuXHQmLl9sb2FkZWQge1xyXG5cdH1cclxufVxyXG4vLzwv0J7QkdCe0JvQntCn0JrQkD49PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG5cclxuLy880J7QodCd0J7QktCd0JDQryDQodCV0KLQmtCQPj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbi5fY29udGFpbmVyIHtcclxuXHRtYXgtd2lkdGg6ICRtYXhXaWR0aENvbnRhaW5lciArIHB4O1xyXG5cdG1hcmdpbjogMCBhdXRvO1xyXG5cdEBtZWRpYSAobWF4LXdpZHRoOiAkbWQxK3B4KSB7XHJcblx0XHRtYXgtd2lkdGg6IDk3MHB4O1xyXG5cdH1cclxuXHRAbWVkaWEgKG1heC13aWR0aDogJG1kMitweCkge1xyXG5cdFx0bWF4LXdpZHRoOiA3NTBweDtcclxuXHR9XHJcblx0QG1lZGlhIChtYXgtd2lkdGg6ICRtZDMrcHgpIHtcclxuXHRcdG1heC13aWR0aDogbm9uZTtcclxuXHRcdHBhZGRpbmc6IDAgMTBweDtcclxuXHR9XHJcbn1cclxuLy88L9Ce0KHQndCe0JLQndCQ0K8g0KHQldCi0JrQkD49PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG5cclxuLy880J/QntCU0JrQm9Cu0KfQldCd0JjQlSDQpNCQ0JnQm9Ce0JIgVUkg0KHQotCY0JvQldCZLCDQpNCe0KDQnCDQmCDQk9Ce0KLQntCS0KvQpSDQmtCb0JDQodCh0J7Qkj49PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbi8vQGltcG9ydCBcInByZXNldHMvZm9ybXNcIjtcclxuLy9AaW1wb3J0IFwicHJlc2V0cy91aVwiO1xyXG4vLzwv0J/QntCU0JrQm9Cu0KfQldCd0JjQlSDQpNCQ0JnQm9Ce0JIgVUkg0KHQotCY0JvQldCZLCDQpNCe0KDQnCDQmCDQk9Ce0KLQntCS0KvQpSDQmtCb0JDQodCh0J7Qkj49PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcblxyXG4vLzzQn9Ce0JTQmtCb0K7Qp9CV0J3QmNCVINCk0JDQmdCb0J7QkiDQodCi0JjQm9CV0Jkg0KHQotCg0JDQndCY0KYg0Jgg0K3Qm9CV0JzQldCd0KLQntCSPj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuLy9AaW1wb3J0IFwiZGF0ZXBpY2tlclwiO1xyXG4vL0BpbXBvcnQgXCJsaWdodGdhbGxlcnlcIjtcclxuLy9AaW1wb3J0IFwicGFnZ2luZ1wiO1xyXG4vL0BpbXBvcnQgXCJibG9ja3MvcG9wdXBcIjtcclxuQGltcG9ydCBcImJsb2Nrcy9oZWFkZXJcIjtcclxuQGltcG9ydCBcImJsb2Nrcy90b3BTZWN0aW9uXCI7XHJcbkBpbXBvcnQgXCJibG9ja3MvY2FzaFNlY3Rpb25cIjtcclxuQGltcG9ydCBcImJsb2Nrcy9iZWxheVNlY3Rpb25cIjtcclxuQGltcG9ydCBcImJsb2Nrcy9pbmNvbWVTZWN0aW9uXCI7XHJcbkBpbXBvcnQgXCJibG9ja3MvYXBwbHlTZWN0aW9uXCI7XHJcbkBpbXBvcnQgXCJibG9ja3MvZm9vdGVyXCI7XHJcbi8vQGltcG9ydCBcImJsb2Nrcy9ob21lXCI7XHJcbi8vPC/Qn9Ce0JTQmtCb0K7Qp9CV0J3QmNCVINCk0JDQmdCb0J7QkiDQodCi0JjQm9CV0Jkg0KHQotCg0JDQndCY0KYg0Jgg0K3Qm9CV0JzQldCd0KLQntCSPj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuXHJcbi8vPNCe0KHQndCe0JLQndCe0Jkg0JHQm9Ce0Jo+PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4ucGFnZSB7XHJcblx0ZmxleDogMSAxIGF1dG87XHJcbn1cclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG5cclxuLy88L9Ce0KHQndCe0JLQndCe0Jkg0JHQm9Ce0Jo+PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4iLCIqIHtcbiAgcGFkZGluZzogMHB4O1xuICBtYXJnaW46IDBweDtcbiAgYm9yZGVyOiAwcHg7XG59XG5cbiosXG4qOmJlZm9yZSxcbio6YWZ0ZXIge1xuICAtbW96LWJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIC13ZWJraXQtYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuYXNpZGUsXG5uYXYsXG5mb290ZXIsXG5oZWFkZXIsXG5zZWN0aW9uIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbmh0bWwge1xuICBmb250LXNpemU6IDE2cHg7XG59XG5cbmh0bWwsXG5ib2R5IHtcbiAgaGVpZ2h0OiAxMDAlO1xuICBtaW4td2lkdGg6IDMyMHB4O1xufVxuXG5ib2R5IHtcbiAgbGluZS1oZWlnaHQ6IDE7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICAtbXMtdGV4dC1zaXplLWFkanVzdDogMTAwJTtcbiAgLW1vei10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XG59XG5cbmlucHV0LFxuYnV0dG9uLFxudGV4dGFyZWEge1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgZm9udC1zaXplOiBpbmhlcml0O1xufVxuXG5pbnB1dDo6LW1zLWNsZWFyIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuYnV0dG9uIHtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBpbmhlcml0O1xufVxuXG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIge1xuICBwYWRkaW5nOiAwO1xuICBib3JkZXI6IDA7XG59XG5cbmEsXG5hOnZpc2l0ZWQge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5cbmE6aG92ZXIge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5cbnVsIGxpIHtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbn1cblxuaW1nIHtcbiAgdmVydGljYWwtYWxpZ246IHRvcDtcbn1cblxuaDEsXG5oMixcbmgzLFxuaDQsXG5oNSxcbmg2IHtcbiAgZm9udC13ZWlnaHQ6IGluaGVyaXQ7XG4gIGZvbnQtc2l6ZTogaW5oZXJpdDtcbn1cblxuYm9keSB7XG4gIGNvbG9yOiAjMDAyRTZDO1xufVxuYm9keS5fbG9jayB7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbi53cmFwcGVyIHtcbiAgd2lkdGg6IDEwMCU7XG4gIG1pbi1oZWlnaHQ6IDEwMCU7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG59XG4uX2NvbnRhaW5lciB7XG4gIG1heC13aWR0aDogMTEyMHB4O1xuICBtYXJnaW46IDAgYXV0bztcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMTMycHgpIHtcbiAgLl9jb250YWluZXIge1xuICAgIG1heC13aWR0aDogOTcwcHg7XG4gIH1cbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA5OTEuOThweCkge1xuICAuX2NvbnRhaW5lciB7XG4gICAgbWF4LXdpZHRoOiA3NTBweDtcbiAgfVxufVxuQG1lZGlhIChtYXgtd2lkdGg6IDc2Ny45OHB4KSB7XG4gIC5fY29udGFpbmVyIHtcbiAgICBtYXgtd2lkdGg6IG5vbmU7XG4gICAgcGFkZGluZzogMCAxMHB4O1xuICB9XG59XG5cbi8qXG4vL0J1cmdlclxuLmljb24tbWVudSB7XG5cdGRpc3BsYXk6IG5vbmU7XG5cdEBtZWRpYSAobWF4LXdpZHRoOiAkbWQzK3B4KSB7XG5cdFx0ZGlzcGxheTogYmxvY2s7XG5cdFx0cG9zaXRpb246IGFic29sdXRlO1xuXHRcdHRvcDogMThweDtcblx0XHRyaWdodDogMTBweDtcblx0XHR3aWR0aDogMzBweDtcblx0XHRoZWlnaHQ6IDE4cHg7XG5cdFx0Y3Vyc29yOiBwb2ludGVyO1xuXHRcdHotaW5kZXg6IDU7XG5cdFx0c3BhbiB7XG5cdFx0XHR0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlIDBzO1xuXHRcdFx0dG9wOiBjYWxjKDUwJSAtIDFweCk7XG5cdFx0XHRsZWZ0OiAwcHg7XG5cdFx0XHRwb3NpdGlvbjogYWJzb2x1dGU7XG5cdFx0XHR3aWR0aDogMTAwJTtcblx0XHRcdGhlaWdodDogMnB4O1xuXHRcdFx0YmFja2dyb3VuZC1jb2xvcjogIzAwMDtcblx0XHRcdCY6Zmlyc3QtY2hpbGQge1xuXHRcdFx0XHR0b3A6IDBweDtcblx0XHRcdH1cblx0XHRcdCY6bGFzdC1jaGlsZCB7XG5cdFx0XHRcdHRvcDogYXV0bztcblx0XHRcdFx0Ym90dG9tOiAwcHg7XG5cdFx0XHR9XG5cdFx0fVxuXHRcdCYuX2FjdGl2ZSB7XG5cdFx0XHRzcGFuIHtcblx0XHRcdFx0dHJhbnNmb3JtOiBzY2FsZSgwKTtcblx0XHRcdFx0JjpmaXJzdC1jaGlsZCB7XG5cdFx0XHRcdFx0dHJhbnNmb3JtOiByb3RhdGUoLTQ1ZGVnKTtcblx0XHRcdFx0XHR0b3A6IGNhbGMoNTAlIC0gMXB4KTtcblx0XHRcdFx0fVxuXHRcdFx0XHQmOmxhc3QtY2hpbGQge1xuXHRcdFx0XHRcdHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcblx0XHRcdFx0XHRib3R0b206IGNhbGMoNTAlIC0gMXB4KTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxufVxuKi9cbi5oZWFkZXIge1xuICBiYWNrZ3JvdW5kOiAjZmZmO1xuICBwYWRkaW5nLXRvcDogMzBweDtcbiAgcGFkZGluZy1ib3R0b206IDMwcHg7XG59XG5AbWVkaWEgKG1heC13aWR0aDogMTEyMHB4KSB7XG4gIC5oZWFkZXIge1xuICAgIHBhZGRpbmctdG9wOiBjYWxjKDE1cHggKyAxNSAqICgoMTAwdncgLSAzMjBweCkgLyA4MDApKTtcbiAgfVxufVxuQG1lZGlhIChtYXgtd2lkdGg6IDExMjBweCkge1xuICAuaGVhZGVyIHtcbiAgICBwYWRkaW5nLWJvdHRvbTogY2FsYygxNXB4ICsgMTUgKiAoKDEwMHZ3IC0gMzIwcHgpIC8gODAwKSk7XG4gIH1cbn1cbi5oZWFkZXJfX3dyYXAge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG59XG5AbWVkaWEgKG1heC13aWR0aDogMTEzMnB4KSB7XG4gIC5oZWFkZXJfX3dyYXAge1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIH1cbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjcuOThweCkge1xuICAuaGVhZGVyX193cmFwIHtcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICB9XG59XG4uaGVhZGVyX19tZW51IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuLmhlYWRlcl9fYnVyZ2VyIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjcuOThweCkge1xuICAuaGVhZGVyX19idXJnZXIge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB3aWR0aDogNDBweDtcbiAgICBoZWlnaHQ6IDQwcHg7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIHotaW5kZXg6IDU7XG4gIH1cbiAgLmhlYWRlcl9fYnVyZ2VyIHNwYW4ge1xuICAgIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2UgMHM7XG4gICAgdG9wOiBjYWxjKDUwJSAtIDFweCk7XG4gICAgbGVmdDogY2FsYyg1MCUgLSAxNXB4KTtcbiAgICB3aWR0aDogMzBweDtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgaGVpZ2h0OiAycHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwMkU2QztcbiAgICBib3JkZXItcmFkaXVzOiAycHg7XG4gIH1cbiAgLmhlYWRlcl9fYnVyZ2VyIHNwYW46Zmlyc3QtY2hpbGQge1xuICAgIHRvcDogMTBweDtcbiAgfVxuICAuaGVhZGVyX19idXJnZXIgc3BhbjpsYXN0LWNoaWxkIHtcbiAgICB0b3A6IGF1dG87XG4gICAgYm90dG9tOiAxMHB4O1xuICB9XG4gIC5oZWFkZXJfX2J1cmdlci5fYWN0aXZlIHtcbiAgICBib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOiAwO1xuICAgIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiAwO1xuICB9XG4gIC5oZWFkZXJfX2J1cmdlci5fYWN0aXZlIHNwYW4ge1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMCk7XG4gIH1cbiAgLmhlYWRlcl9fYnVyZ2VyLl9hY3RpdmUgc3BhbjpmaXJzdC1jaGlsZCB7XG4gICAgdHJhbnNmb3JtOiByb3RhdGUoLTQ1ZGVnKTtcbiAgICB0b3A6IGNhbGMoNTAlIC0gMXB4KTtcbiAgfVxuICAuaGVhZGVyX19idXJnZXIuX2FjdGl2ZSBzcGFuOmxhc3QtY2hpbGQge1xuICAgIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcbiAgICBib3R0b206IGNhbGMoNTAlIC0gMXB4KTtcbiAgfVxufVxuLmhlYWRlcl9fbG9nbyBpbWcge1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogYXV0bztcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA0NzkuOThweCkge1xuICAuaGVhZGVyX19sb2dvIHtcbiAgICBtYXgtd2lkdGg6IDcwdnc7XG4gIH1cbn1cblxuLm1lbnUtdG9wIHtcbiAgdHJhbnNpdGlvbjogYWxsIDAuMnM7XG59XG4ubWVudS10b3BfX2xpc3Qge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDc2Ny45OHB4KSB7XG4gIC5tZW51LXRvcF9fbGlzdCB7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBiYWNrZ3JvdW5kOiAjRjJGMUYxO1xuICAgIHBhZGRpbmc6IDIwcHg7XG4gICAgYWxpZ24taXRlbXM6IHN0YXJ0O1xuICB9XG59XG4ubWVudS10b3BfX2l0ZW0ge1xuICBtYXJnaW4tcmlnaHQ6IDM1cHg7XG59XG4ubWVudS10b3BfX2l0ZW06bGFzdC1jaGlsZCB7XG4gIG1hcmdpbi1yaWdodDogMDtcbn1cbi5tZW51LXRvcF9faXRlbTpsYXN0LWNoaWxkIC5tZW51LXRvcF9fbGluayB7XG4gIGRpc3BsYXk6IGlubGluZS1mbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQ6ICMwMDdBRkY7XG4gIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgaGVpZ2h0OiA0OHB4O1xuICB3aWR0aDogMjAwcHg7XG59XG4ubWVudS10b3BfX2l0ZW06bGFzdC1jaGlsZCAubWVudS10b3BfX2xpbms6aG92ZXIge1xuICBjb2xvcjogI2ZmZjtcbiAgYmFja2dyb3VuZDogIzE1NzhFMDtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjcuOThweCkge1xuICAubWVudS10b3BfX2l0ZW06bGFzdC1jaGlsZCB7XG4gICAgbWFyZ2luLXJpZ2h0OiAwO1xuICAgIG1hcmdpbi1ib3R0b206IDA7XG4gIH1cbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjcuOThweCkge1xuICAubWVudS10b3BfX2l0ZW0ge1xuICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuICB9XG59XG4ubWVudS10b3BfX2xpbmsge1xuICBjb2xvcjogIzAwMkU2QztcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3M7XG59XG4ubWVudS10b3BfX2xpbms6aG92ZXIge1xuICBjb2xvcjogIzE1NzhFMDtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMTMycHgpIHtcbiAgLm1lbnUtdG9wIHtcbiAgICBtYXJnaW4tdG9wOiAyMHB4O1xuICB9XG59XG5AbWVkaWEgKG1heC13aWR0aDogNzY3Ljk4cHgpIHtcbiAgLm1lbnUtdG9wIHtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDg2cHg7XG4gICAgcmlnaHQ6IC0xMHB4O1xuICAgIHdpZHRoOiAzMzBweDtcbiAgICBtYXgtaGVpZ2h0OiAwO1xuICAgIG1hcmdpbi10b3A6IDA7XG4gIH1cbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjcuOThweCkgYW5kIChtYXgtd2lkdGg6IDExMjBweCkge1xuICAubWVudS10b3Age1xuICAgIHRvcDogY2FsYyg1OHB4ICsgMjggKiAoKDEwMHZ3IC0gMzIwcHgpIC8gODAwKSk7XG4gIH1cbn1cbi5tZW51LXRvcC5fYWN0aXZlIHtcbiAgbWF4LWhlaWdodDogNTAwcHg7XG59XG5cbi5oZXJvIHtcbiAgYmFja2dyb3VuZDogdXJsKC4uL2ltZy9oZWFkZXItYmcuanBnKSAjMDAyRTZDIG5vLXJlcGVhdCBjZW50ZXIgcmlnaHQ7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIG1pbi1oZWlnaHQ6IDY1MHB4O1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDExMjBweCkge1xuICAuaGVybyB7XG4gICAgbWluLWhlaWdodDogY2FsYygyNTBweCArIDQwMCAqICgoMTAwdncgLSAzMjBweCkgLyA4MDApKTtcbiAgfVxufVxuLmhlcm9fX3dyYXAge1xuICBkaXNwbGF5OiBmbGV4O1xufVxuLmhlcm9fX2l0ZW0ge1xuICBmbGV4OiAwIDEgNjAlO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBwYWRkaW5nLXRvcDogMTIwcHg7XG4gIHBhZGRpbmctYm90dG9tOiAxMjBweDtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMTIwcHgpIHtcbiAgLmhlcm9fX2l0ZW0ge1xuICAgIHBhZGRpbmctdG9wOiBjYWxjKDQwcHggKyA4MCAqICgoMTAwdncgLSAzMjBweCkgLyA4MDApKTtcbiAgfVxufVxuQG1lZGlhIChtYXgtd2lkdGg6IDExMjBweCkge1xuICAuaGVyb19faXRlbSB7XG4gICAgcGFkZGluZy1ib3R0b206IGNhbGMoNDBweCArIDgwICogKCgxMDB2dyAtIDMyMHB4KSAvIDgwMCkpO1xuICB9XG59XG5AbWVkaWEgKG1heC13aWR0aDogMTEzMnB4KSB7XG4gIC5oZXJvX19pdGVtIHtcbiAgICBmbGV4OiAwIDEgODAlO1xuICB9XG59XG5AbWVkaWEgKG1heC13aWR0aDogOTkxLjk4cHgpIHtcbiAgLmhlcm9fX2l0ZW0ge1xuICAgIGZsZXg6IDAgMSAxMDAlO1xuICB9XG59XG5AbWVkaWEgKG1heC13aWR0aDogNDc5Ljk4cHgpIHtcbiAgLmhlcm9fX2l0ZW0ge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgfVxufVxuLmhlcm9fX3RpdGxlIHtcbiAgY29sb3I6ICNmZmY7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIG1hcmdpbi1ib3R0b206IDM1cHg7XG4gIGZvbnQtc2l6ZTogOTJweDtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMTIwcHgpIHtcbiAgLmhlcm9fX3RpdGxlIHtcbiAgICBmb250LXNpemU6IGNhbGMoNDBweCArIDUyICogKCgxMDB2dyAtIDMyMHB4KSAvIDgwMCkpO1xuICB9XG59XG4uaGVyb19fc3VidGl0bGUge1xuICBjb2xvcjogI2ZmZjtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgZm9udC1zaXplOiAzNnB4O1xuICBsaW5lLWhlaWdodDogMS4zZW07XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMTIwcHgpIHtcbiAgLmhlcm9fX3N1YnRpdGxlIHtcbiAgICBmb250LXNpemU6IGNhbGMoMjBweCArIDE2ICogKCgxMDB2dyAtIDMyMHB4KSAvIDgwMCkpO1xuICB9XG59XG5AbWVkaWEgKG1heC13aWR0aDogNzY3Ljk4cHgpIHtcbiAgLmhlcm8ge1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7XG4gIH1cbn1cblxuLmNhc2gge1xuICBiYWNrZ3JvdW5kOiAjZmZmO1xuICBwYWRkaW5nLXRvcDogMTIwcHg7XG4gIHBhZGRpbmctYm90dG9tOiAxMjBweDtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMTIwcHgpIHtcbiAgLmNhc2gge1xuICAgIHBhZGRpbmctdG9wOiBjYWxjKDQwcHggKyA4MCAqICgoMTAwdncgLSAzMjBweCkgLyA4MDApKTtcbiAgfVxufVxuQG1lZGlhIChtYXgtd2lkdGg6IDExMjBweCkge1xuICAuY2FzaCB7XG4gICAgcGFkZGluZy1ib3R0b206IGNhbGMoNDBweCArIDgwICogKCgxMDB2dyAtIDMyMHB4KSAvIDgwMCkpO1xuICB9XG59XG4uY2FzaF9faW5mbyB7XG4gIG1hcmdpbi10b3A6IDYwcHg7XG59XG5AbWVkaWEgKG1heC13aWR0aDogMTEyMHB4KSB7XG4gIC5jYXNoX19pbmZvIHtcbiAgICBtYXJnaW4tdG9wOiBjYWxjKDMwcHggKyAzMCAqICgoMTAwdncgLSAzMjBweCkgLyA4MDApKTtcbiAgfVxufVxuLmNhc2hfX3RpdGxlIHtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgbWFyZ2luLWJvdHRvbTogMTVweDtcbiAgZm9udC1zaXplOiA2MnB4O1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDExMjBweCkge1xuICAuY2FzaF9fdGl0bGUge1xuICAgIGZvbnQtc2l6ZTogY2FsYygzNXB4ICsgMjcgKiAoKDEwMHZ3IC0gMzIwcHgpIC8gODAwKSk7XG4gIH1cbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA0NzkuOThweCkge1xuICAuY2FzaF9fdGl0bGUge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgfVxufVxuLmNhc2hfX3N1YnRpdGxlIHtcbiAgbGluZS1oZWlnaHQ6IDEuNGVtO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIGZvbnQtc2l6ZTogMjBweDtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMTIwcHgpIHtcbiAgLmNhc2hfX3N1YnRpdGxlIHtcbiAgICBmb250LXNpemU6IGNhbGMoMTRweCArIDYgKiAoKDEwMHZ3IC0gMzIwcHgpIC8gODAwKSk7XG4gIH1cbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA0NzkuOThweCkge1xuICAuY2FzaF9fc3VidGl0bGUge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgfVxufVxuXG4uaW5mby1jYXNoIHtcbiAgYmFja2dyb3VuZDogI0YyRjFGMTtcbiAgcGFkZGluZy10b3A6IDQwcHg7XG4gIHBhZGRpbmctYm90dG9tOiA0MHB4O1xuICBwYWRkaW5nLWxlZnQ6IDcwcHg7XG4gIHBhZGRpbmctcmlnaHQ6IDcwcHg7XG59XG5AbWVkaWEgKG1heC13aWR0aDogMTEyMHB4KSB7XG4gIC5pbmZvLWNhc2gge1xuICAgIHBhZGRpbmctbGVmdDogY2FsYygyMHB4ICsgNTAgKiAoKDEwMHZ3IC0gMzIwcHgpIC8gODAwKSk7XG4gIH1cbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMTIwcHgpIHtcbiAgLmluZm8tY2FzaCB7XG4gICAgcGFkZGluZy1yaWdodDogY2FsYygyMHB4ICsgNTAgKiAoKDEwMHZ3IC0gMzIwcHgpIC8gODAwKSk7XG4gIH1cbn1cbi5pbmZvLWNhc2hfX3RpdGxlIHtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBtYXJnaW46IDAgYXV0byA2MHB4O1xuICBkaXNwbGF5OiBibG9jaztcbiAgbGluZS1oZWlnaHQ6IDEuMmVtO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBmb250LXNpemU6IDMwcHg7XG59XG5AbWVkaWEgKG1heC13aWR0aDogMTEyMHB4KSB7XG4gIC5pbmZvLWNhc2hfX3RpdGxlIHtcbiAgICBmb250LXNpemU6IGNhbGMoMThweCArIDEyICogKCgxMDB2dyAtIDMyMHB4KSAvIDgwMCkpO1xuICB9XG59XG4uaW5mby1jYXNoX193cmFwIHtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC1nYXA6IDMwcHg7XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMTQwcHggMWZyO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDExMzJweCkge1xuICAuaW5mby1jYXNoX193cmFwIHtcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmcjtcbiAgfVxufVxuLmluZm8tY2FzaF9faW1nIHtcbiAgd2lkdGg6IDE0MHB4O1xuICBoZWlnaHQ6IDE0MHB4O1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG4uaW5mby1jYXNoX19pbWcgaW1nIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA5OTEuOThweCkge1xuICAuaW5mby1jYXNoX19pbWcge1xuICAgIG1hcmdpbjogYXV0bztcbiAgfVxufVxuLmluZm8tY2FzaF9fcm93IHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2Vlbjtcbn1cbi5pbmZvLWNhc2hfX3JvdzpmaXJzdC1jaGlsZCB7XG4gIHBhZGRpbmctYm90dG9tOiAzMHB4O1xuICBib3JkZXItYm90dG9tOiAzcHggc29saWQgIzAwMkU2QztcbiAgbWFyZ2luLWJvdHRvbTogMzBweDtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA5OTEuOThweCkge1xuICAuaW5mby1jYXNoX19yb3cge1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgfVxufVxuQG1lZGlhIChtYXgtd2lkdGg6IDk5MS45OHB4KSB7XG4gIC5pbmZvLWNhc2hfX2NvbCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxufVxuLmluZm8tY2FzaF9fY29sOmxhc3QtY2hpbGQge1xuICBtYXJnaW4tYm90dG9tOiAwO1xufVxuLmluZm8tY2FzaF9fbmFtZSB7XG4gIGZvbnQtc2l6ZTogMjZweDtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMTIwcHgpIHtcbiAgLmluZm8tY2FzaF9fbmFtZSB7XG4gICAgZm9udC1zaXplOiBjYWxjKDIwcHggKyA2ICogKCgxMDB2dyAtIDMyMHB4KSAvIDgwMCkpO1xuICB9XG59XG5AbWVkaWEgKG1heC13aWR0aDogOTkxLjk4cHgpIHtcbiAgLmluZm8tY2FzaF9fbmFtZSB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB9XG59XG4uaW5mby1jYXNoX190ZWFtIHtcbiAgZm9udC1zaXplOiAyMHB4O1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDExMjBweCkge1xuICAuaW5mby1jYXNoX190ZWFtIHtcbiAgICBmb250LXNpemU6IGNhbGMoMTZweCArIDQgKiAoKDEwMHZ3IC0gMzIwcHgpIC8gODAwKSk7XG4gIH1cbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA5OTEuOThweCkge1xuICAuaW5mby1jYXNoX190ZWFtIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIH1cbn1cbi5pbmZvLWNhc2hfX2JvbnVzIHNwYW4ge1xuICBmb250LXNpemU6IDI2cHg7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuLmluZm8tY2FzaF9fYm9udXMgc3Bhbi5fYmlnIHtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgZm9udC1zaXplOiAxMTVweDtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMTIwcHgpIHtcbiAgLmluZm8tY2FzaF9fYm9udXMgc3Bhbi5fYmlnIHtcbiAgICBmb250LXNpemU6IGNhbGMoODBweCArIDM1ICogKCgxMDB2dyAtIDMyMHB4KSAvIDgwMCkpO1xuICB9XG59XG4uaW5mby1jYXNoX19ib251cyBzcGFuIHN1cCB7XG4gIGZvbnQtc2l6ZTogMTZweDtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA5OTEuOThweCkge1xuICAuaW5mby1jYXNoX19ib251cyB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB9XG59XG4uaW5mby1jYXNoX19zdGF0IHtcbiAgbWFyZ2luLWJvdHRvbTogMTVweDtcbn1cbi5pbmZvLWNhc2hfX3N0YXRfdGl0bGUge1xuICBmb250LXdlaWdodDogNTAwO1xuICBmb250LXNpemU6IDIwcHg7XG59XG5AbWVkaWEgKG1heC13aWR0aDogMTEyMHB4KSB7XG4gIC5pbmZvLWNhc2hfX3N0YXRfdGl0bGUge1xuICAgIGZvbnQtc2l6ZTogY2FsYygxNnB4ICsgNCAqICgoMTAwdncgLSAzMjBweCkgLyA4MDApKTtcbiAgfVxufVxuLmluZm8tY2FzaF9fc3RhdDpsYXN0LWNoaWxkIHtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbn1cblxuLnN0YXQtY2FzaCB7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGdyaWQtZ2FwOiAxNXB4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDE0MHB4IG1pbm1heCgzMTVweCwgMWZyKTtcbn1cbi5zdGF0LWNhc2hfX25hbWUge1xuICBmb250LXNpemU6IDIwcHg7XG59XG5AbWVkaWEgKG1heC13aWR0aDogMTEyMHB4KSB7XG4gIC5zdGF0LWNhc2hfX25hbWUge1xuICAgIGZvbnQtc2l6ZTogY2FsYygxNnB4ICsgNCAqICgoMTAwdncgLSAzMjBweCkgLyA4MDApKTtcbiAgfVxufVxuLnN0YXQtY2FzaF9fcm93IHtcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xuICBoZWlnaHQ6IDMycHg7XG4gIHdpZHRoOiAxMDAlO1xuICBiYWNrZ3JvdW5kOiAjREVERURFO1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHBhZGRpbmc6IDAgMTBweDtcbn1cbi5zdGF0LWNhc2hfX3JvdyBzcGFuIHtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgY29sb3I6ICNmZmY7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgei1pbmRleDogMjtcbiAgZm9udC1zaXplOiAyOHB4O1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDExMjBweCkge1xuICAuc3RhdC1jYXNoX19yb3cgc3BhbiB7XG4gICAgZm9udC1zaXplOiBjYWxjKDE4cHggKyAxMCAqICgoMTAwdncgLSAzMjBweCkgLyA4MDApKTtcbiAgfVxufVxuLnN0YXQtY2FzaF9fcm93OjphZnRlciB7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHotaW5kZXg6IDE7XG4gIGxlZnQ6IDA7XG4gIHRvcDogMDtcbiAgYm90dG9tOiAwO1xuICBiYWNrZ3JvdW5kOiAjMDAyRTZDO1xuICBib3JkZXItcmFkaXVzOiA0cHg7XG4gIHdpZHRoOiAxMiU7XG59XG4uc3RhdC1jYXNoOm50aC1jaGlsZCgxKSAuc3RhdC1jYXNoX19yb3c6OmFmdGVyIHtcbiAgd2lkdGg6IDc1JTtcbiAgYmFja2dyb3VuZDogIzc0QUE1Qztcbn1cbi5zdGF0LWNhc2g6bnRoLWNoaWxkKDIpIC5zdGF0LWNhc2hfX3Jvdzo6YWZ0ZXIge1xuICB3aWR0aDogNjAlO1xufVxuLnN0YXQtY2FzaDpudGgtY2hpbGQoMykgLnN0YXQtY2FzaF9fcm93OjphZnRlciB7XG4gIHdpZHRoOiA1MCU7XG59XG4uc3RhdC1jYXNoX19hbm5vdGF0aW9uIHtcbiAgZ3JpZC1jb2x1bW46IDIvMztcbiAgZm9udC1zaXplOiAyMHB4O1xuICBwYWRkaW5nOiAxMHB4IDA7XG59XG5AbWVkaWEgKG1heC13aWR0aDogMTEyMHB4KSB7XG4gIC5zdGF0LWNhc2hfX2Fubm90YXRpb24ge1xuICAgIGZvbnQtc2l6ZTogY2FsYygxNnB4ICsgNCAqICgoMTAwdncgLSAzMjBweCkgLyA4MDApKTtcbiAgfVxufVxuQG1lZGlhIChtYXgtd2lkdGg6IDk5MS45OHB4KSB7XG4gIC5zdGF0LWNhc2hfX2Fubm90YXRpb24ge1xuICAgIGdyaWQtY29sdW1uOiAxLzM7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB9XG59XG5AbWVkaWEgKG1heC13aWR0aDogNzY3Ljk4cHgpIHtcbiAgLnN0YXQtY2FzaCB7XG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxNDBweCAxZnI7XG4gIH1cbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA0NzkuOThweCkge1xuICAuc3RhdC1jYXNoIHtcbiAgICBncmlkLXRlbXBsYXRlLXJvd3M6IGF1dG8gYXV0bztcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmcjtcbiAgICBncmlkLWdhcDogNXB4O1xuICB9XG59XG5cbi5iZWxheSB7XG4gIGJhY2tncm91bmQ6ICMwMDJFNkM7XG59XG4uYmVsYXlfX3dyYXAge1xuICBkaXNwbGF5OiBmbGV4O1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDc2Ny45OHB4KSB7XG4gIC5iZWxheV9fd3JhcCB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gIH1cbn1cbi5iZWxheV9faXRlbSB7XG4gIGhlaWdodDogMTAwJTtcbn1cbi5iZWxheV9faXRlbTpmaXJzdC1jaGlsZCB7XG4gIGZsZXg6IDAgMSAzOCU7XG4gIHBhZGRpbmctdG9wOiAxMTBweDtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMTIwcHgpIHtcbiAgLmJlbGF5X19pdGVtOmZpcnN0LWNoaWxkIHtcbiAgICBwYWRkaW5nLXRvcDogY2FsYyg0MHB4ICsgNzAgKiAoKDEwMHZ3IC0gMzIwcHgpIC8gODAwKSk7XG4gIH1cbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjcuOThweCkge1xuICAuYmVsYXlfX2l0ZW06Zmlyc3QtY2hpbGQge1xuICAgIGZsZXg6IDAgMSAxMDAlO1xuICAgIHBhZGRpbmctYm90dG9tOiA4MHB4O1xuICB9XG59XG5AbWVkaWEgKG1heC13aWR0aDogNzY3Ljk4cHgpIGFuZCAobWF4LXdpZHRoOiAxMTIwcHgpIHtcbiAgLmJlbGF5X19pdGVtOmZpcnN0LWNoaWxkIHtcbiAgICBwYWRkaW5nLWJvdHRvbTogY2FsYyg0MHB4ICsgNDAgKiAoKDEwMHZ3IC0gMzIwcHgpIC8gODAwKSk7XG4gIH1cbn1cbi5iZWxheV9faXRlbTpsYXN0LWNoaWxkIHtcbiAgZmxleDogMCAxIDYyJTtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjcuOThweCkge1xuICAuYmVsYXlfX2l0ZW06bGFzdC1jaGlsZCB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxufVxuLmJlbGF5X19pbWcge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHJpZ2h0OiAtOTBweDtcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XG59XG4uYmVsYXlfX3RpdGxlIHtcbiAgY29sb3I6ICNmZmY7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIGxpbmUtaGVpZ2h0OiAxLjJlbTtcbiAgbWFyZ2luLWJvdHRvbTogNTBweDtcbiAgZm9udC1zaXplOiA2MnB4O1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDExMjBweCkge1xuICAuYmVsYXlfX3RpdGxlIHtcbiAgICBtYXJnaW4tYm90dG9tOiBjYWxjKDIwcHggKyAzMCAqICgoMTAwdncgLSAzMjBweCkgLyA4MDApKTtcbiAgfVxufVxuQG1lZGlhIChtYXgtd2lkdGg6IDExMjBweCkge1xuICAuYmVsYXlfX3RpdGxlIHtcbiAgICBmb250LXNpemU6IGNhbGMoMzBweCArIDMyICogKCgxMDB2dyAtIDMyMHB4KSAvIDgwMCkpO1xuICB9XG59XG5AbWVkaWEgKG1heC13aWR0aDogNDc5Ljk4cHgpIHtcbiAgLmJlbGF5X190aXRsZSB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB9XG59XG4uYmVsYXkgcCB7XG4gIGZvbnQtc2l6ZTogMjBweDtcbiAgY29sb3I6ICNmZmY7XG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XG4gIGxpbmUtaGVpZ2h0OiAxLjRlbTtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMTIwcHgpIHtcbiAgLmJlbGF5IHAge1xuICAgIGZvbnQtc2l6ZTogY2FsYygxNnB4ICsgNCAqICgoMTAwdncgLSAzMjBweCkgLyA4MDApKTtcbiAgfVxufVxuLmJlbGF5IHA6bGFzdC1jaGlsZCB7XG4gIG1hcmdpbi1ib3R0b206IDA7XG59XG5AbWVkaWEgKG1heC13aWR0aDogNDc5Ljk4cHgpIHtcbiAgLmJlbGF5IHAge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgfVxufVxuXG4uaW5jb21lIHtcbiAgcGFkZGluZy10b3A6IDExMHB4O1xuICBwYWRkaW5nLWJvdHRvbTogMTEwcHg7XG4gIGJhY2tncm91bmQ6ICM3NEFBNUM7XG59XG5AbWVkaWEgKG1heC13aWR0aDogMTEyMHB4KSB7XG4gIC5pbmNvbWUge1xuICAgIHBhZGRpbmctdG9wOiBjYWxjKDQwcHggKyA3MCAqICgoMTAwdncgLSAzMjBweCkgLyA4MDApKTtcbiAgfVxufVxuQG1lZGlhIChtYXgtd2lkdGg6IDExMjBweCkge1xuICAuaW5jb21lIHtcbiAgICBwYWRkaW5nLWJvdHRvbTogY2FsYyg0MHB4ICsgNzAgKiAoKDEwMHZ3IC0gMzIwcHgpIC8gODAwKSk7XG4gIH1cbn1cbi5pbmNvbWVfX3RpdGxlIHtcbiAgZm9udC1zaXplOiA2MnB4O1xuICBjb2xvcjogI2ZmZjtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgbWFyZ2luLWJvdHRvbTogMTVweDtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMTIwcHgpIHtcbiAgLmluY29tZV9fdGl0bGUge1xuICAgIGZvbnQtc2l6ZTogY2FsYygzMHB4ICsgMzIgKiAoKDEwMHZ3IC0gMzIwcHgpIC8gODAwKSk7XG4gIH1cbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA0NzkuOThweCkge1xuICAuaW5jb21lX190aXRsZSB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB9XG59XG4uaW5jb21lX19zdWJ0aXRsZSB7XG4gIGZvbnQtc2l6ZTogMjBweDtcbiAgY29sb3I6ICNmZmY7XG4gIGxpbmUtaGVpZ2h0OiAxLjJlbTtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbi1ib3R0b206IDkwcHg7XG59XG5AbWVkaWEgKG1heC13aWR0aDogMTEyMHB4KSB7XG4gIC5pbmNvbWVfX3N1YnRpdGxlIHtcbiAgICBmb250LXNpemU6IGNhbGMoMTZweCArIDQgKiAoKDEwMHZ3IC0gMzIwcHgpIC8gODAwKSk7XG4gIH1cbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMTIwcHgpIHtcbiAgLmluY29tZV9fc3VidGl0bGUge1xuICAgIG1hcmdpbi1ib3R0b206IGNhbGMoMjBweCArIDcwICogKCgxMDB2dyAtIDMyMHB4KSAvIDgwMCkpO1xuICB9XG59XG5AbWVkaWEgKG1heC13aWR0aDogNDc5Ljk4cHgpIHtcbiAgLmluY29tZV9fc3VidGl0bGUge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgfVxufVxuLmluY29tZV9fd3JhcCB7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIG1pbm1heCg0NzBweCwgMWZyKSAxZnI7XG4gIGdyaWQtZ2FwOiAzMHB4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHN0cmV0Y2g7XG59XG5AbWVkaWEgKG1heC13aWR0aDogMTEzMnB4KSB7XG4gIC5pbmNvbWVfX3dyYXAge1xuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDFmciAxZnI7XG4gIH1cbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjcuOThweCkge1xuICAuaW5jb21lX193cmFwIHtcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmcjtcbiAgICBncmlkLWF1dG8tZmxvdzogcm93O1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICB9XG59XG4uaW5jb21lX19pdGVtOmxhc3QtY2hpbGQge1xuICBqdXN0aWZ5LXNlbGY6IGVuZDtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjcuOThweCkge1xuICAuaW5jb21lX19pdGVtOmxhc3QtY2hpbGQge1xuICAgIGp1c3RpZnktc2VsZjogY2VudGVyO1xuICB9XG59XG5AbWVkaWEgKG1heC13aWR0aDogNzY3Ljk4cHgpIHtcbiAgLmluY29tZV9faXRlbSB7XG4gICAganVzdGlmeS1zZWxmOiBjZW50ZXI7XG4gIH1cbn1cbi5pbmNvbWVfX2ltZyB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdG9wOiAyMHB4O1xuICBmaWx0ZXI6IGRyb3Atc2hhZG93KDE2cHggMjJweCA1MHB4IHJnYmEoMCwgMCwgMCwgMC4zOCkpIGRyb3Atc2hhZG93KDEwcHggMTBweCAyMnB4IHJnYmEoMCwgMCwgMCwgMC4xNykpO1xufVxuLmluY29tZV9faW1nIGltZyB7XG4gIG1heC13aWR0aDogMTAwJTtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjcuOThweCkge1xuICAuaW5jb21lX19pbWcge1xuICAgIHdpZHRoOiA1MCU7XG4gICAgbWFyZ2luOiBhdXRvO1xuICAgIHRvcDogLTEwcHg7XG4gIH1cbn1cblxuLmluY29tZS1pbmZvIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBmbGV4O1xufVxuLmluY29tZS1pbmZvX19udW0ge1xuICBmb250LXNpemU6IDE2OHB4O1xuICBjb2xvcjogI2ZmZjtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgbGluZS1oZWlnaHQ6IDFlbTtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMTIwcHgpIHtcbiAgLmluY29tZS1pbmZvX19udW0ge1xuICAgIGZvbnQtc2l6ZTogY2FsYyg4MHB4ICsgODggKiAoKDEwMHZ3IC0gMzIwcHgpIC8gODAwKSk7XG4gIH1cbn1cbi5pbmNvbWUtaW5mb19fbnVtIHNwYW4ge1xuICBmb250LXNpemU6IDc3cHg7XG59XG5AbWVkaWEgKG1heC13aWR0aDogMTEyMHB4KSB7XG4gIC5pbmNvbWUtaW5mb19fbnVtIHNwYW4ge1xuICAgIGZvbnQtc2l6ZTogY2FsYygzNXB4ICsgNDIgKiAoKDEwMHZ3IC0gMzIwcHgpIC8gODAwKSk7XG4gIH1cbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA0NzkuOThweCkge1xuICAuaW5jb21lLWluZm9fX251bSB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB9XG59XG4uaW5jb21lLWluZm9fX3ByZXRleHQge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHRvcDogMzBweDtcbiAgY29sb3I6ICNmZmY7XG4gIG1hcmdpbi1yaWdodDogNXB4O1xuICBmb250LXNpemU6IDIwcHg7XG59XG5AbWVkaWEgKG1heC13aWR0aDogMTEyMHB4KSB7XG4gIC5pbmNvbWUtaW5mb19fcHJldGV4dCB7XG4gICAgZm9udC1zaXplOiBjYWxjKDE4cHggKyAyICogKCgxMDB2dyAtIDMyMHB4KSAvIDgwMCkpO1xuICB9XG59XG5AbWVkaWEgKG1heC13aWR0aDogNDc5Ljk4cHgpIHtcbiAgLmluY29tZS1pbmZvX19wcmV0ZXh0IHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgbWFyZ2luLXJpZ2h0OiAwO1xuICAgIG1hcmdpbi1ib3R0b206IDVweDtcbiAgICB0b3A6IDA7XG4gIH1cbn1cbi5pbmNvbWUtaW5mb19fcG9zdHRleHQge1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTEyMCUpO1xuICBjb2xvcjogI2ZmZjtcbiAgd2lkdGg6IDEwMCU7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGxpbmUtaGVpZ2h0OiAxZW07XG4gIGZvbnQtc2l6ZTogMjVweDtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMTIwcHgpIHtcbiAgLmluY29tZS1pbmZvX19wb3N0dGV4dCB7XG4gICAgZm9udC1zaXplOiBjYWxjKDE4cHggKyA3ICogKCgxMDB2dyAtIDMyMHB4KSAvIDgwMCkpO1xuICB9XG59XG5AbWVkaWEgKG1heC13aWR0aDogNDc5Ljk4cHgpIHtcbiAgLmluY29tZS1pbmZvIHtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICB9XG59XG5cbi5hcHBseSB7XG4gIGJhY2tncm91bmQ6ICNGMkYxRjE7XG59XG4uYXBwbHkgaWZyYW1lIHtcbiAgZmxvYXQ6IGxlZnQ7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IGF1dG87XG4gIG1pbi1oZWlnaHQ6IDYxMHB4O1xuICBiYWNrZ3JvdW5kOiAjRjJGMUYxO1xufVxuXG4uZm9vdGVyIHtcbiAgYmFja2dyb3VuZDogIzAwMkU2QztcbiAgcGFkZGluZy10b3A6IDYwcHg7XG4gIHBhZGRpbmctYm90dG9tOiA2MHB4O1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDExMjBweCkge1xuICAuZm9vdGVyIHtcbiAgICBwYWRkaW5nLXRvcDogY2FsYygzMHB4ICsgMzAgKiAoKDEwMHZ3IC0gMzIwcHgpIC8gODAwKSk7XG4gIH1cbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMTIwcHgpIHtcbiAgLmZvb3RlciB7XG4gICAgcGFkZGluZy1ib3R0b206IGNhbGMoMzBweCArIDMwICogKCgxMDB2dyAtIDMyMHB4KSAvIDgwMCkpO1xuICB9XG59XG5AbWVkaWEgKG1heC13aWR0aDogNDc5Ljk4cHgpIHtcbiAgLmZvb3Rlcl9fbG9nbyB7XG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcbiAgfVxufVxuLmZvb3Rlcl9faXRlbV9mbGV4IHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICB3aWR0aDogMTAwJTtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA0NzkuOThweCkge1xuICAuZm9vdGVyX19pdGVtX2ZsZXgge1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIH1cbn1cbi5mb290ZXJfX2l0ZW06bGFzdC1jaGlsZCB7XG4gIG1hcmdpbi10b3A6IDc1cHg7XG59XG5AbWVkaWEgKG1heC13aWR0aDogMTEyMHB4KSB7XG4gIC5mb290ZXJfX2l0ZW06bGFzdC1jaGlsZCB7XG4gICAgbWFyZ2luLXRvcDogY2FsYygzMHB4ICsgNDUgKiAoKDEwMHZ3IC0gMzIwcHgpIC8gODAwKSk7XG4gIH1cbn1cbi5mb290ZXJfX2NvbnRhY3QgYSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB0ZXh0LWFsaWduOiByaWdodDtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA0NzkuOThweCkge1xuICAuZm9vdGVyX19jb250YWN0IGEge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgfVxufVxuLmZvb3RlciBhLCAuZm9vdGVyIHAge1xuICBjb2xvcjogI2ZmZjtcbiAgbGluZS1oZWlnaHQ6IDEuNGVtO1xuICB0cmFuc2l0aW9uOiBhbGwgMC4ycztcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAyMHB4O1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDExMjBweCkge1xuICAuZm9vdGVyIGEsIC5mb290ZXIgcCB7XG4gICAgZm9udC1zaXplOiBjYWxjKDE2cHggKyA0ICogKCgxMDB2dyAtIDMyMHB4KSAvIDgwMCkpO1xuICB9XG59XG4uZm9vdGVyIGE6aG92ZXIge1xuICBjb2xvcjogIzE1NzhFMDtcbn1cbi5mb290ZXIgcCB7XG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XG59XG4uZm9vdGVyIHA6bGFzdC1jaGlsZCB7XG4gIG1hcmdpbi1ib3R0b206IDA7XG59XG5AbWVkaWEgKG1heC13aWR0aDogNDc5Ljk4cHgpIHtcbiAgLmZvb3RlciBwIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIH1cbn1cbi5mb290ZXIgcCBhIHtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC41KTtcbn1cblxuLnBhZ2Uge1xuICBmbGV4OiAxIDEgYXV0bztcbn1cbkBzdXBwb3J0cyAoLXdlYmtpdC1hcHBlYXJhbmNlOm5vbmUpe1xuLmhlcm97YmFja2dyb3VuZDp1cmwoLi4vaW1nL2hlYWRlci1iZy53ZWJwKSAjMDAyRTZDIG5vLXJlcGVhdCBjZW50ZXIgcmlnaHR9XG59XG5cbiBAbWVkaWEgKG1heC13aWR0aDogMTEzMnB4KXtcblxuQHN1cHBvcnRzICgtd2Via2l0LWFwcGVhcmFuY2U6bm9uZSl7XG5cbn1cblxufVxuXG4gQG1lZGlhIChtYXgtd2lkdGg6IDk5MS45OHB4KXtcblxuQHN1cHBvcnRzICgtd2Via2l0LWFwcGVhcmFuY2U6bm9uZSl7XG5cbn1cblxufVxuXG4gQG1lZGlhIChtYXgtd2lkdGg6IDc2Ny45OHB4KXtcblxuQHN1cHBvcnRzICgtd2Via2l0LWFwcGVhcmFuY2U6bm9uZSl7XG5cbn1cblxufVxuXG4gQG1lZGlhIChtYXgtd2lkdGg6IDExMjBweCl7XG5cbkBzdXBwb3J0cyAoLXdlYmtpdC1hcHBlYXJhbmNlOm5vbmUpe1xuXG59XG5cbn1cblxuIEBtZWRpYSAobWF4LXdpZHRoOiA0NzkuOThweCl7XG5cbkBzdXBwb3J0cyAoLXdlYmtpdC1hcHBlYXJhbmNlOm5vbmUpe1xuXG59XG5cbn1cblxuIEBtZWRpYSAobWF4LXdpZHRoOiA3NjcuOThweCkgYW5kIChtYXgtd2lkdGg6IDExMjBweCl7XG5cbkBzdXBwb3J0cyAoLXdlYmtpdC1hcHBlYXJhbmNlOm5vbmUpe1xuXG59XG5cbn1cbiIsIi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG5cclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcblxyXG4vKlxyXG4vL0J1cmdlclxyXG4uaWNvbi1tZW51IHtcclxuXHRkaXNwbGF5OiBub25lO1xyXG5cdEBtZWRpYSAobWF4LXdpZHRoOiAkbWQzK3B4KSB7XHJcblx0XHRkaXNwbGF5OiBibG9jaztcclxuXHRcdHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuXHRcdHRvcDogMThweDtcclxuXHRcdHJpZ2h0OiAxMHB4O1xyXG5cdFx0d2lkdGg6IDMwcHg7XHJcblx0XHRoZWlnaHQ6IDE4cHg7XHJcblx0XHRjdXJzb3I6IHBvaW50ZXI7XHJcblx0XHR6LWluZGV4OiA1O1xyXG5cdFx0c3BhbiB7XHJcblx0XHRcdHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2UgMHM7XHJcblx0XHRcdHRvcDogY2FsYyg1MCUgLSAxcHgpO1xyXG5cdFx0XHRsZWZ0OiAwcHg7XHJcblx0XHRcdHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuXHRcdFx0d2lkdGg6IDEwMCU7XHJcblx0XHRcdGhlaWdodDogMnB4O1xyXG5cdFx0XHRiYWNrZ3JvdW5kLWNvbG9yOiAjMDAwO1xyXG5cdFx0XHQmOmZpcnN0LWNoaWxkIHtcclxuXHRcdFx0XHR0b3A6IDBweDtcclxuXHRcdFx0fVxyXG5cdFx0XHQmOmxhc3QtY2hpbGQge1xyXG5cdFx0XHRcdHRvcDogYXV0bztcclxuXHRcdFx0XHRib3R0b206IDBweDtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdFx0Ji5fYWN0aXZlIHtcclxuXHRcdFx0c3BhbiB7XHJcblx0XHRcdFx0dHJhbnNmb3JtOiBzY2FsZSgwKTtcclxuXHRcdFx0XHQmOmZpcnN0LWNoaWxkIHtcclxuXHRcdFx0XHRcdHRyYW5zZm9ybTogcm90YXRlKC00NWRlZyk7XHJcblx0XHRcdFx0XHR0b3A6IGNhbGMoNTAlIC0gMXB4KTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0JjpsYXN0LWNoaWxkIHtcclxuXHRcdFx0XHRcdHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcclxuXHRcdFx0XHRcdGJvdHRvbTogY2FsYyg1MCUgLSAxcHgpO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdH1cclxufVxyXG4qL1xyXG5cclxuLmhlYWRlciB7XHJcblx0YmFja2dyb3VuZDogI2ZmZjtcclxuXHRAaW5jbHVkZSBhZGFwdGl2LXZhbHVlKHBhZGRpbmctdG9wLCAzMCwgMTUsIDEpO1xyXG4gICAgQGluY2x1ZGUgYWRhcHRpdi12YWx1ZShwYWRkaW5nLWJvdHRvbSwgMzAsIDE1LCAxKTtcclxuXHQmX193cmFwIHtcclxuXHRcdGRpc3BsYXk6IGZsZXg7XHJcblx0XHRhbGlnbi1pdGVtczogY2VudGVyO1xyXG5cdFx0anVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG5cdFx0QG1lZGlhIChtYXgtd2lkdGg6ICRtZDEgKyBcInB4XCIpIHtcclxuXHRcdFx0ZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuXHRcdH1cclxuXHRcdEBtZWRpYSAobWF4LXdpZHRoOiAkbWQzICsgXCJweFwiKSB7XHJcblx0XHRcdGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcblx0XHR9XHJcblx0fVxyXG5cdCZfX21lbnUge1xyXG5cdFx0cG9zaXRpb246IHJlbGF0aXZlO1xyXG5cdH1cclxuXHQmX19idXJnZXIge1xyXG5cdFx0ZGlzcGxheTogbm9uZTtcclxuXHRcdEBtZWRpYSAobWF4LXdpZHRoOiAkbWQzICsgXCJweFwiKSB7XHJcblx0XHRcdGRpc3BsYXk6IGJsb2NrO1xyXG5cdFx0XHRwb3NpdGlvbjogcmVsYXRpdmU7XHJcblx0XHRcdHdpZHRoOiA0MHB4O1xyXG5cdFx0XHRoZWlnaHQ6IDQwcHg7XHJcblx0XHRcdGN1cnNvcjogcG9pbnRlcjtcclxuXHRcdFx0ei1pbmRleDogNTtcclxuXHRcdFx0c3BhbiB7XHJcblx0XHRcdFx0dHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZSAwcztcclxuXHRcdFx0XHR0b3A6IGNhbGMoNTAlIC0gMXB4KTtcclxuXHRcdFx0XHRsZWZ0OiBjYWxjKDUwJSAtIDE1cHgpO1xyXG5cdFx0XHRcdHdpZHRoOiAzMHB4O1xyXG5cdFx0XHRcdHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuXHRcdFx0XHRoZWlnaHQ6IDJweDtcclxuXHRcdFx0XHRiYWNrZ3JvdW5kLWNvbG9yOiAkYnJhbmRDb2xvcjtcclxuXHRcdFx0XHRib3JkZXItcmFkaXVzOiAycHg7XHJcblx0XHRcdFx0JjpmaXJzdC1jaGlsZCB7XHJcblx0XHRcdFx0XHR0b3A6IDEwcHg7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdCY6bGFzdC1jaGlsZCB7XHJcblx0XHRcdFx0XHR0b3A6IGF1dG87XHJcblx0XHRcdFx0XHRib3R0b206IDEwcHg7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblx0XHRcdCYuX2FjdGl2ZSB7XHJcblx0XHRcdFx0Ym9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogMDtcclxuXHRcdFx0XHRib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogMDtcclxuXHRcdFx0XHRzcGFuIHtcclxuXHRcdFx0XHRcdHRyYW5zZm9ybTogc2NhbGUoMCk7XHJcblx0XHRcdFx0XHQmOmZpcnN0LWNoaWxkIHtcclxuXHRcdFx0XHRcdFx0dHJhbnNmb3JtOiByb3RhdGUoLTQ1ZGVnKTtcclxuXHRcdFx0XHRcdFx0dG9wOiBjYWxjKDUwJSAtIDFweCk7XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHQmOmxhc3QtY2hpbGQge1xyXG5cdFx0XHRcdFx0XHR0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7XHJcblx0XHRcdFx0XHRcdGJvdHRvbTogY2FsYyg1MCUgLSAxcHgpO1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdH1cclxuXHQmX19sb2dvIHtcclxuXHRcdGltZyB7XHJcblx0XHRcdG1heC13aWR0aDogMTAwJTtcclxuXHRcdFx0aGVpZ2h0OiBhdXRvO1xyXG5cdFx0fVxyXG5cdFx0QG1lZGlhIChtYXgtd2lkdGg6ICRtZDQgKyBcInB4XCIpIHtcclxuXHRcdFx0bWF4LXdpZHRoOiA3MHZ3O1xyXG5cdFx0fVxyXG5cdH1cclxufVxyXG5cclxuLm1lbnUtdG9wIHtcclxuXHR0cmFuc2l0aW9uOiBhbGwgLjJzO1xyXG5cdCZfX2xpc3Qge1xyXG5cdFx0ZGlzcGxheTogZmxleDtcclxuXHRcdGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcblx0XHRAbWVkaWEgKG1heC13aWR0aDogJG1kMyArIFwicHhcIikge1xyXG5cdFx0XHRmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG5cdFx0XHRiYWNrZ3JvdW5kOiAkbGlnaHRHcmV5Q29sb3I7XHJcblx0XHRcdHBhZGRpbmc6IDIwcHg7XHJcblx0XHRcdGFsaWduLWl0ZW1zOiBzdGFydDtcclxuXHJcblx0XHR9XHJcblx0fVxyXG5cdCZfX2l0ZW0ge1xyXG5cdFx0bWFyZ2luLXJpZ2h0OiAzNXB4O1xyXG5cdFx0JjpsYXN0LWNoaWxkIHtcclxuXHRcdFx0bWFyZ2luLXJpZ2h0OiAwO1xyXG5cdFx0XHQubWVudS10b3BfX2xpbmsge1xyXG5cdFx0XHRcdGRpc3BsYXk6IGlubGluZS1mbGV4O1xyXG5cdFx0XHRcdGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcblx0XHRcdFx0anVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcblx0XHRcdFx0Y29sb3I6ICNmZmY7XHJcblx0XHRcdFx0YmFja2dyb3VuZDogJG1haW5Db2xvcjtcclxuXHRcdFx0XHRib3JkZXItcmFkaXVzOiA4cHg7XHJcblx0XHRcdFx0Zm9udC13ZWlnaHQ6IDUwMDtcclxuXHRcdFx0XHRoZWlnaHQ6IDQ4cHg7XHJcblx0XHRcdFx0d2lkdGg6IDIwMHB4O1xyXG5cdFx0XHRcdCY6aG92ZXIge1xyXG5cdFx0XHRcdFx0Y29sb3I6ICNmZmY7XHJcblx0XHRcdFx0XHRiYWNrZ3JvdW5kOiAkbWFpbkhvdmVyQ29sb3I7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblx0XHRcdEBtZWRpYSAobWF4LXdpZHRoOiAkbWQzICsgXCJweFwiKSB7XHJcblx0XHRcdFx0bWFyZ2luLXJpZ2h0OiAwO1xyXG5cdFx0XHRcdG1hcmdpbi1ib3R0b206IDA7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHRcdEBtZWRpYSAobWF4LXdpZHRoOiAkbWQzICsgXCJweFwiKSB7XHJcblx0XHRcdG1hcmdpbi1yaWdodDogMDtcclxuXHRcdFx0bWFyZ2luLWJvdHRvbTogMjBweDtcclxuXHRcdH1cclxuXHR9XHJcblx0Jl9fbGluayB7XHJcblx0XHRjb2xvcjogJGJyYW5kQ29sb3I7XHJcblx0XHR0cmFuc2l0aW9uOiBhbGwgLjNzO1xyXG5cdFx0Jjpob3ZlciB7XHJcblx0XHRcdGNvbG9yOiAkbWFpbkhvdmVyQ29sb3I7XHJcblx0XHR9XHJcblx0fVxyXG5cdEBtZWRpYSAobWF4LXdpZHRoOiAkbWQxICsgXCJweFwiKSB7XHJcblx0XHRtYXJnaW4tdG9wOiAyMHB4O1xyXG5cdH1cclxuXHRAbWVkaWEgKG1heC13aWR0aDogJG1kMyArIFwicHhcIikge1xyXG5cdFx0b3ZlcmZsb3c6IGhpZGRlbjtcclxuXHRcdHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuXHRcdEBpbmNsdWRlIGFkYXB0aXYtdmFsdWUodG9wLCA4NiwgNTgsIDEpO1xyXG5cdFx0cmlnaHQ6IC0xMHB4O1xyXG5cdFx0d2lkdGg6IDMzMHB4O1xyXG5cdFx0bWF4LWhlaWdodDogMDtcclxuXHRcdG1hcmdpbi10b3A6IDA7XHJcblx0fVxyXG5cdCYuX2FjdGl2ZSB7XHJcblx0XHRtYXgtaGVpZ2h0OiA1MDBweDtcclxuXHR9XHJcbn0iLCIvL9Cf0L7QtNC60LvRjtGH0LXQvdC40LUg0YjRgNC40YTRgtCwXHJcbkBtaXhpbiBmb250KCRmb250X25hbWUsICRmaWxlX25hbWUsICR3ZWlnaHQsICRzdHlsZSkge1xyXG5cdEBmb250LWZhY2Uge1xyXG5cdFx0Zm9udC1mYW1pbHk6ICRmb250X25hbWU7XHJcblx0XHRmb250LWRpc3BsYXk6IHN3YXA7XHJcblx0XHRzcmM6IHVybChcIi4uL2ZvbnRzLyN7JGZpbGVfbmFtZX0ud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpLCB1cmwoXCIuLi9mb250cy8jeyRmaWxlX25hbWV9LndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpO1xyXG5cdFx0Zm9udC13ZWlnaHQ6ICN7JHdlaWdodH07XHJcblx0XHRmb250LXN0eWxlOiAjeyRzdHlsZX07XHJcblx0fVxyXG59XHJcblxyXG4vL9CQ0LTQsNC/0YLQuNCy0L3Ri9C5INGI0YDQuNGE0YJcclxuQG1peGluIGFkYXB0aXYtZm9udCgkcGNTaXplLCAkbW9iU2l6ZSwgJG1heFNpemUpIHtcclxuXHQkYWRkU2l6ZTogJHBjU2l6ZSAtICRtb2JTaXplO1xyXG5cdEBpZiAkbWF4U2l6ZT09MSB7XHJcblx0XHQvL9Ci0L7Qu9GM0LrQviDQtdGB0LvQuCDQvNC10L3RjNGI0LUg0LrQvtC90YLQtdC50L3QtdGA0LBcclxuXHRcdGZvbnQtc2l6ZTogJHBjU2l6ZSArIHB4O1xyXG5cdFx0QG1lZGlhIChtYXgtd2lkdGg6ICN7JG1heFdpZHRoQ29udGFpbmVyICsgcHh9KSB7XHJcblx0XHRcdGZvbnQtc2l6ZTogY2FsYygjeyRtb2JTaXplICsgcHh9ICsgI3skYWRkU2l6ZX0gKiAoKDEwMHZ3IC0gMzIwcHgpIC8gI3skbWF4V2lkdGhDb250YWluZXIgLSAzMjB9KSk7XHJcblx0XHR9XHJcblx0fSBAZWxzZSBpZiAkbWF4U2l6ZT09MiB7XHJcblx0XHQvL9Ci0L7Qu9GM0LrQviDQtdGB0LvQuCDQsdC+0LvRjNGI0LUg0LrQvtC90YLQtdC50L3QtdGA0LBcclxuXHRcdGZvbnQtc2l6ZTogJHBjU2l6ZSArIHB4O1xyXG5cdFx0QG1lZGlhIChtaW4td2lkdGg6ICN7JG1heFdpZHRoQ29udGFpbmVyICsgcHh9KSB7XHJcblx0XHRcdGZvbnQtc2l6ZTogY2FsYygjeyRtb2JTaXplICsgcHh9ICsgI3skYWRkU2l6ZX0gKiAoKDEwMHZ3IC0gMzIwcHgpIC8gI3skbWF4V2lkdGggLSAzMjB9KSk7XHJcblx0XHR9XHJcblx0fSBAZWxzZSB7XHJcblx0XHQvL9CS0YHQtdCz0LTQsFxyXG5cdFx0Zm9udC1zaXplOiBjYWxjKCN7JG1vYlNpemUgKyBweH0gKyAjeyRhZGRTaXplfSAqICgoMTAwdncgLSAzMjBweCkgLyAjeyRtYXhXaWR0aCAtIDMyMH0pKTtcclxuXHR9XHJcbn1cclxuXHJcbi8v0JDQtNCw0L/RgtC40LLQvdC+0LUg0YHQstC+0LnRgdGC0LLQvlxyXG5AbWl4aW4gYWRhcHRpdi12YWx1ZSgkcHJvcGVydHksICRzdGFydFNpemUsICRtaW5TaXplLCAkdHlwZSkge1xyXG5cdCRhZGRTaXplOiAkc3RhcnRTaXplIC0gJG1pblNpemU7XHJcblx0QGlmICR0eXBlPT0xIHtcclxuXHRcdC8v0KLQvtC70YzQutC+INC10YHQu9C4INC80LXQvdGM0YjQtSDQutC+0L3RgtC10LnQvdC10YDQsFxyXG5cdFx0I3skcHJvcGVydHl9OiAkc3RhcnRTaXplICsgcHg7XHJcblx0XHRAbWVkaWEgKG1heC13aWR0aDogI3skbWF4V2lkdGhDb250YWluZXIgKyBweH0pIHtcclxuXHRcdFx0I3skcHJvcGVydHl9OiBjYWxjKCN7JG1pblNpemUgKyBweH0gKyAjeyRhZGRTaXplfSAqICgoMTAwdncgLSAzMjBweCkgLyAjeyRtYXhXaWR0aENvbnRhaW5lciAtIDMyMH0pKTtcclxuXHRcdH1cclxuXHR9IEBlbHNlIGlmICR0eXBlPT0yIHtcclxuXHRcdC8v0KLQvtC70YzQutC+INC10YHQu9C4INCx0L7Qu9GM0YjQtSDQutC+0L3RgtC10LnQvdC10YDQsFxyXG5cdFx0I3skcHJvcGVydHl9OiAkc3RhcnRTaXplICsgcHg7XHJcblx0XHRAbWVkaWEgKG1pbi13aWR0aDogI3skbWF4V2lkdGhDb250YWluZXIgKyBweH0pIHtcclxuXHRcdFx0I3skcHJvcGVydHl9OiBjYWxjKCN7JG1pblNpemUgKyBweH0gKyAjeyRhZGRTaXplfSAqICgoMTAwdncgLSAzMjBweCkgLyAjeyRtYXhXaWR0aCAtIDMyMH0pKTtcclxuXHRcdH1cclxuXHR9IEBlbHNlIHtcclxuXHRcdC8v0JLRgdC10LPQtNCwXHJcblx0XHQjeyRwcm9wZXJ0eX06IGNhbGMoI3skbWluU2l6ZSArIHB4fSArICN7JGFkZFNpemV9ICogKCgxMDB2dyAtIDMyMHB4KSAvICN7JG1heFdpZHRoIC0gMzIwfSkpO1xyXG5cdH1cclxufVxyXG4iLCIuY2FzaCB7XHJcbiAgICBiYWNrZ3JvdW5kOiAjZmZmO1xyXG4gICAgQGluY2x1ZGUgYWRhcHRpdi12YWx1ZShwYWRkaW5nLXRvcCwgMTIwLCA0MCwgMSk7XHJcbiAgICBAaW5jbHVkZSBhZGFwdGl2LXZhbHVlKHBhZGRpbmctYm90dG9tLCAxMjAsIDQwLCAxKTtcclxuICAgICZfX2luZm8ge1xyXG4gICAgICAgIEBpbmNsdWRlIGFkYXB0aXYtdmFsdWUobWFyZ2luLXRvcCwgNjAsIDMwLCAxKTtcclxuICAgIH1cclxuICAgICZfX3RpdGxlIHtcclxuICAgICAgICBmb250LXdlaWdodDogNTAwO1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDE1cHg7XHJcbiAgICAgICAgQGluY2x1ZGUgYWRhcHRpdi1mb250KDYyLCAzNSwgMSk7XHJcbiAgICAgICAgQG1lZGlhIChtYXgtd2lkdGg6ICRtZDQrcHgpIHtcclxuICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgICZfX3N1YnRpdGxlIHtcclxuICAgICAgICBsaW5lLWhlaWdodDogMS40ZW07XHJcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbiAgICAgICAgQGluY2x1ZGUgYWRhcHRpdi1mb250KDIwLCAxNCwgMSk7XHJcbiAgICAgICAgQG1lZGlhIChtYXgtd2lkdGg6ICRtZDQrcHgpIHtcclxuICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuLmluZm8tY2FzaCB7XHJcbiAgICBiYWNrZ3JvdW5kOiAkbGlnaHRHcmV5Q29sb3I7XHJcbiAgICBwYWRkaW5nLXRvcDogNDBweDtcclxuICAgIHBhZGRpbmctYm90dG9tOiA0MHB4O1xyXG4gICAgQGluY2x1ZGUgYWRhcHRpdi12YWx1ZShwYWRkaW5nLWxlZnQsIDcwLCAyMCwgMSk7XHJcbiAgICBAaW5jbHVkZSBhZGFwdGl2LXZhbHVlKHBhZGRpbmctcmlnaHQsIDcwLCAyMCwgMSk7XHJcbiAgICAmX190aXRsZSB7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IDcwMDtcclxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgbWFyZ2luOiAwIGF1dG8gNjBweDtcclxuICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICBsaW5lLWhlaWdodDogMS4yZW07XHJcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgICAgICBAaW5jbHVkZSBhZGFwdGl2LWZvbnQoMzAsIDE4LCAxKTtcclxuICAgIH1cclxuICAgICZfX3dyYXAge1xyXG4gICAgICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICAgICAgZ3JpZC1nYXA6IDMwcHg7XHJcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxNDBweCAxZnI7XHJcbiAgICAgICAgQG1lZGlhIChtYXgtd2lkdGg6ICRtZDErcHgpIHtcclxuICAgICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnI7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgJl9faW1nIHtcclxuICAgICAgICB3aWR0aDogMTQwcHg7XHJcbiAgICAgICAgaGVpZ2h0OiAxNDBweDtcclxuICAgICAgICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgICBpbWcge1xyXG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgIH1cclxuICAgICAgICBAbWVkaWEgKG1heC13aWR0aDogJG1kMitweCkge1xyXG4gICAgICAgICAgICBtYXJnaW46IGF1dG87XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgJl9fcm93IHtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xyXG4gICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICAgICAgICAmOmZpcnN0LWNoaWxkIHtcclxuICAgICAgICAgICAgcGFkZGluZy1ib3R0b206IDMwcHg7XHJcbiAgICAgICAgICAgIGJvcmRlci1ib3R0b206IDNweCBzb2xpZCAkYnJhbmRDb2xvcjtcclxuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMzBweDtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgfVxyXG4gICAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiAkbWQyK3B4KSB7XHJcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgJl9fY29sIHtcclxuICAgICAgICBAbWVkaWEgKG1heC13aWR0aDogJG1kMitweCkge1xyXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICB9XHJcbiAgICAgICAgJjpsYXN0LWNoaWxkIHtcclxuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAmX19uYW1lIHtcclxuICAgICAgICBAaW5jbHVkZSBhZGFwdGl2LWZvbnQoMjYsIDIwLCAxKTtcclxuICAgICAgICBmb250LXdlaWdodDogNTAwO1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbiAgICAgICAgQG1lZGlhIChtYXgtd2lkdGg6ICRtZDIrcHgpIHtcclxuICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgICZfX3RlYW0ge1xyXG4gICAgICAgIEBpbmNsdWRlIGFkYXB0aXYtZm9udCgyMCwgMTYsIDEpO1xyXG4gICAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiAkbWQyK3B4KSB7XHJcbiAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAmX19ib251cyB7XHJcbiAgICAgICAgc3BhbiB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMjZweDtcclxuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDUwMDtcclxuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgICAgICYuX2JpZyB7XHJcbiAgICAgICAgICAgICAgICBmb250LXdlaWdodDogNzAwO1xyXG4gICAgICAgICAgICAgICAgQGluY2x1ZGUgYWRhcHRpdi1mb250KDExNSwgODAsIDEpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHN1cCB7XHJcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgQG1lZGlhIChtYXgtd2lkdGg6ICRtZDIrcHgpIHtcclxuICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgICZfX3N0YXQge1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDE1cHg7XHJcbiAgICAgICAgJl90aXRsZSB7XHJcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbiAgICAgICAgICAgIEBpbmNsdWRlIGFkYXB0aXYtZm9udCgyMCwgMTYsIDEpO1xyXG4gICAgICAgIH1cclxuICAgICAgICAmOmxhc3QtY2hpbGQge1xyXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAwO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuLnN0YXQtY2FzaCB7XHJcbiAgICBkaXNwbGF5OiBncmlkO1xyXG4gICAgZ3JpZC1nYXA6IDE1cHg7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxNDBweCBtaW5tYXgoMzE1cHgsIDFmcik7XHJcbiAgICAmX19uYW1lIHtcclxuICAgICAgICBAaW5jbHVkZSBhZGFwdGl2LWZvbnQoMjAsIDE2LCAxKTtcclxuICAgIH1cclxuICAgICZfX3JvdyB7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogNHB4O1xyXG4gICAgICAgIGhlaWdodDogMzJweDtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICBiYWNrZ3JvdW5kOiAkZ3JleUNvbG9yO1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgcGFkZGluZzogMCAxMHB4O1xyXG4gICAgICAgIHNwYW4ge1xyXG4gICAgICAgICAgICBmb250LXdlaWdodDogNzAwO1xyXG4gICAgICAgICAgICBjb2xvcjogI2ZmZjtcclxuICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgICAgICB6LWluZGV4OiAyO1xyXG4gICAgICAgICAgICBAaW5jbHVkZSBhZGFwdGl2LWZvbnQoMjgsIDE4LCAxKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgJjo6YWZ0ZXIge1xyXG4gICAgICAgICAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICB6LWluZGV4OiAxO1xyXG4gICAgICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgICAgICB0b3A6IDA7XHJcbiAgICAgICAgICAgIGJvdHRvbTogMDtcclxuICAgICAgICAgICAgYmFja2dyb3VuZDogJGJyYW5kQ29sb3I7XHJcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDRweDsgIFxyXG4gICAgICAgICAgICB3aWR0aDogMTIlOyAgICAgICAgICBcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAmOm50aC1jaGlsZCgxKSB7ICAgICAgICBcclxuICAgICAgICAuc3RhdC1jYXNoX19yb3cge1xyXG4gICAgICAgICAgICAmOjphZnRlciB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogNzUlO1xyXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZDogJGdyZWVuQ29sb3I7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAmOm50aC1jaGlsZCgyKSB7ICAgICAgICBcclxuICAgICAgICAuc3RhdC1jYXNoX19yb3cge1xyXG4gICAgICAgICAgICAmOjphZnRlciB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogNjAlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgJjpudGgtY2hpbGQoMykgeyAgICAgICAgXHJcbiAgICAgICAgLnN0YXQtY2FzaF9fcm93IHtcclxuICAgICAgICAgICAgJjo6YWZ0ZXIge1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDUwJTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgICZfX2Fubm90YXRpb24ge1xyXG4gICAgICAgIGdyaWQtY29sdW1uOiAyLzM7XHJcbiAgICAgICAgQGluY2x1ZGUgYWRhcHRpdi1mb250KDIwLCAxNiwgMSk7XHJcbiAgICAgICAgcGFkZGluZzogMTBweCAwO1xyXG4gICAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiAkbWQyK3B4KSB7XHJcbiAgICAgICAgICAgIGdyaWQtY29sdW1uOiAxLzM7XHJcbiAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogJG1kMytweCkge1xyXG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMTQwcHggMWZyO1xyXG4gICAgfVxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6ICRtZDQrcHgpIHtcclxuICAgICAgICBncmlkLXRlbXBsYXRlLXJvd3M6IGF1dG8gYXV0bztcclxuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmcjtcclxuICAgICAgICBncmlkLWdhcDogNXB4O1xyXG4gICAgfVxyXG59IiwiLmhlcm8ge1xyXG4gICAgYmFja2dyb3VuZDogdXJsKC4uL2ltZy9oZWFkZXItYmcuanBnKSAkYnJhbmRDb2xvciBuby1yZXBlYXQgY2VudGVyIHJpZ2h0O1xyXG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcclxuICAgIEBpbmNsdWRlIGFkYXB0aXYtdmFsdWUobWluLWhlaWdodCwgNjUwLCAyNTAsIDEpO1xyXG4gICAgJl9fd3JhcCB7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgIH1cclxuICAgICZfX2l0ZW0ge1xyXG4gICAgICAgIGZsZXg6IDAgMSA2MCU7XHJcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICBAaW5jbHVkZSBhZGFwdGl2LXZhbHVlKHBhZGRpbmctdG9wLCAxMjAsIDQwLCAxKTtcclxuICAgICAgICBAaW5jbHVkZSBhZGFwdGl2LXZhbHVlKHBhZGRpbmctYm90dG9tLCAxMjAsIDQwLCAxKTtcclxuICAgICAgICBAbWVkaWEgKG1heC13aWR0aDogJG1kMStweCkge1xyXG4gICAgICAgICAgICBmbGV4OiAwIDEgODAlO1xyXG4gICAgICAgIH1cclxuICAgICAgICBAbWVkaWEgKG1heC13aWR0aDogJG1kMitweCkge1xyXG4gICAgICAgICAgICBmbGV4OiAwIDEgMTAwJTtcclxuICAgICAgICB9XHJcbiAgICAgICAgQG1lZGlhIChtYXgtd2lkdGg6ICRtZDQrcHgpIHtcclxuICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgICZfX3RpdGxlIHtcclxuICAgICAgICBjb2xvcjogI2ZmZjtcclxuICAgICAgICBmb250LXdlaWdodDogNzAwOyAgICBcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAzNXB4O1xyXG4gICAgICAgIEBpbmNsdWRlIGFkYXB0aXYtZm9udCg5MiwgNDAsIDEpO1xyXG4gICAgfVxyXG4gICAgJl9fc3VidGl0bGUge1xyXG4gICAgICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbiAgICAgICAgQGluY2x1ZGUgYWRhcHRpdi1mb250KDM2LCAyMCwgMSk7XHJcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEuM2VtO1xyXG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIH1cclxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAkbWQzK3B4KSB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIGNlbnRlcjtcclxuICAgIH1cclxufSIsIi5iZWxheSB7XHJcbiAgICBiYWNrZ3JvdW5kOiAkYnJhbmRDb2xvcjtcclxuICAgICZfX3dyYXAge1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgQG1lZGlhIChtYXgtd2lkdGg6ICRtZDMrcHgpIHtcclxuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgJl9faXRlbSB7XHJcbiAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgICY6Zmlyc3QtY2hpbGQge1xyXG4gICAgICAgICAgICBmbGV4OiAwIDEgMzglO1xyXG4gICAgICAgICAgICBAaW5jbHVkZSBhZGFwdGl2LXZhbHVlKHBhZGRpbmctdG9wLCAxMTAsIDQwLCAxKTtcclxuICAgICAgICAgICAgQG1lZGlhIChtYXgtd2lkdGg6ICRtZDMrcHgpIHtcclxuICAgICAgICAgICAgICAgIGZsZXg6IDAgMSAxMDAlO1xyXG4gICAgICAgICAgICAgICAgQGluY2x1ZGUgYWRhcHRpdi12YWx1ZShwYWRkaW5nLWJvdHRvbSwgODAsIDQwLCAxKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICAmOmxhc3QtY2hpbGQge1xyXG4gICAgICAgICAgICBmbGV4OiAwIDEgNjIlO1xyXG4gICAgICAgICAgICBAbWVkaWEgKG1heC13aWR0aDogJG1kMytweCkge1xyXG4gICAgICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgICZfX2ltZyB7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgIHJpZ2h0OiAtOTBweDtcclxuICAgICAgICB0ZXh0LWFsaWduOiByaWdodDtcclxuICAgIH1cclxuICAgICZfX3RpdGxlIHtcclxuICAgICAgICBjb2xvcjogI2ZmZjtcclxuICAgICAgICBmb250LXdlaWdodDogNTAwO1xyXG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxLjJlbTtcclxuICAgICAgICBAaW5jbHVkZSBhZGFwdGl2LXZhbHVlKG1hcmdpbi1ib3R0b20sIDUwLCAyMCwgMSk7XHJcbiAgICAgICAgQGluY2x1ZGUgYWRhcHRpdi1mb250KDYyLCAzMCwgMSk7XHJcbiAgICAgICAgQG1lZGlhIChtYXgtd2lkdGg6ICRtZDQrcHgpIHtcclxuICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIHAge1xyXG4gICAgICAgIEBpbmNsdWRlIGFkYXB0aXYtZm9udCgyMCwgMTYsIDEpO1xyXG4gICAgICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEuNGVtO1xyXG4gICAgICAgICY6bGFzdC1jaGlsZCB7XHJcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDA7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiAkbWQ0K3B4KSB7XHJcbiAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0iLCIuaW5jb21lIHtcclxuICAgIEBpbmNsdWRlIGFkYXB0aXYtdmFsdWUocGFkZGluZy10b3AsIDExMCwgNDAsIDEpO1xyXG4gICAgQGluY2x1ZGUgYWRhcHRpdi12YWx1ZShwYWRkaW5nLWJvdHRvbSwgMTEwLCA0MCwgMSk7XHJcblxyXG4gICAgYmFja2dyb3VuZDogJGdyZWVuQ29sb3I7XHJcbiAgICAgICAgJl9fdGl0bGUge1xyXG4gICAgICAgICAgICBAaW5jbHVkZSBhZGFwdGl2LWZvbnQoNjIsIDMwLCAxKTsgXHJcbiAgICAgICAgICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgICAgICAgICBmb250LXdlaWdodDogNTAwO1xyXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAxNXB4O1xyXG4gICAgICAgICAgICBAbWVkaWEgKG1heC13aWR0aDogJG1kNCtweCkge1xyXG4gICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgICZfX3N1YnRpdGxlIHtcclxuICAgICAgICAgICAgQGluY2x1ZGUgYWRhcHRpdi1mb250KDIwLCAxNiwgMSk7XHJcbiAgICAgICAgICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgICAgICAgICBsaW5lLWhlaWdodDogMS4yZW07XHJcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgICAgICBAaW5jbHVkZSBhZGFwdGl2LXZhbHVlKG1hcmdpbi1ib3R0b20sIDkwLCAyMCwgMSk7XHJcbiAgICAgICAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiAkbWQ0K3B4KSB7XHJcbiAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgJl9fd3JhcCB7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIG1pbm1heCg0NzBweCwgMWZyKSAxZnI7XHJcbiAgICAgICAgICAgIGdyaWQtZ2FwOiAzMHB4O1xyXG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHN0cmV0Y2g7XHJcbiAgICAgICAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiAkbWQxK3B4KSB7XHJcbiAgICAgICAgICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAxZnIgMWZyO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiAkbWQzK3B4KSB7XHJcbiAgICAgICAgICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmcjtcclxuICAgICAgICAgICAgICAgIGdyaWQtYXV0by1mbG93OiByb3c7XHJcbiAgICAgICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICAmX19pdGVtIHtcclxuICAgICAgICAgICAgJjpsYXN0LWNoaWxkIHtcclxuICAgICAgICAgICAgICAgIGp1c3RpZnktc2VsZjogZW5kO1xyXG4gICAgICAgICAgICAgICAgQG1lZGlhIChtYXgtd2lkdGg6ICRtZDMrcHgpIHtcclxuICAgICAgICAgICAgICAgICAgICBqdXN0aWZ5LXNlbGY6IGNlbnRlcjtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBAbWVkaWEgKG1heC13aWR0aDogJG1kMytweCkge1xyXG4gICAgICAgICAgICAgICAganVzdGlmeS1zZWxmOiBjZW50ZXI7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgJl9faW1nIHtcclxuICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgICAgICB0b3A6IDIwcHg7XHJcbiAgICAgICAgICAgIGZpbHRlcjogZHJvcC1zaGFkb3coMTZweCAyMnB4IDUwcHggcmdiYSgwLCAwLCAwLCAwLjM4KSkgZHJvcC1zaGFkb3coMTBweCAxMHB4IDIycHggcmdiYSgwLCAwLCAwLCAwLjE3KSk7XHJcbiAgICAgICAgICAgIGltZyB7XHJcbiAgICAgICAgICAgICAgICBtYXgtd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgQG1lZGlhIChtYXgtd2lkdGg6ICRtZDMrcHgpIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiA1MCU7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW46IGF1dG87XHJcbiAgICAgICAgICAgICAgICB0b3A6IC0xMHB4O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG59XHJcblxyXG4uaW5jb21lLWluZm8ge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgICZfX251bSB7XHJcbiAgICAgICAgQGluY2x1ZGUgYWRhcHRpdi1mb250KDE2OCwgODAsIDEpOyBcclxuICAgICAgICBjb2xvcjogI2ZmZjtcclxuICAgICAgICBmb250LXdlaWdodDogNzAwO1xyXG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxZW07XHJcbiAgICAgICAgc3BhbiB7XHJcbiAgICAgICAgICAgIEBpbmNsdWRlIGFkYXB0aXYtZm9udCg3NywgMzUsIDEpOyBcclxuICAgICAgICB9XHJcbiAgICAgICAgQG1lZGlhIChtYXgtd2lkdGg6ICRtZDQrcHgpIHtcclxuICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgICZfX3ByZXRleHQge1xyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICB0b3A6IDMwcHg7XHJcbiAgICAgICAgY29sb3I6ICNmZmY7XHJcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiA1cHg7XHJcbiAgICAgICAgQGluY2x1ZGUgYWRhcHRpdi1mb250KDIwLCAxOCwgMSk7XHJcbiAgICAgICAgQG1lZGlhIChtYXgtd2lkdGg6ICRtZDQrcHgpIHtcclxuICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDA7XHJcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDVweDtcclxuICAgICAgICAgICAgdG9wOiAwO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgICZfX3Bvc3R0ZXh0IHtcclxuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTEyMCUpO1xyXG4gICAgICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICAgICAgICBsaW5lLWhlaWdodDogMWVtO1xyXG4gICAgICAgIEBpbmNsdWRlIGFkYXB0aXYtZm9udCgyNSwgMTgsIDEpO1xyXG4gICAgfVxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6ICRtZDQrcHgpIHtcclxuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgfVxyXG59IiwiLmFwcGx5IHtcclxuICAgIGJhY2tncm91bmQ6ICRsaWdodEdyZXlDb2xvcjtcclxuICAgIGlmcmFtZSB7XHJcbiAgICAgICAgZmxvYXQ6IGxlZnQ7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgaGVpZ2h0OiBhdXRvO1xyXG4gICAgICAgIG1pbi1oZWlnaHQ6IDYxMHB4O1xyXG4gICAgICAgIGJhY2tncm91bmQ6ICRsaWdodEdyZXlDb2xvcjtcclxuICAgIH1cclxufSIsIi5mb290ZXIge1xyXG4gICAgYmFja2dyb3VuZDogJGJyYW5kQ29sb3I7XHJcbiAgICBAaW5jbHVkZSBhZGFwdGl2LXZhbHVlKHBhZGRpbmctdG9wLCA2MCwgMzAsIDEpO1xyXG4gICAgQGluY2x1ZGUgYWRhcHRpdi12YWx1ZShwYWRkaW5nLWJvdHRvbSwgNjAsIDMwLCAxKTtcclxuICAgICZfX2xvZ28ge1xyXG4gICAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiAkbWQ0K3B4KSB7XHJcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgJl9faXRlbSB7XHJcbiAgICAgICAgJl9mbGV4IHtcclxuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgQG1lZGlhIChtYXgtd2lkdGg6ICRtZDQrcHgpIHtcclxuICAgICAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgJjpsYXN0LWNoaWxkIHtcclxuICAgICAgICAgICAgQGluY2x1ZGUgYWRhcHRpdi12YWx1ZShtYXJnaW4tdG9wLCA3NSwgMzAsIDEpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgICZfX2NvbnRhY3Qge1xyXG4gICAgICAgIGEge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jazsgICAgICAgICAgICBcclxuICAgICAgICAgICAgdGV4dC1hbGlnbjogcmlnaHQ7XHJcbiAgICAgICAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiAkbWQ0K3B4KSB7XHJcbiAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgICAgIH0gICAgICAgICAgICBcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBhLCBwIHtcclxuICAgICAgICBjb2xvcjogI2ZmZjtcclxuICAgICAgICBsaW5lLWhlaWdodDogMS40ZW07XHJcbiAgICAgICAgdHJhbnNpdGlvbjogYWxsIC4ycztcclxuICAgICAgICBmb250LXdlaWdodDogNDAwO1xyXG4gICAgICAgIEBpbmNsdWRlIGFkYXB0aXYtZm9udCgyMCwgMTYsIDEpO1xyXG4gICAgfVxyXG4gICAgYSB7XHJcbiAgICAgICAgJjpob3ZlciB7XHJcbiAgICAgICAgICAgIGNvbG9yOiAkbWFpbkhvdmVyQ29sb3I7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgcCB7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICAgICAgICAmOmxhc3QtY2hpbGQge1xyXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAwO1xyXG4gICAgICAgIH1cclxuICAgICAgICBAbWVkaWEgKG1heC13aWR0aDogJG1kNCtweCkge1xyXG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGEge1xyXG4gICAgICAgICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgcmdiYSgyNTUsMjU1LDI1NSwuNSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbiJdfQ== */